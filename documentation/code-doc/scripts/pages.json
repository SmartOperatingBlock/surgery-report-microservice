[{"name":"ANESTHESIA","description":"application.presenter.api.model.process.SurgicalProcessStepApiDto.ANESTHESIA","location":"surgery-report-microservice/application.presenter.api.model.process/-surgical-process-step-api-dto/-a-n-e-s-t-h-e-s-i-a/index.html","searchKeys":["ANESTHESIA","ANESTHESIA","application.presenter.api.model.process.SurgicalProcessStepApiDto.ANESTHESIA"]},{"name":"ANESTHESIA","description":"application.presenter.event.model.ProcessStepEventDto.ANESTHESIA","location":"surgery-report-microservice/application.presenter.event.model/-process-step-event-dto/-a-n-e-s-t-h-e-s-i-a/index.html","searchKeys":["ANESTHESIA","ANESTHESIA","application.presenter.event.model.ProcessStepEventDto.ANESTHESIA"]},{"name":"ANESTHESIA","description":"entity.process.SurgicalProcessStep.ANESTHESIA","location":"surgery-report-microservice/entity.process/-surgical-process-step/-a-n-e-s-t-h-e-s-i-a/index.html","searchKeys":["ANESTHESIA","ANESTHESIA","entity.process.SurgicalProcessStep.ANESTHESIA"]},{"name":"CATHETER","description":"application.presenter.api.model.medicaldevice.ImplantableMedicalDeviceApiDtoType.CATHETER","location":"surgery-report-microservice/application.presenter.api.model.medicaldevice/-implantable-medical-device-api-dto-type/-c-a-t-h-e-t-e-r/index.html","searchKeys":["CATHETER","CATHETER","application.presenter.api.model.medicaldevice.ImplantableMedicalDeviceApiDtoType.CATHETER"]},{"name":"CATHETER","description":"application.presenter.event.model.ImplantableMedicalDeviceTypeEventDto.CATHETER","location":"surgery-report-microservice/application.presenter.event.model/-implantable-medical-device-type-event-dto/-c-a-t-h-e-t-e-r/index.html","searchKeys":["CATHETER","CATHETER","application.presenter.event.model.ImplantableMedicalDeviceTypeEventDto.CATHETER"]},{"name":"CATHETER","description":"entity.medicaldevice.ImplantableMedicalDeviceType.CATHETER","location":"surgery-report-microservice/entity.medicaldevice/-implantable-medical-device-type/-c-a-t-h-e-t-e-r/index.html","searchKeys":["CATHETER","CATHETER","entity.medicaldevice.ImplantableMedicalDeviceType.CATHETER"]},{"name":"CELSIUS","description":"application.presenter.event.model.TemperatureUnitEventDto.CELSIUS","location":"surgery-report-microservice/application.presenter.event.model/-temperature-unit-event-dto/-c-e-l-s-i-u-s/index.html","searchKeys":["CELSIUS","CELSIUS","application.presenter.event.model.TemperatureUnitEventDto.CELSIUS"]},{"name":"CELSIUS","description":"application.presenter.external.model.BuildingManagementDtoModel.TemperatureUnitResultDto.CELSIUS","location":"surgery-report-microservice/application.presenter.external.model/-building-management-dto-model/-temperature-unit-result-dto/-c-e-l-s-i-u-s/index.html","searchKeys":["CELSIUS","CELSIUS","application.presenter.external.model.BuildingManagementDtoModel.TemperatureUnitResultDto.CELSIUS"]},{"name":"CELSIUS","description":"entity.measurements.TemperatureUnit.CELSIUS","location":"surgery-report-microservice/entity.measurements/-temperature-unit/-c-e-l-s-i-u-s/index.html","searchKeys":["CELSIUS","CELSIUS","entity.measurements.TemperatureUnit.CELSIUS"]},{"name":"ENDOSCOPE","description":"application.presenter.api.model.medicaldevice.MedicalTechnologyApiDtoType.ENDOSCOPE","location":"surgery-report-microservice/application.presenter.api.model.medicaldevice/-medical-technology-api-dto-type/-e-n-d-o-s-c-o-p-e/index.html","searchKeys":["ENDOSCOPE","ENDOSCOPE","application.presenter.api.model.medicaldevice.MedicalTechnologyApiDtoType.ENDOSCOPE"]},{"name":"ENDOSCOPE","description":"application.presenter.event.model.MedicalTechnologyTypeEventDto.ENDOSCOPE","location":"surgery-report-microservice/application.presenter.event.model/-medical-technology-type-event-dto/-e-n-d-o-s-c-o-p-e/index.html","searchKeys":["ENDOSCOPE","ENDOSCOPE","application.presenter.event.model.MedicalTechnologyTypeEventDto.ENDOSCOPE"]},{"name":"ENDOSCOPE","description":"entity.medicaldevice.MedicalTechnologyType.ENDOSCOPE","location":"surgery-report-microservice/entity.medicaldevice/-medical-technology-type/-e-n-d-o-s-c-o-p-e/index.html","searchKeys":["ENDOSCOPE","ENDOSCOPE","entity.medicaldevice.MedicalTechnologyType.ENDOSCOPE"]},{"name":"END_OF_SURGERY","description":"application.presenter.api.model.process.SurgicalProcessStepApiDto.END_OF_SURGERY","location":"surgery-report-microservice/application.presenter.api.model.process/-surgical-process-step-api-dto/-e-n-d_-o-f_-s-u-r-g-e-r-y/index.html","searchKeys":["END_OF_SURGERY","END_OF_SURGERY","application.presenter.api.model.process.SurgicalProcessStepApiDto.END_OF_SURGERY"]},{"name":"END_OF_SURGERY","description":"application.presenter.event.model.ProcessStepEventDto.END_OF_SURGERY","location":"surgery-report-microservice/application.presenter.event.model/-process-step-event-dto/-e-n-d_-o-f_-s-u-r-g-e-r-y/index.html","searchKeys":["END_OF_SURGERY","END_OF_SURGERY","application.presenter.event.model.ProcessStepEventDto.END_OF_SURGERY"]},{"name":"END_OF_SURGERY","description":"entity.process.SurgicalProcessStep.END_OF_SURGERY","location":"surgery-report-microservice/entity.process/-surgical-process-step/-e-n-d_-o-f_-s-u-r-g-e-r-y/index.html","searchKeys":["END_OF_SURGERY","END_OF_SURGERY","entity.process.SurgicalProcessStep.END_OF_SURGERY"]},{"name":"ENTER","description":"application.presenter.api.model.tracking.TrackApiDtoType.ENTER","location":"surgery-report-microservice/application.presenter.api.model.tracking/-track-api-dto-type/-e-n-t-e-r/index.html","searchKeys":["ENTER","ENTER","application.presenter.api.model.tracking.TrackApiDtoType.ENTER"]},{"name":"ENTER","description":"application.presenter.external.model.StaffTrackingDtoModel.TrackingTypeResultDto.ENTER","location":"surgery-report-microservice/application.presenter.external.model/-staff-tracking-dto-model/-tracking-type-result-dto/-e-n-t-e-r/index.html","searchKeys":["ENTER","ENTER","application.presenter.external.model.StaffTrackingDtoModel.TrackingTypeResultDto.ENTER"]},{"name":"ENTER","description":"entity.tracking.TrackType.ENTER","location":"surgery-report-microservice/entity.tracking/-track-type/-e-n-t-e-r/index.html","searchKeys":["ENTER","ENTER","entity.tracking.TrackType.ENTER"]},{"name":"EXIT","description":"application.presenter.api.model.tracking.TrackApiDtoType.EXIT","location":"surgery-report-microservice/application.presenter.api.model.tracking/-track-api-dto-type/-e-x-i-t/index.html","searchKeys":["EXIT","EXIT","application.presenter.api.model.tracking.TrackApiDtoType.EXIT"]},{"name":"EXIT","description":"application.presenter.external.model.StaffTrackingDtoModel.TrackingTypeResultDto.EXIT","location":"surgery-report-microservice/application.presenter.external.model/-staff-tracking-dto-model/-tracking-type-result-dto/-e-x-i-t/index.html","searchKeys":["EXIT","EXIT","application.presenter.external.model.StaffTrackingDtoModel.TrackingTypeResultDto.EXIT"]},{"name":"EXIT","description":"entity.tracking.TrackType.EXIT","location":"surgery-report-microservice/entity.tracking/-track-type/-e-x-i-t/index.html","searchKeys":["EXIT","EXIT","entity.tracking.TrackType.EXIT"]},{"name":"INTERRUPTED","description":"application.presenter.event.model.ProcessStateEventDto.INTERRUPTED","location":"surgery-report-microservice/application.presenter.event.model/-process-state-event-dto/-i-n-t-e-r-r-u-p-t-e-d/index.html","searchKeys":["INTERRUPTED","INTERRUPTED","application.presenter.event.model.ProcessStateEventDto.INTERRUPTED"]},{"name":"LUX","description":"application.presenter.external.model.BuildingManagementDtoModel.LuminosityUnitResultDto.LUX","location":"surgery-report-microservice/application.presenter.external.model/-building-management-dto-model/-luminosity-unit-result-dto/-l-u-x/index.html","searchKeys":["LUX","LUX","application.presenter.external.model.BuildingManagementDtoModel.LuminosityUnitResultDto.LUX"]},{"name":"LUX","description":"entity.measurements.LightUnit.LUX","location":"surgery-report-microservice/entity.measurements/-light-unit/-l-u-x/index.html","searchKeys":["LUX","LUX","entity.measurements.LightUnit.LUX"]},{"name":"OPERATING_ROOM","description":"application.presenter.api.model.room.RoomApiDtoType.OPERATING_ROOM","location":"surgery-report-microservice/application.presenter.api.model.room/-room-api-dto-type/-o-p-e-r-a-t-i-n-g_-r-o-o-m/index.html","searchKeys":["OPERATING_ROOM","OPERATING_ROOM","application.presenter.api.model.room.RoomApiDtoType.OPERATING_ROOM"]},{"name":"OPERATING_ROOM","description":"entity.room.RoomType.OPERATING_ROOM","location":"surgery-report-microservice/entity.room/-room-type/-o-p-e-r-a-t-i-n-g_-r-o-o-m/index.html","searchKeys":["OPERATING_ROOM","OPERATING_ROOM","entity.room.RoomType.OPERATING_ROOM"]},{"name":"PACEMAKER","description":"application.presenter.api.model.medicaldevice.ImplantableMedicalDeviceApiDtoType.PACEMAKER","location":"surgery-report-microservice/application.presenter.api.model.medicaldevice/-implantable-medical-device-api-dto-type/-p-a-c-e-m-a-k-e-r/index.html","searchKeys":["PACEMAKER","PACEMAKER","application.presenter.api.model.medicaldevice.ImplantableMedicalDeviceApiDtoType.PACEMAKER"]},{"name":"PACEMAKER","description":"entity.medicaldevice.ImplantableMedicalDeviceType.PACEMAKER","location":"surgery-report-microservice/entity.medicaldevice/-implantable-medical-device-type/-p-a-c-e-m-a-k-e-r/index.html","searchKeys":["PACEMAKER","PACEMAKER","entity.medicaldevice.ImplantableMedicalDeviceType.PACEMAKER"]},{"name":"PACE_MAKER","description":"application.presenter.event.model.ImplantableMedicalDeviceTypeEventDto.PACE_MAKER","location":"surgery-report-microservice/application.presenter.event.model/-implantable-medical-device-type-event-dto/-p-a-c-e_-m-a-k-e-r/index.html","searchKeys":["PACE_MAKER","PACE_MAKER","application.presenter.event.model.ImplantableMedicalDeviceTypeEventDto.PACE_MAKER"]},{"name":"PATIENT_IN_PREPARATION","description":"application.presenter.api.model.process.SurgicalProcessStepApiDto.PATIENT_IN_PREPARATION","location":"surgery-report-microservice/application.presenter.api.model.process/-surgical-process-step-api-dto/-p-a-t-i-e-n-t_-i-n_-p-r-e-p-a-r-a-t-i-o-n/index.html","searchKeys":["PATIENT_IN_PREPARATION","PATIENT_IN_PREPARATION","application.presenter.api.model.process.SurgicalProcessStepApiDto.PATIENT_IN_PREPARATION"]},{"name":"PATIENT_IN_PREPARATION","description":"application.presenter.event.model.ProcessStepEventDto.PATIENT_IN_PREPARATION","location":"surgery-report-microservice/application.presenter.event.model/-process-step-event-dto/-p-a-t-i-e-n-t_-i-n_-p-r-e-p-a-r-a-t-i-o-n/index.html","searchKeys":["PATIENT_IN_PREPARATION","PATIENT_IN_PREPARATION","application.presenter.event.model.ProcessStepEventDto.PATIENT_IN_PREPARATION"]},{"name":"PATIENT_IN_PREPARATION","description":"entity.process.SurgicalProcessStep.PATIENT_IN_PREPARATION","location":"surgery-report-microservice/entity.process/-surgical-process-step/-p-a-t-i-e-n-t_-i-n_-p-r-e-p-a-r-a-t-i-o-n/index.html","searchKeys":["PATIENT_IN_PREPARATION","PATIENT_IN_PREPARATION","entity.process.SurgicalProcessStep.PATIENT_IN_PREPARATION"]},{"name":"PATIENT_ON_OPERATING_TABLE","description":"application.presenter.api.model.process.SurgicalProcessStepApiDto.PATIENT_ON_OPERATING_TABLE","location":"surgery-report-microservice/application.presenter.api.model.process/-surgical-process-step-api-dto/-p-a-t-i-e-n-t_-o-n_-o-p-e-r-a-t-i-n-g_-t-a-b-l-e/index.html","searchKeys":["PATIENT_ON_OPERATING_TABLE","PATIENT_ON_OPERATING_TABLE","application.presenter.api.model.process.SurgicalProcessStepApiDto.PATIENT_ON_OPERATING_TABLE"]},{"name":"PATIENT_ON_OPERATING_TABLE","description":"application.presenter.event.model.ProcessStepEventDto.PATIENT_ON_OPERATING_TABLE","location":"surgery-report-microservice/application.presenter.event.model/-process-step-event-dto/-p-a-t-i-e-n-t_-o-n_-o-p-e-r-a-t-i-n-g_-t-a-b-l-e/index.html","searchKeys":["PATIENT_ON_OPERATING_TABLE","PATIENT_ON_OPERATING_TABLE","application.presenter.event.model.ProcessStepEventDto.PATIENT_ON_OPERATING_TABLE"]},{"name":"PATIENT_ON_OPERATING_TABLE","description":"entity.process.SurgicalProcessStep.PATIENT_ON_OPERATING_TABLE","location":"surgery-report-microservice/entity.process/-surgical-process-step/-p-a-t-i-e-n-t_-o-n_-o-p-e-r-a-t-i-n-g_-t-a-b-l-e/index.html","searchKeys":["PATIENT_ON_OPERATING_TABLE","PATIENT_ON_OPERATING_TABLE","entity.process.SurgicalProcessStep.PATIENT_ON_OPERATING_TABLE"]},{"name":"PATIENT_UNDER_OBSERVATION","description":"application.presenter.api.model.process.SurgicalProcessStepApiDto.PATIENT_UNDER_OBSERVATION","location":"surgery-report-microservice/application.presenter.api.model.process/-surgical-process-step-api-dto/-p-a-t-i-e-n-t_-u-n-d-e-r_-o-b-s-e-r-v-a-t-i-o-n/index.html","searchKeys":["PATIENT_UNDER_OBSERVATION","PATIENT_UNDER_OBSERVATION","application.presenter.api.model.process.SurgicalProcessStepApiDto.PATIENT_UNDER_OBSERVATION"]},{"name":"PATIENT_UNDER_OBSERVATION","description":"application.presenter.event.model.ProcessStepEventDto.PATIENT_UNDER_OBSERVATION","location":"surgery-report-microservice/application.presenter.event.model/-process-step-event-dto/-p-a-t-i-e-n-t_-u-n-d-e-r_-o-b-s-e-r-v-a-t-i-o-n/index.html","searchKeys":["PATIENT_UNDER_OBSERVATION","PATIENT_UNDER_OBSERVATION","application.presenter.event.model.ProcessStepEventDto.PATIENT_UNDER_OBSERVATION"]},{"name":"PATIENT_UNDER_OBSERVATION","description":"entity.process.SurgicalProcessStep.PATIENT_UNDER_OBSERVATION","location":"surgery-report-microservice/entity.process/-surgical-process-step/-p-a-t-i-e-n-t_-u-n-d-e-r_-o-b-s-e-r-v-a-t-i-o-n/index.html","searchKeys":["PATIENT_UNDER_OBSERVATION","PATIENT_UNDER_OBSERVATION","entity.process.SurgicalProcessStep.PATIENT_UNDER_OBSERVATION"]},{"name":"POST_SURGERY","description":"application.presenter.event.model.ProcessStateEventDto.POST_SURGERY","location":"surgery-report-microservice/application.presenter.event.model/-process-state-event-dto/-p-o-s-t_-s-u-r-g-e-r-y/index.html","searchKeys":["POST_SURGERY","POST_SURGERY","application.presenter.event.model.ProcessStateEventDto.POST_SURGERY"]},{"name":"PRE_OPERATING_ROOM","description":"application.presenter.api.model.room.RoomApiDtoType.PRE_OPERATING_ROOM","location":"surgery-report-microservice/application.presenter.api.model.room/-room-api-dto-type/-p-r-e_-o-p-e-r-a-t-i-n-g_-r-o-o-m/index.html","searchKeys":["PRE_OPERATING_ROOM","PRE_OPERATING_ROOM","application.presenter.api.model.room.RoomApiDtoType.PRE_OPERATING_ROOM"]},{"name":"PRE_OPERATING_ROOM","description":"entity.room.RoomType.PRE_OPERATING_ROOM","location":"surgery-report-microservice/entity.room/-room-type/-p-r-e_-o-p-e-r-a-t-i-n-g_-r-o-o-m/index.html","searchKeys":["PRE_OPERATING_ROOM","PRE_OPERATING_ROOM","entity.room.RoomType.PRE_OPERATING_ROOM"]},{"name":"PRE_SURGERY","description":"application.presenter.event.model.ProcessStateEventDto.PRE_SURGERY","location":"surgery-report-microservice/application.presenter.event.model/-process-state-event-dto/-p-r-e_-s-u-r-g-e-r-y/index.html","searchKeys":["PRE_SURGERY","PRE_SURGERY","application.presenter.event.model.ProcessStateEventDto.PRE_SURGERY"]},{"name":"SURGERY","description":"application.presenter.event.model.ProcessStateEventDto.SURGERY","location":"surgery-report-microservice/application.presenter.event.model/-process-state-event-dto/-s-u-r-g-e-r-y/index.html","searchKeys":["SURGERY","SURGERY","application.presenter.event.model.ProcessStateEventDto.SURGERY"]},{"name":"SURGERY_IN_PROGRESS","description":"application.presenter.api.model.process.SurgicalProcessStepApiDto.SURGERY_IN_PROGRESS","location":"surgery-report-microservice/application.presenter.api.model.process/-surgical-process-step-api-dto/-s-u-r-g-e-r-y_-i-n_-p-r-o-g-r-e-s-s/index.html","searchKeys":["SURGERY_IN_PROGRESS","SURGERY_IN_PROGRESS","application.presenter.api.model.process.SurgicalProcessStepApiDto.SURGERY_IN_PROGRESS"]},{"name":"SURGERY_IN_PROGRESS","description":"application.presenter.event.model.ProcessStepEventDto.SURGERY_IN_PROGRESS","location":"surgery-report-microservice/application.presenter.event.model/-process-step-event-dto/-s-u-r-g-e-r-y_-i-n_-p-r-o-g-r-e-s-s/index.html","searchKeys":["SURGERY_IN_PROGRESS","SURGERY_IN_PROGRESS","application.presenter.event.model.ProcessStepEventDto.SURGERY_IN_PROGRESS"]},{"name":"SURGERY_IN_PROGRESS","description":"entity.process.SurgicalProcessStep.SURGERY_IN_PROGRESS","location":"surgery-report-microservice/entity.process/-surgical-process-step/-s-u-r-g-e-r-y_-i-n_-p-r-o-g-r-e-s-s/index.html","searchKeys":["SURGERY_IN_PROGRESS","SURGERY_IN_PROGRESS","entity.process.SurgicalProcessStep.SURGERY_IN_PROGRESS"]},{"name":"TERMINATED","description":"application.presenter.event.model.ProcessStateEventDto.TERMINATED","location":"surgery-report-microservice/application.presenter.event.model/-process-state-event-dto/-t-e-r-m-i-n-a-t-e-d/index.html","searchKeys":["TERMINATED","TERMINATED","application.presenter.event.model.ProcessStateEventDto.TERMINATED"]},{"name":"XRAY","description":"application.presenter.api.model.medicaldevice.MedicalTechnologyApiDtoType.XRAY","location":"surgery-report-microservice/application.presenter.api.model.medicaldevice/-medical-technology-api-dto-type/-x-r-a-y/index.html","searchKeys":["XRAY","XRAY","application.presenter.api.model.medicaldevice.MedicalTechnologyApiDtoType.XRAY"]},{"name":"XRAY","description":"entity.medicaldevice.MedicalTechnologyType.XRAY","location":"surgery-report-microservice/entity.medicaldevice/-medical-technology-type/-x-r-a-y/index.html","searchKeys":["XRAY","XRAY","entity.medicaldevice.MedicalTechnologyType.XRAY"]},{"name":"X_RAY","description":"application.presenter.event.model.MedicalTechnologyTypeEventDto.X_RAY","location":"surgery-report-microservice/application.presenter.event.model/-medical-technology-type-event-dto/-x_-r-a-y/index.html","searchKeys":["X_RAY","X_RAY","application.presenter.event.model.MedicalTechnologyTypeEventDto.X_RAY"]},{"name":"abstract fun aggregate(): AggregateData<T>","description":"usecase.aggregation.AggregateDataExtractor.aggregate","location":"surgery-report-microservice/usecase.aggregation/-aggregate-data-extractor/aggregate.html","searchKeys":["aggregate","abstract fun aggregate(): AggregateData<T>","usecase.aggregation.AggregateDataExtractor.aggregate"]},{"name":"abstract fun canHandle(event: Event<*>): Boolean","description":"application.handler.EventHandler.canHandle","location":"surgery-report-microservice/application.handler/-event-handler/can-handle.html","searchKeys":["canHandle","abstract fun canHandle(event: Event<*>): Boolean","application.handler.EventHandler.canHandle"]},{"name":"abstract fun consume(event: Event<*>)","description":"application.handler.EventHandler.consume","location":"surgery-report-microservice/application.handler/-event-handler/consume.html","searchKeys":["consume","abstract fun consume(event: Event<*>)","application.handler.EventHandler.consume"]},{"name":"abstract fun createSurgeryReport(surgeryReport: SurgeryReport): Boolean","description":"usecase.repository.SurgeryReportRepository.createSurgeryReport","location":"surgery-report-microservice/usecase.repository/-surgery-report-repository/create-surgery-report.html","searchKeys":["createSurgeryReport","abstract fun createSurgeryReport(surgeryReport: SurgeryReport): Boolean","usecase.repository.SurgeryReportRepository.createSurgeryReport"]},{"name":"abstract fun execute(): T","description":"application.service.ApplicationService.execute","location":"surgery-report-microservice/application.service/-application-service/execute.html","searchKeys":["execute","abstract fun execute(): T","application.service.ApplicationService.execute"]},{"name":"abstract fun execute(): X","description":"usecase.UseCase.execute","location":"surgery-report-microservice/usecase/-use-case/execute.html","searchKeys":["execute","abstract fun execute(): X","usecase.UseCase.execute"]},{"name":"abstract fun findBy(surgeryProcessID: SurgicalProcessID): SurgeryReport?","description":"usecase.repository.SurgeryReportRepository.findBy","location":"surgery-report-microservice/usecase.repository/-surgery-report-repository/find-by.html","searchKeys":["findBy","abstract fun findBy(surgeryProcessID: SurgicalProcessID): SurgeryReport?","usecase.repository.SurgeryReportRepository.findBy"]},{"name":"abstract fun getHealthProfessionalTrackingInfo(roomID: RoomID, from: Instant, to: Instant): List<TrackingInfo<HealthProfessionalID>>","description":"usecase.repository.HealthProfessionalRepository.getHealthProfessionalTrackingInfo","location":"surgery-report-microservice/usecase.repository/-health-professional-repository/get-health-professional-tracking-info.html","searchKeys":["getHealthProfessionalTrackingInfo","abstract fun getHealthProfessionalTrackingInfo(roomID: RoomID, from: Instant, to: Instant): List<TrackingInfo<HealthProfessionalID>>","usecase.repository.HealthProfessionalRepository.getHealthProfessionalTrackingInfo"]},{"name":"abstract fun getHealthcareUser(taxCode: TaxCode): HealthcareUser?","description":"usecase.repository.HealthcareUserRepository.getHealthcareUser","location":"surgery-report-microservice/usecase.repository/-healthcare-user-repository/get-healthcare-user.html","searchKeys":["getHealthcareUser","abstract fun getHealthcareUser(taxCode: TaxCode): HealthcareUser?","usecase.repository.HealthcareUserRepository.getHealthcareUser"]},{"name":"abstract fun getRoomEnvironmentalData(roomID: RoomID, from: Instant, to: Instant): List<Pair<Instant, RoomEnvironmentalData>>","description":"usecase.repository.RoomRepository.getRoomEnvironmentalData","location":"surgery-report-microservice/usecase.repository/-room-repository/get-room-environmental-data.html","searchKeys":["getRoomEnvironmentalData","abstract fun getRoomEnvironmentalData(roomID: RoomID, from: Instant, to: Instant): List<Pair<Instant, RoomEnvironmentalData>>","usecase.repository.RoomRepository.getRoomEnvironmentalData"]},{"name":"abstract fun getSurgeryReports(): List<SurgeryReport>","description":"usecase.repository.SurgeryReportRepository.getSurgeryReports","location":"surgery-report-microservice/usecase.repository/-surgery-report-repository/get-surgery-reports.html","searchKeys":["getSurgeryReports","abstract fun getSurgeryReports(): List<SurgeryReport>","usecase.repository.SurgeryReportRepository.getSurgeryReports"]},{"name":"abstract fun integrateSurgeryReport(surgeryProcessID: SurgicalProcessID, informationToAdd: String): Boolean","description":"usecase.repository.SurgeryReportRepository.integrateSurgeryReport","location":"surgery-report-microservice/usecase.repository/-surgery-report-repository/integrate-surgery-report.html","searchKeys":["integrateSurgeryReport","abstract fun integrateSurgeryReport(surgeryProcessID: SurgicalProcessID, informationToAdd: String): Boolean","usecase.repository.SurgeryReportRepository.integrateSurgeryReport"]},{"name":"abstract val data: E","description":"application.presenter.event.model.Event.data","location":"surgery-report-microservice/application.presenter.event.model/-event/data.html","searchKeys":["data","abstract val data: E","application.presenter.event.model.Event.data"]},{"name":"abstract val dateTime: String","description":"application.presenter.event.model.Event.dateTime","location":"surgery-report-microservice/application.presenter.event.model/-event/date-time.html","searchKeys":["dateTime","abstract val dateTime: String","application.presenter.event.model.Event.dateTime"]},{"name":"abstract val key: String","description":"application.presenter.event.model.Event.key","location":"surgery-report-microservice/application.presenter.event.model/-event/key.html","searchKeys":["key","abstract val key: String","application.presenter.event.model.Event.key"]},{"name":"class APIController(surgeryReportRepository: SurgeryReportRepository)","description":"infrastructure.api.APIController","location":"surgery-report-microservice/infrastructure.api/-a-p-i-controller/index.html","searchKeys":["APIController","class APIController(surgeryReportRepository: SurgeryReportRepository)","infrastructure.api.APIController"]},{"name":"class AggregateRoomEnvironmentalDataExtractor(roomEnvironmentalData: Collection<RoomEnvironmentalData>) : AggregateDataExtractor<RoomEnvironmentalData> ","description":"usecase.aggregation.AggregateRoomEnvironmentalDataExtractor","location":"surgery-report-microservice/usecase.aggregation/-aggregate-room-environmental-data-extractor/index.html","searchKeys":["AggregateRoomEnvironmentalDataExtractor","class AggregateRoomEnvironmentalDataExtractor(roomEnvironmentalData: Collection<RoomEnvironmentalData>) : AggregateDataExtractor<RoomEnvironmentalData> ","usecase.aggregation.AggregateRoomEnvironmentalDataExtractor"]},{"name":"class AggregateVitalSignsExtractor(vitalSigns: Collection<PatientVitalSigns>) : AggregateDataExtractor<PatientVitalSigns> ","description":"usecase.aggregation.AggregateVitalSignsExtractor","location":"surgery-report-microservice/usecase.aggregation/-aggregate-vital-signs-extractor/index.html","searchKeys":["AggregateVitalSignsExtractor","class AggregateVitalSignsExtractor(vitalSigns: Collection<PatientVitalSigns>) : AggregateDataExtractor<PatientVitalSigns> ","usecase.aggregation.AggregateVitalSignsExtractor"]},{"name":"class ExternalServiceCaller(engine: HttpClientEngine = OkHttp.create(), avoidCheckOnMicroserviceUrl: Boolean = false) : HealthcareUserRepository, HealthProfessionalRepository, RoomRepository","description":"infrastructure.external.ExternalServiceCaller","location":"surgery-report-microservice/infrastructure.external/-external-service-caller/index.html","searchKeys":["ExternalServiceCaller","class ExternalServiceCaller(engine: HttpClientEngine = OkHttp.create(), avoidCheckOnMicroserviceUrl: Boolean = false) : HealthcareUserRepository, HealthProfessionalRepository, RoomRepository","infrastructure.external.ExternalServiceCaller"]},{"name":"class GenerateSurgeryReport(surgicalProcess: SurgicalProcess, patientVitalSigns: List<Pair<Instant, PatientVitalSigns>>, consumedImplantableMedicalDevices: Set<ImplantableMedicalDevice>, medicalTechnologyUsage: Set<MedicalTechnologyUsage>, surgeryReportRepository: SurgeryReportRepository, healthProfessionalRepository: HealthProfessionalRepository, roomRepository: RoomRepository, healthcareUserRepository: HealthcareUserRepository) : ApplicationService<SurgeryReport?> ","description":"application.service.SurgeryReportService.GenerateSurgeryReport","location":"surgery-report-microservice/application.service/-surgery-report-service/-generate-surgery-report/index.html","searchKeys":["GenerateSurgeryReport","class GenerateSurgeryReport(surgicalProcess: SurgicalProcess, patientVitalSigns: List<Pair<Instant, PatientVitalSigns>>, consumedImplantableMedicalDevices: Set<ImplantableMedicalDevice>, medicalTechnologyUsage: Set<MedicalTechnologyUsage>, surgeryReportRepository: SurgeryReportRepository, healthProfessionalRepository: HealthProfessionalRepository, roomRepository: RoomRepository, healthcareUserRepository: HealthcareUserRepository) : ApplicationService<SurgeryReport?> ","application.service.SurgeryReportService.GenerateSurgeryReport"]},{"name":"class GetAllSurgeryReportEntry(surgeryReportRepository: SurgeryReportRepository) : ApplicationService<List<SurgeryReportEntry>> ","description":"application.service.SurgeryReportService.GetAllSurgeryReportEntry","location":"surgery-report-microservice/application.service/-surgery-report-service/-get-all-surgery-report-entry/index.html","searchKeys":["GetAllSurgeryReportEntry","class GetAllSurgeryReportEntry(surgeryReportRepository: SurgeryReportRepository) : ApplicationService<List<SurgeryReportEntry>> ","application.service.SurgeryReportService.GetAllSurgeryReportEntry"]},{"name":"class GetSurgeryReport(surgicalProcessID: SurgicalProcessID, surgeryReportRepository: SurgeryReportRepository) : ApplicationService<SurgeryReport?> ","description":"application.service.SurgeryReportService.GetSurgeryReport","location":"surgery-report-microservice/application.service/-surgery-report-service/-get-surgery-report/index.html","searchKeys":["GetSurgeryReport","class GetSurgeryReport(surgicalProcessID: SurgicalProcessID, surgeryReportRepository: SurgeryReportRepository) : ApplicationService<SurgeryReport?> ","application.service.SurgeryReportService.GetSurgeryReport"]},{"name":"class GetSurgicalProcessStartEndUseCase(surgicalProcess: SurgicalProcess) : UseCase<Pair<Instant, Instant>> ","description":"usecase.GetSurgicalProcessStartEndUseCase","location":"surgery-report-microservice/usecase/-get-surgical-process-start-end-use-case/index.html","searchKeys":["GetSurgicalProcessStartEndUseCase","class GetSurgicalProcessStartEndUseCase(surgicalProcess: SurgicalProcess) : UseCase<Pair<Instant, Instant>> ","usecase.GetSurgicalProcessStartEndUseCase"]},{"name":"class IntegrateSurgeryReport(surgicalProcessID: SurgicalProcessID, additionalInformation: String, surgeryReportRepository: SurgeryReportRepository) : ApplicationService<Boolean> ","description":"application.service.SurgeryReportService.IntegrateSurgeryReport","location":"surgery-report-microservice/application.service/-surgery-report-service/-integrate-surgery-report/index.html","searchKeys":["IntegrateSurgeryReport","class IntegrateSurgeryReport(surgicalProcessID: SurgicalProcessID, additionalInformation: String, surgeryReportRepository: SurgeryReportRepository) : ApplicationService<Boolean> ","application.service.SurgeryReportService.IntegrateSurgeryReport"]},{"name":"class Interrupted : SurgicalProcessState","description":"entity.process.SurgicalProcessState.Interrupted","location":"surgery-report-microservice/entity.process/-surgical-process-state/-interrupted/index.html","searchKeys":["Interrupted","class Interrupted : SurgicalProcessState","entity.process.SurgicalProcessState.Interrupted"]},{"name":"class KafkaClient(surgeryReportRepository: SurgeryReportRepository, healthProfessionalRepository: HealthProfessionalRepository, roomRepository: RoomRepository, healthcareUserRepository: HealthcareUserRepository)","description":"infrastructure.events.KafkaClient","location":"surgery-report-microservice/infrastructure.events/-kafka-client/index.html","searchKeys":["KafkaClient","class KafkaClient(surgeryReportRepository: SurgeryReportRepository, healthProfessionalRepository: HealthProfessionalRepository, roomRepository: RoomRepository, healthcareUserRepository: HealthcareUserRepository)","infrastructure.events.KafkaClient"]},{"name":"class ReportGenerationUseCase(surgicalProcess: SurgicalProcess, patientVitalSigns: List<Pair<Instant, PatientVitalSigns>>, healthProfessionalTrackingInformation: List<TrackingInfo<HealthProfessionalID>>, environmentalData: Map<RoomType, List<Pair<Instant, RoomEnvironmentalData>>>, healthcareUser: HealthcareUser? = null, consumedImplantableMedicalDevices: Set<ImplantableMedicalDevice> = setOf(), medicalTechnologyUsage: Set<MedicalTechnologyUsage> = setOf()) : UseCase<SurgeryReport> ","description":"usecase.ReportGenerationUseCase","location":"surgery-report-microservice/usecase/-report-generation-use-case/index.html","searchKeys":["ReportGenerationUseCase","class ReportGenerationUseCase(surgicalProcess: SurgicalProcess, patientVitalSigns: List<Pair<Instant, PatientVitalSigns>>, healthProfessionalTrackingInformation: List<TrackingInfo<HealthProfessionalID>>, environmentalData: Map<RoomType, List<Pair<Instant, RoomEnvironmentalData>>>, healthcareUser: HealthcareUser? = null, consumedImplantableMedicalDevices: Set<ImplantableMedicalDevice> = setOf(), medicalTechnologyUsage: Set<MedicalTechnologyUsage> = setOf()) : UseCase<SurgeryReport> ","usecase.ReportGenerationUseCase"]},{"name":"class SurgeryReportDatabase(customConnectionString: String? = null) : SurgeryReportRepository","description":"infrastructure.database.SurgeryReportDatabase","location":"surgery-report-microservice/infrastructure.database/-surgery-report-database/index.html","searchKeys":["SurgeryReportDatabase","class SurgeryReportDatabase(customConnectionString: String? = null) : SurgeryReportRepository","infrastructure.database.SurgeryReportDatabase"]},{"name":"class SurgicalProcessSummaryEventHandler(surgeryReportRepository: SurgeryReportRepository, healthProfessionalRepository: HealthProfessionalRepository, roomRepository: RoomRepository, healthcareUserRepository: HealthcareUserRepository) : EventHandler","description":"application.handler.EventHandlers.SurgicalProcessSummaryEventHandler","location":"surgery-report-microservice/application.handler/-event-handlers/-surgical-process-summary-event-handler/index.html","searchKeys":["SurgicalProcessSummaryEventHandler","class SurgicalProcessSummaryEventHandler(surgeryReportRepository: SurgeryReportRepository, healthProfessionalRepository: HealthProfessionalRepository, roomRepository: RoomRepository, healthcareUserRepository: HealthcareUserRepository) : EventHandler","application.handler.EventHandlers.SurgicalProcessSummaryEventHandler"]},{"name":"class Terminated : SurgicalProcessState","description":"entity.process.SurgicalProcessState.Terminated","location":"surgery-report-microservice/entity.process/-surgical-process-state/-terminated/index.html","searchKeys":["Terminated","class Terminated : SurgicalProcessState","entity.process.SurgicalProcessState.Terminated"]},{"name":"const val SURGICAL_PROCESS_SUMMARY_EVENT_KEY: String","description":"application.presenter.event.model.SurgicalProcessSummaryEvent.Companion.SURGICAL_PROCESS_SUMMARY_EVENT_KEY","location":"surgery-report-microservice/application.presenter.event.model/-surgical-process-summary-event/-companion/-s-u-r-g-i-c-a-l_-p-r-o-c-e-s-s_-s-u-m-m-a-r-y_-e-v-e-n-t_-k-e-y.html","searchKeys":["SURGICAL_PROCESS_SUMMARY_EVENT_KEY","const val SURGICAL_PROCESS_SUMMARY_EVENT_KEY: String","application.presenter.event.model.SurgicalProcessSummaryEvent.Companion.SURGICAL_PROCESS_SUMMARY_EVENT_KEY"]},{"name":"constructor()","description":"entity.process.SurgicalProcessState.Interrupted.Interrupted","location":"surgery-report-microservice/entity.process/-surgical-process-state/-interrupted/-interrupted.html","searchKeys":["Interrupted","constructor()","entity.process.SurgicalProcessState.Interrupted.Interrupted"]},{"name":"constructor()","description":"entity.process.SurgicalProcessState.Terminated.Terminated","location":"surgery-report-microservice/entity.process/-surgical-process-state/-terminated/-terminated.html","searchKeys":["Terminated","constructor()","entity.process.SurgicalProcessState.Terminated.Terminated"]},{"name":"constructor(additionalData: String)","description":"application.presenter.api.model.SurgeryReportPatchApiDto.SurgeryReportPatchApiDto","location":"surgery-report-microservice/application.presenter.api.model/-surgery-report-patch-api-dto/-surgery-report-patch-api-dto.html","searchKeys":["SurgeryReportPatchApiDto","constructor(additionalData: String)","application.presenter.api.model.SurgeryReportPatchApiDto.SurgeryReportPatchApiDto"]},{"name":"constructor(average: E, std: E, maximum: E, minimum: E)","description":"application.presenter.api.model.measurements.AggregateDataApiDto.AggregateDataApiDto","location":"surgery-report-microservice/application.presenter.api.model.measurements/-aggregate-data-api-dto/-aggregate-data-api-dto.html","searchKeys":["AggregateDataApiDto","constructor(average: E, std: E, maximum: E, minimum: E)","application.presenter.api.model.measurements.AggregateDataApiDto.AggregateDataApiDto"]},{"name":"constructor(average: E, std: E, maximum: E, minimum: E)","description":"entity.measurements.AggregateData.AggregateData","location":"surgery-report-microservice/entity.measurements/-aggregate-data/-aggregate-data.html","searchKeys":["AggregateData","constructor(average: E, std: E, maximum: E, minimum: E)","entity.measurements.AggregateData.AggregateData"]},{"name":"constructor(bpm: Int)","description":"application.presenter.event.model.HeartBeatEventDto.HeartBeatEventDto","location":"surgery-report-microservice/application.presenter.event.model/-heart-beat-event-dto/-heart-beat-event-dto.html","searchKeys":["HeartBeatEventDto","constructor(bpm: Int)","application.presenter.event.model.HeartBeatEventDto.HeartBeatEventDto"]},{"name":"constructor(bpm: Int)","description":"entity.healthcareuser.VitalSign.HeartBeat.HeartBeat","location":"surgery-report-microservice/entity.healthcareuser/-vital-sign/-heart-beat/-heart-beat.html","searchKeys":["HeartBeat","constructor(bpm: Int)","entity.healthcareuser.VitalSign.HeartBeat.HeartBeat"]},{"name":"constructor(customConnectionString: String? = null)","description":"infrastructure.database.SurgeryReportDatabase.SurgeryReportDatabase","location":"surgery-report-microservice/infrastructure.database/-surgery-report-database/-surgery-report-database.html","searchKeys":["SurgeryReportDatabase","constructor(customConnectionString: String? = null)","infrastructure.database.SurgeryReportDatabase.SurgeryReportDatabase"]},{"name":"constructor(dateTime: Instant, individual: I, roomID: RoomID, trackType: TrackType)","description":"entity.tracking.TrackingInfo.TrackingInfo","location":"surgery-report-microservice/entity.tracking/-tracking-info/-tracking-info.html","searchKeys":["TrackingInfo","constructor(dateTime: Instant, individual: I, roomID: RoomID, trackType: TrackType)","entity.tracking.TrackingInfo.TrackingInfo"]},{"name":"constructor(dateTime: String, healthProfessionalId: String, roomID: String, trackType: TrackApiDtoType)","description":"application.presenter.api.model.tracking.TrackingInformationApiDto.TrackingInformationApiDto","location":"surgery-report-microservice/application.presenter.api.model.tracking/-tracking-information-api-dto/-tracking-information-api-dto.html","searchKeys":["TrackingInformationApiDto","constructor(dateTime: String, healthProfessionalId: String, roomID: String, trackType: TrackApiDtoType)","application.presenter.api.model.tracking.TrackingInformationApiDto.TrackingInformationApiDto"]},{"name":"constructor(dateTime: String, medicalTechnology: MedicalTechnologyApiDto)","description":"application.presenter.api.model.medicaldevice.MedicalTechnologyUsageApiDto.MedicalTechnologyUsageApiDto","location":"surgery-report-microservice/application.presenter.api.model.medicaldevice/-medical-technology-usage-api-dto/-medical-technology-usage-api-dto.html","searchKeys":["MedicalTechnologyUsageApiDto","constructor(dateTime: String, medicalTechnology: MedicalTechnologyApiDto)","application.presenter.api.model.medicaldevice.MedicalTechnologyUsageApiDto.MedicalTechnologyUsageApiDto"]},{"name":"constructor(dateTime: String, roomId: String, healthProfessionalId: String, trackingType: StaffTrackingDtoModel.TrackingTypeResultDto)","description":"application.presenter.external.model.StaffTrackingDtoModel.TrackingInfoResultDto.TrackingInfoResultDto","location":"surgery-report-microservice/application.presenter.external.model/-staff-tracking-dto-model/-tracking-info-result-dto/-tracking-info-result-dto.html","searchKeys":["TrackingInfoResultDto","constructor(dateTime: String, roomId: String, healthProfessionalId: String, trackingType: StaffTrackingDtoModel.TrackingTypeResultDto)","application.presenter.external.model.StaffTrackingDtoModel.TrackingInfoResultDto.TrackingInfoResultDto"]},{"name":"constructor(degree: Double, unit: TemperatureUnitEventDto)","description":"application.presenter.event.model.BodyTemperatureEventDto.BodyTemperatureEventDto","location":"surgery-report-microservice/application.presenter.event.model/-body-temperature-event-dto/-body-temperature-event-dto.html","searchKeys":["BodyTemperatureEventDto","constructor(degree: Double, unit: TemperatureUnitEventDto)","application.presenter.event.model.BodyTemperatureEventDto.BodyTemperatureEventDto"]},{"name":"constructor(engine: HttpClientEngine = OkHttp.create(), avoidCheckOnMicroserviceUrl: Boolean = false)","description":"infrastructure.external.ExternalServiceCaller.ExternalServiceCaller","location":"surgery-report-microservice/infrastructure.external/-external-service-caller/-external-service-caller.html","searchKeys":["ExternalServiceCaller","constructor(engine: HttpClientEngine = OkHttp.create(), avoidCheckOnMicroserviceUrl: Boolean = false)","infrastructure.external.ExternalServiceCaller.ExternalServiceCaller"]},{"name":"constructor(entries: List<T>, total: Int)","description":"application.presenter.api.model.apiresponse.ApiResponses.ResponseEntryList.ResponseEntryList","location":"surgery-report-microservice/application.presenter.api.model.apiresponse/-api-responses/-response-entry-list/-response-entry-list.html","searchKeys":["ResponseEntryList","constructor(entries: List<T>, total: Int)","application.presenter.api.model.apiresponse.ApiResponses.ResponseEntryList.ResponseEntryList"]},{"name":"constructor(entry: T, date: String)","description":"application.presenter.api.model.apiresponse.ApiResponses.ResponseTimedEntry.ResponseTimedEntry","location":"surgery-report-microservice/application.presenter.api.model.apiresponse/-api-responses/-response-timed-entry/-response-timed-entry.html","searchKeys":["ResponseTimedEntry","constructor(entry: T, date: String)","application.presenter.api.model.apiresponse.ApiResponses.ResponseTimedEntry.ResponseTimedEntry"]},{"name":"constructor(entry: T, url: String?)","description":"application.presenter.api.model.apiresponse.ApiResponses.ResponseEntry.ResponseEntry","location":"surgery-report-microservice/application.presenter.api.model.apiresponse/-api-responses/-response-entry/-response-entry.html","searchKeys":["ResponseEntry","constructor(entry: T, url: String?)","application.presenter.api.model.apiresponse.ApiResponses.ResponseEntry.ResponseEntry"]},{"name":"constructor(heartBeat: HeartBeatEventDto? = null, diastolicBloodPressure: DiastolicBloodPressureEventDto? = null, systolicBloodPressure: SystolicBloodPressureEventDto? = null, respiratoryRate: RespiratoryRateEventDto? = null, saturationPercentage: SaturationPercentageEventDto? = null, bodyTemperature: BodyTemperatureEventDto? = null)","description":"application.presenter.event.model.PatientVitalSignsEventDto.PatientVitalSignsEventDto","location":"surgery-report-microservice/application.presenter.event.model/-patient-vital-signs-event-dto/-patient-vital-signs-event-dto.html","searchKeys":["PatientVitalSignsEventDto","constructor(heartBeat: HeartBeatEventDto? = null, diastolicBloodPressure: DiastolicBloodPressureEventDto? = null, systolicBloodPressure: SystolicBloodPressureEventDto? = null, respiratoryRate: RespiratoryRateEventDto? = null, saturationPercentage: SaturationPercentageEventDto? = null, bodyTemperature: BodyTemperatureEventDto? = null)","application.presenter.event.model.PatientVitalSignsEventDto.PatientVitalSignsEventDto"]},{"name":"constructor(heartBeat: Int? = null, diastolicBloodPressure: Int? = null, systolicBloodPressure: Int? = null, respiratoryRate: Int? = null, saturationPercentage: Double? = null, bodyTemperature: ValueWithUnit<Double>? = null)","description":"application.presenter.api.model.healthcareuser.PatientVitalSignsApiDto.PatientVitalSignsApiDto","location":"surgery-report-microservice/application.presenter.api.model.healthcareuser/-patient-vital-signs-api-dto/-patient-vital-signs-api-dto.html","searchKeys":["PatientVitalSignsApiDto","constructor(heartBeat: Int? = null, diastolicBloodPressure: Int? = null, systolicBloodPressure: Int? = null, respiratoryRate: Int? = null, saturationPercentage: Double? = null, bodyTemperature: ValueWithUnit<Double>? = null)","application.presenter.api.model.healthcareuser.PatientVitalSignsApiDto.PatientVitalSignsApiDto"]},{"name":"constructor(heartBeat: VitalSign.HeartBeat? = null, diastolicBloodPressure: VitalSign.DiastolicBloodPressure? = null, systolicBloodPressure: VitalSign.SystolicBloodPressure? = null, respiratoryRate: VitalSign.RespiratoryRate? = null, saturationPercentage: VitalSign.SaturationPercentage? = null, bodyTemperature: VitalSign.BodyTemperature? = null)","description":"entity.healthcareuser.PatientVitalSigns.PatientVitalSigns","location":"surgery-report-microservice/entity.healthcareuser/-patient-vital-signs/-patient-vital-signs.html","searchKeys":["PatientVitalSigns","constructor(heartBeat: VitalSign.HeartBeat? = null, diastolicBloodPressure: VitalSign.DiastolicBloodPressure? = null, systolicBloodPressure: VitalSign.SystolicBloodPressure? = null, respiratoryRate: VitalSign.RespiratoryRate? = null, saturationPercentage: VitalSign.SaturationPercentage? = null, bodyTemperature: VitalSign.BodyTemperature? = null)","entity.healthcareuser.PatientVitalSigns.PatientVitalSigns"]},{"name":"constructor(id: ImplantableMedicalDeviceID, type: ImplantableMedicalDeviceType)","description":"entity.medicaldevice.ImplantableMedicalDevice.ImplantableMedicalDevice","location":"surgery-report-microservice/entity.medicaldevice/-implantable-medical-device/-implantable-medical-device.html","searchKeys":["ImplantableMedicalDevice","constructor(id: ImplantableMedicalDeviceID, type: ImplantableMedicalDeviceType)","entity.medicaldevice.ImplantableMedicalDevice.ImplantableMedicalDevice"]},{"name":"constructor(id: ImplantableMedicalDeviceIDEventDto, type: ImplantableMedicalDeviceTypeEventDto)","description":"application.presenter.event.model.ImplantableMedicalDeviceEventDto.ImplantableMedicalDeviceEventDto","location":"surgery-report-microservice/application.presenter.event.model/-implantable-medical-device-event-dto/-implantable-medical-device-event-dto.html","searchKeys":["ImplantableMedicalDeviceEventDto","constructor(id: ImplantableMedicalDeviceIDEventDto, type: ImplantableMedicalDeviceTypeEventDto)","application.presenter.event.model.ImplantableMedicalDeviceEventDto.ImplantableMedicalDeviceEventDto"]},{"name":"constructor(id: MedicalTechnologyID, name: String, description: String? = null, type: MedicalTechnologyType, inUse: Boolean = false)","description":"entity.medicaldevice.MedicalTechnology.MedicalTechnology","location":"surgery-report-microservice/entity.medicaldevice/-medical-technology/-medical-technology.html","searchKeys":["MedicalTechnology","constructor(id: MedicalTechnologyID, name: String, description: String? = null, type: MedicalTechnologyType, inUse: Boolean = false)","entity.medicaldevice.MedicalTechnology.MedicalTechnology"]},{"name":"constructor(id: MedicalTechnologyIDEventDto, name: String, description: String? = null, type: MedicalTechnologyTypeEventDto, inUse: Boolean)","description":"application.presenter.event.model.MedicalTechnologyEventDto.MedicalTechnologyEventDto","location":"surgery-report-microservice/application.presenter.event.model/-medical-technology-event-dto/-medical-technology-event-dto.html","searchKeys":["MedicalTechnologyEventDto","constructor(id: MedicalTechnologyIDEventDto, name: String, description: String? = null, type: MedicalTechnologyTypeEventDto, inUse: Boolean)","application.presenter.event.model.MedicalTechnologyEventDto.MedicalTechnologyEventDto"]},{"name":"constructor(id: RoomID, type: RoomType)","description":"entity.room.Room.Room","location":"surgery-report-microservice/entity.room/-room/-room.html","searchKeys":["Room","constructor(id: RoomID, type: RoomType)","entity.room.Room.Room"]},{"name":"constructor(id: String)","description":"application.presenter.event.model.ImplantableMedicalDeviceIDEventDto.ImplantableMedicalDeviceIDEventDto","location":"surgery-report-microservice/application.presenter.event.model/-implantable-medical-device-i-d-event-dto/-implantable-medical-device-i-d-event-dto.html","searchKeys":["ImplantableMedicalDeviceIDEventDto","constructor(id: String)","application.presenter.event.model.ImplantableMedicalDeviceIDEventDto.ImplantableMedicalDeviceIDEventDto"]},{"name":"constructor(id: String)","description":"application.presenter.event.model.MedicalTechnologyIDEventDto.MedicalTechnologyIDEventDto","location":"surgery-report-microservice/application.presenter.event.model/-medical-technology-i-d-event-dto/-medical-technology-i-d-event-dto.html","searchKeys":["MedicalTechnologyIDEventDto","constructor(id: String)","application.presenter.event.model.MedicalTechnologyIDEventDto.MedicalTechnologyIDEventDto"]},{"name":"constructor(id: String, name: String, description: String? = null, type: MedicalTechnologyApiDtoType, inUse: Boolean = false)","description":"application.presenter.api.model.medicaldevice.MedicalTechnologyApiDto.MedicalTechnologyApiDto","location":"surgery-report-microservice/application.presenter.api.model.medicaldevice/-medical-technology-api-dto/-medical-technology-api-dto.html","searchKeys":["MedicalTechnologyApiDto","constructor(id: String, name: String, description: String? = null, type: MedicalTechnologyApiDtoType, inUse: Boolean = false)","application.presenter.api.model.medicaldevice.MedicalTechnologyApiDto.MedicalTechnologyApiDto"]},{"name":"constructor(id: String, type: ImplantableMedicalDeviceApiDtoType)","description":"application.presenter.api.model.medicaldevice.ImplantableMedicalDeviceApiDto.ImplantableMedicalDeviceApiDto","location":"surgery-report-microservice/application.presenter.api.model.medicaldevice/-implantable-medical-device-api-dto/-implantable-medical-device-api-dto.html","searchKeys":["ImplantableMedicalDeviceApiDto","constructor(id: String, type: ImplantableMedicalDeviceApiDtoType)","application.presenter.api.model.medicaldevice.ImplantableMedicalDeviceApiDto.ImplantableMedicalDeviceApiDto"]},{"name":"constructor(id: String, type: RoomApiDtoType)","description":"application.presenter.api.model.room.RoomApiDto.RoomApiDto","location":"surgery-report-microservice/application.presenter.api.model.room/-room-api-dto/-room-api-dto.html","searchKeys":["RoomApiDto","constructor(id: String, type: RoomApiDtoType)","application.presenter.api.model.room.RoomApiDto.RoomApiDto"]},{"name":"constructor(id: SurgicalProcessID, description: String, patientID: PatientID, preOperatingRoom: RoomID, operatingRoom: RoomID, inChargeHealthProfessional: HealthProfessionalID? = null, taxCode: TaxCode? = null, processStates: List<Pair<Instant, SurgicalProcessState>> = listOf())","description":"entity.process.SurgicalProcess.SurgicalProcess","location":"surgery-report-microservice/entity.process/-surgical-process/-surgical-process.html","searchKeys":["SurgicalProcess","constructor(id: SurgicalProcessID, description: String, patientID: PatientID, preOperatingRoom: RoomID, operatingRoom: RoomID, inChargeHealthProfessional: HealthProfessionalID? = null, taxCode: TaxCode? = null, processStates: List<Pair<Instant, SurgicalProcessState>> = listOf())","entity.process.SurgicalProcess.SurgicalProcess"]},{"name":"constructor(key: String, data: SurgicalProcessSummaryPayload, dateTime: String)","description":"application.presenter.event.model.SurgicalProcessSummaryEvent.SurgicalProcessSummaryEvent","location":"surgery-report-microservice/application.presenter.event.model/-surgical-process-summary-event/-surgical-process-summary-event.html","searchKeys":["SurgicalProcessSummaryEvent","constructor(key: String, data: SurgicalProcessSummaryPayload, dateTime: String)","application.presenter.event.model.SurgicalProcessSummaryEvent.SurgicalProcessSummaryEvent"]},{"name":"constructor(percentage: Int)","description":"application.presenter.event.model.SaturationPercentageEventDto.SaturationPercentageEventDto","location":"surgery-report-microservice/application.presenter.event.model/-saturation-percentage-event-dto/-saturation-percentage-event-dto.html","searchKeys":["SaturationPercentageEventDto","constructor(percentage: Int)","application.presenter.event.model.SaturationPercentageEventDto.SaturationPercentageEventDto"]},{"name":"constructor(percentage: Percentage)","description":"entity.healthcareuser.VitalSign.SaturationPercentage.SaturationPercentage","location":"surgery-report-microservice/entity.healthcareuser/-vital-sign/-saturation-percentage/-saturation-percentage.html","searchKeys":["SaturationPercentage","constructor(percentage: Percentage)","entity.healthcareuser.VitalSign.SaturationPercentage.SaturationPercentage"]},{"name":"constructor(percentage: Percentage)","description":"entity.measurements.Humidity.Humidity","location":"surgery-report-microservice/entity.measurements/-humidity/-humidity.html","searchKeys":["Humidity","constructor(percentage: Percentage)","entity.measurements.Humidity.Humidity"]},{"name":"constructor(presenceDetected: Boolean)","description":"entity.measurements.Presence.Presence","location":"surgery-report-microservice/entity.measurements/-presence/-presence.html","searchKeys":["Presence","constructor(presenceDetected: Boolean)","entity.measurements.Presence.Presence"]},{"name":"constructor(pressure: Int)","description":"application.presenter.event.model.DiastolicBloodPressureEventDto.DiastolicBloodPressureEventDto","location":"surgery-report-microservice/application.presenter.event.model/-diastolic-blood-pressure-event-dto/-diastolic-blood-pressure-event-dto.html","searchKeys":["DiastolicBloodPressureEventDto","constructor(pressure: Int)","application.presenter.event.model.DiastolicBloodPressureEventDto.DiastolicBloodPressureEventDto"]},{"name":"constructor(pressure: Int)","description":"application.presenter.event.model.SystolicBloodPressureEventDto.SystolicBloodPressureEventDto","location":"surgery-report-microservice/application.presenter.event.model/-systolic-blood-pressure-event-dto/-systolic-blood-pressure-event-dto.html","searchKeys":["SystolicBloodPressureEventDto","constructor(pressure: Int)","application.presenter.event.model.SystolicBloodPressureEventDto.SystolicBloodPressureEventDto"]},{"name":"constructor(pressure: Int)","description":"entity.healthcareuser.VitalSign.DiastolicBloodPressure.DiastolicBloodPressure","location":"surgery-report-microservice/entity.healthcareuser/-vital-sign/-diastolic-blood-pressure/-diastolic-blood-pressure.html","searchKeys":["DiastolicBloodPressure","constructor(pressure: Int)","entity.healthcareuser.VitalSign.DiastolicBloodPressure.DiastolicBloodPressure"]},{"name":"constructor(pressure: Int)","description":"entity.healthcareuser.VitalSign.SystolicBloodPressure.SystolicBloodPressure","location":"surgery-report-microservice/entity.healthcareuser/-vital-sign/-systolic-blood-pressure/-systolic-blood-pressure.html","searchKeys":["SystolicBloodPressure","constructor(pressure: Int)","entity.healthcareuser.VitalSign.SystolicBloodPressure.SystolicBloodPressure"]},{"name":"constructor(processId: String, processType: String, patientId: String, patientTaxCode: String?, healthProfessionalId: String?, preOperatingRoomId: String, operatingRoomId: String, processStates: List<Pair<String, ProcessStateEventDto>>, processSteps: List<Pair<String, ProcessStepEventDto>>, patientMedicalData: List<Pair<String, PatientVitalSignsEventDto>>, medicalDeviceUsage: List<ImplantableMedicalDeviceEventDto>, medicalTechnologyUsage: List<Pair<String, MedicalTechnologyEventDto>>)","description":"application.presenter.event.model.SurgicalProcessSummaryPayload.SurgicalProcessSummaryPayload","location":"surgery-report-microservice/application.presenter.event.model/-surgical-process-summary-payload/-surgical-process-summary-payload.html","searchKeys":["SurgicalProcessSummaryPayload","constructor(processId: String, processType: String, patientId: String, patientTaxCode: String?, healthProfessionalId: String?, preOperatingRoomId: String, operatingRoomId: String, processStates: List<Pair<String, ProcessStateEventDto>>, processSteps: List<Pair<String, ProcessStepEventDto>>, patientMedicalData: List<Pair<String, PatientVitalSignsEventDto>>, medicalDeviceUsage: List<ImplantableMedicalDeviceEventDto>, medicalTechnologyUsage: List<Pair<String, MedicalTechnologyEventDto>>)","application.presenter.event.model.SurgicalProcessSummaryPayload.SurgicalProcessSummaryPayload"]},{"name":"constructor(rate: Int)","description":"application.presenter.event.model.RespiratoryRateEventDto.RespiratoryRateEventDto","location":"surgery-report-microservice/application.presenter.event.model/-respiratory-rate-event-dto/-respiratory-rate-event-dto.html","searchKeys":["RespiratoryRateEventDto","constructor(rate: Int)","application.presenter.event.model.RespiratoryRateEventDto.RespiratoryRateEventDto"]},{"name":"constructor(rate: Int)","description":"entity.healthcareuser.VitalSign.RespiratoryRate.RespiratoryRate","location":"surgery-report-microservice/entity.healthcareuser/-vital-sign/-respiratory-rate/-respiratory-rate.html","searchKeys":["RespiratoryRate","constructor(rate: Int)","entity.healthcareuser.VitalSign.RespiratoryRate.RespiratoryRate"]},{"name":"constructor(roomEnvironmentalData: Collection<RoomEnvironmentalData>)","description":"usecase.aggregation.AggregateRoomEnvironmentalDataExtractor.AggregateRoomEnvironmentalDataExtractor","location":"surgery-report-microservice/usecase.aggregation/-aggregate-room-environmental-data-extractor/-aggregate-room-environmental-data-extractor.html","searchKeys":["AggregateRoomEnvironmentalDataExtractor","constructor(roomEnvironmentalData: Collection<RoomEnvironmentalData>)","usecase.aggregation.AggregateRoomEnvironmentalDataExtractor.AggregateRoomEnvironmentalDataExtractor"]},{"name":"constructor(startDateTime: Instant, stopDateTime: Instant?, patientVitalSignsAggregateData: AggregateData<PatientVitalSigns>, environmentalAggregateData: Map<RoomType, AggregateData<RoomEnvironmentalData>>)","description":"entity.report.SurgeryProcessStepAggregateData.SurgeryProcessStepAggregateData","location":"surgery-report-microservice/entity.report/-surgery-process-step-aggregate-data/-surgery-process-step-aggregate-data.html","searchKeys":["SurgeryProcessStepAggregateData","constructor(startDateTime: Instant, stopDateTime: Instant?, patientVitalSignsAggregateData: AggregateData<PatientVitalSigns>, environmentalAggregateData: Map<RoomType, AggregateData<RoomEnvironmentalData>>)","entity.report.SurgeryProcessStepAggregateData.SurgeryProcessStepAggregateData"]},{"name":"constructor(startDateTime: String, stopDateTime: String?, patientVitalSignAggregateData: AggregateDataApiDto<PatientVitalSignsApiDto>, environmentalAggregateData: Map<RoomApiDtoType, AggregateDataApiDto<RoomEnvironmentalDataApiDto>>)","description":"application.presenter.api.model.SurgicalProcessStepAggregateDataApiDto.SurgicalProcessStepAggregateDataApiDto","location":"surgery-report-microservice/application.presenter.api.model/-surgical-process-step-aggregate-data-api-dto/-surgical-process-step-aggregate-data-api-dto.html","searchKeys":["SurgicalProcessStepAggregateDataApiDto","constructor(startDateTime: String, stopDateTime: String?, patientVitalSignAggregateData: AggregateDataApiDto<PatientVitalSignsApiDto>, environmentalAggregateData: Map<RoomApiDtoType, AggregateDataApiDto<RoomEnvironmentalDataApiDto>>)","application.presenter.api.model.SurgicalProcessStepAggregateDataApiDto.SurgicalProcessStepAggregateDataApiDto"]},{"name":"constructor(step: SurgicalProcessStep)","description":"entity.process.SurgicalProcessState.PostSurgery.PostSurgery","location":"surgery-report-microservice/entity.process/-surgical-process-state/-post-surgery/-post-surgery.html","searchKeys":["PostSurgery","constructor(step: SurgicalProcessStep)","entity.process.SurgicalProcessState.PostSurgery.PostSurgery"]},{"name":"constructor(step: SurgicalProcessStep)","description":"entity.process.SurgicalProcessState.PreSurgery.PreSurgery","location":"surgery-report-microservice/entity.process/-surgical-process-state/-pre-surgery/-pre-surgery.html","searchKeys":["PreSurgery","constructor(step: SurgicalProcessStep)","entity.process.SurgicalProcessState.PreSurgery.PreSurgery"]},{"name":"constructor(step: SurgicalProcessStep)","description":"entity.process.SurgicalProcessState.Surgery.Surgery","location":"surgery-report-microservice/entity.process/-surgical-process-state/-surgery/-surgery.html","searchKeys":["Surgery","constructor(step: SurgicalProcessStep)","entity.process.SurgicalProcessState.Surgery.Surgery"]},{"name":"constructor(surgeryReportRepository: SurgeryReportRepository)","description":"application.service.SurgeryReportService.GetAllSurgeryReportEntry.GetAllSurgeryReportEntry","location":"surgery-report-microservice/application.service/-surgery-report-service/-get-all-surgery-report-entry/-get-all-surgery-report-entry.html","searchKeys":["GetAllSurgeryReportEntry","constructor(surgeryReportRepository: SurgeryReportRepository)","application.service.SurgeryReportService.GetAllSurgeryReportEntry.GetAllSurgeryReportEntry"]},{"name":"constructor(surgeryReportRepository: SurgeryReportRepository)","description":"infrastructure.api.APIController.APIController","location":"surgery-report-microservice/infrastructure.api/-a-p-i-controller/-a-p-i-controller.html","searchKeys":["APIController","constructor(surgeryReportRepository: SurgeryReportRepository)","infrastructure.api.APIController.APIController"]},{"name":"constructor(surgeryReportRepository: SurgeryReportRepository, healthProfessionalRepository: HealthProfessionalRepository, roomRepository: RoomRepository, healthcareUserRepository: HealthcareUserRepository)","description":"application.handler.EventHandlers.SurgicalProcessSummaryEventHandler.SurgicalProcessSummaryEventHandler","location":"surgery-report-microservice/application.handler/-event-handlers/-surgical-process-summary-event-handler/-surgical-process-summary-event-handler.html","searchKeys":["SurgicalProcessSummaryEventHandler","constructor(surgeryReportRepository: SurgeryReportRepository, healthProfessionalRepository: HealthProfessionalRepository, roomRepository: RoomRepository, healthcareUserRepository: HealthcareUserRepository)","application.handler.EventHandlers.SurgicalProcessSummaryEventHandler.SurgicalProcessSummaryEventHandler"]},{"name":"constructor(surgeryReportRepository: SurgeryReportRepository, healthProfessionalRepository: HealthProfessionalRepository, roomRepository: RoomRepository, healthcareUserRepository: HealthcareUserRepository)","description":"infrastructure.events.KafkaClient.KafkaClient","location":"surgery-report-microservice/infrastructure.events/-kafka-client/-kafka-client.html","searchKeys":["KafkaClient","constructor(surgeryReportRepository: SurgeryReportRepository, healthProfessionalRepository: HealthProfessionalRepository, roomRepository: RoomRepository, healthcareUserRepository: HealthcareUserRepository)","infrastructure.events.KafkaClient.KafkaClient"]},{"name":"constructor(surgicalProcess: SurgicalProcess)","description":"usecase.GetSurgicalProcessStartEndUseCase.GetSurgicalProcessStartEndUseCase","location":"surgery-report-microservice/usecase/-get-surgical-process-start-end-use-case/-get-surgical-process-start-end-use-case.html","searchKeys":["GetSurgicalProcessStartEndUseCase","constructor(surgicalProcess: SurgicalProcess)","usecase.GetSurgicalProcessStartEndUseCase.GetSurgicalProcessStartEndUseCase"]},{"name":"constructor(surgicalProcess: SurgicalProcess, patientVitalSigns: List<Pair<Instant, PatientVitalSigns>>, consumedImplantableMedicalDevices: Set<ImplantableMedicalDevice>, medicalTechnologyUsage: Set<MedicalTechnologyUsage>, surgeryReportRepository: SurgeryReportRepository, healthProfessionalRepository: HealthProfessionalRepository, roomRepository: RoomRepository, healthcareUserRepository: HealthcareUserRepository)","description":"application.service.SurgeryReportService.GenerateSurgeryReport.GenerateSurgeryReport","location":"surgery-report-microservice/application.service/-surgery-report-service/-generate-surgery-report/-generate-surgery-report.html","searchKeys":["GenerateSurgeryReport","constructor(surgicalProcess: SurgicalProcess, patientVitalSigns: List<Pair<Instant, PatientVitalSigns>>, consumedImplantableMedicalDevices: Set<ImplantableMedicalDevice>, medicalTechnologyUsage: Set<MedicalTechnologyUsage>, surgeryReportRepository: SurgeryReportRepository, healthProfessionalRepository: HealthProfessionalRepository, roomRepository: RoomRepository, healthcareUserRepository: HealthcareUserRepository)","application.service.SurgeryReportService.GenerateSurgeryReport.GenerateSurgeryReport"]},{"name":"constructor(surgicalProcess: SurgicalProcess, patientVitalSigns: List<Pair<Instant, PatientVitalSigns>>, healthProfessionalTrackingInformation: List<TrackingInfo<HealthProfessionalID>>, environmentalData: Map<RoomType, List<Pair<Instant, RoomEnvironmentalData>>>, healthcareUser: HealthcareUser? = null, consumedImplantableMedicalDevices: Set<ImplantableMedicalDevice> = setOf(), medicalTechnologyUsage: Set<MedicalTechnologyUsage> = setOf())","description":"usecase.ReportGenerationUseCase.ReportGenerationUseCase","location":"surgery-report-microservice/usecase/-report-generation-use-case/-report-generation-use-case.html","searchKeys":["ReportGenerationUseCase","constructor(surgicalProcess: SurgicalProcess, patientVitalSigns: List<Pair<Instant, PatientVitalSigns>>, healthProfessionalTrackingInformation: List<TrackingInfo<HealthProfessionalID>>, environmentalData: Map<RoomType, List<Pair<Instant, RoomEnvironmentalData>>>, healthcareUser: HealthcareUser? = null, consumedImplantableMedicalDevices: Set<ImplantableMedicalDevice> = setOf(), medicalTechnologyUsage: Set<MedicalTechnologyUsage> = setOf())","usecase.ReportGenerationUseCase.ReportGenerationUseCase"]},{"name":"constructor(surgicalProcessID: String, patientId: String, patientName: String?, patientSurname: String?, surgicalProcessDescription: String, surgeryDate: String)","description":"application.presenter.api.model.SurgeryReportEntry.SurgeryReportEntry","location":"surgery-report-microservice/application.presenter.api.model/-surgery-report-entry/-surgery-report-entry.html","searchKeys":["SurgeryReportEntry","constructor(surgicalProcessID: String, patientId: String, patientName: String?, patientSurname: String?, surgicalProcessDescription: String, surgeryDate: String)","application.presenter.api.model.SurgeryReportEntry.SurgeryReportEntry"]},{"name":"constructor(surgicalProcessID: String, surgeryDate: String, surgicalProcessDescription: String, patientID: String, roomsInvolved: List<RoomApiDto>, inChargeHealthProfessionalID: String?, healthcareUser: HealthcareUserApiDto?, stepData: Map<SurgicalProcessStepApiDto, SurgicalProcessStepAggregateDataApiDto>, consumedImplantableMedicalDevice: Set<ImplantableMedicalDeviceApiDto>, medicalTechnologyUsageData: Set<MedicalTechnologyUsageApiDto>, healthProfessionalTrackingInformation: List<TrackingInformationApiDto>, additionalData: String)","description":"application.presenter.api.model.SurgeryReportApiDto.SurgeryReportApiDto","location":"surgery-report-microservice/application.presenter.api.model/-surgery-report-api-dto/-surgery-report-api-dto.html","searchKeys":["SurgeryReportApiDto","constructor(surgicalProcessID: String, surgeryDate: String, surgicalProcessDescription: String, patientID: String, roomsInvolved: List<RoomApiDto>, inChargeHealthProfessionalID: String?, healthcareUser: HealthcareUserApiDto?, stepData: Map<SurgicalProcessStepApiDto, SurgicalProcessStepAggregateDataApiDto>, consumedImplantableMedicalDevice: Set<ImplantableMedicalDeviceApiDto>, medicalTechnologyUsageData: Set<MedicalTechnologyUsageApiDto>, healthProfessionalTrackingInformation: List<TrackingInformationApiDto>, additionalData: String)","application.presenter.api.model.SurgeryReportApiDto.SurgeryReportApiDto"]},{"name":"constructor(surgicalProcessID: SurgicalProcessID, additionalInformation: String, surgeryReportRepository: SurgeryReportRepository)","description":"application.service.SurgeryReportService.IntegrateSurgeryReport.IntegrateSurgeryReport","location":"surgery-report-microservice/application.service/-surgery-report-service/-integrate-surgery-report/-integrate-surgery-report.html","searchKeys":["IntegrateSurgeryReport","constructor(surgicalProcessID: SurgicalProcessID, additionalInformation: String, surgeryReportRepository: SurgeryReportRepository)","application.service.SurgeryReportService.IntegrateSurgeryReport.IntegrateSurgeryReport"]},{"name":"constructor(surgicalProcessID: SurgicalProcessID, surgeryDate: Instant, surgicalProcessDescription: String, patientID: PatientID, roomsInvolved: Set<Room>, inChargeHealthProfessional: HealthProfessionalID?, healthcareUser: HealthcareUser?, stepData: Map<SurgicalProcessStep, SurgeryProcessStepAggregateData>, consumedImplantableMedicalDevices: Set<ImplantableMedicalDevice>, medicalTechnologyUsageData: Set<MedicalTechnologyUsage>, healthProfessionalTrackingInformation: List<TrackingInfo<HealthProfessionalID>>, additionalData: String = \"\")","description":"entity.report.SurgeryReport.SurgeryReport","location":"surgery-report-microservice/entity.report/-surgery-report/-surgery-report.html","searchKeys":["SurgeryReport","constructor(surgicalProcessID: SurgicalProcessID, surgeryDate: Instant, surgicalProcessDescription: String, patientID: PatientID, roomsInvolved: Set<Room>, inChargeHealthProfessional: HealthProfessionalID?, healthcareUser: HealthcareUser?, stepData: Map<SurgicalProcessStep, SurgeryProcessStepAggregateData>, consumedImplantableMedicalDevices: Set<ImplantableMedicalDevice>, medicalTechnologyUsageData: Set<MedicalTechnologyUsage>, healthProfessionalTrackingInformation: List<TrackingInfo<HealthProfessionalID>>, additionalData: String = \"\")","entity.report.SurgeryReport.SurgeryReport"]},{"name":"constructor(surgicalProcessID: SurgicalProcessID, surgeryReportRepository: SurgeryReportRepository)","description":"application.service.SurgeryReportService.GetSurgeryReport.GetSurgeryReport","location":"surgery-report-microservice/application.service/-surgery-report-service/-get-surgery-report/-get-surgery-report.html","searchKeys":["GetSurgeryReport","constructor(surgicalProcessID: SurgicalProcessID, surgeryReportRepository: SurgeryReportRepository)","application.service.SurgeryReportService.GetSurgeryReport.GetSurgeryReport"]},{"name":"constructor(taxCode: String, name: String, surname: String)","description":"application.presenter.api.model.healthcareuser.HealthcareUserApiDto.HealthcareUserApiDto","location":"surgery-report-microservice/application.presenter.api.model.healthcareuser/-healthcare-user-api-dto/-healthcare-user-api-dto.html","searchKeys":["HealthcareUserApiDto","constructor(taxCode: String, name: String, surname: String)","application.presenter.api.model.healthcareuser.HealthcareUserApiDto.HealthcareUserApiDto"]},{"name":"constructor(taxCode: String, name: String, surname: String, height: Double, weight: Double, birthdate: String, bloodGroup: String)","description":"application.presenter.external.model.PatientManagementIntegrationDtoModel.HealthcareUserResultDto.HealthcareUserResultDto","location":"surgery-report-microservice/application.presenter.external.model/-patient-management-integration-dto-model/-healthcare-user-result-dto/-healthcare-user-result-dto.html","searchKeys":["HealthcareUserResultDto","constructor(taxCode: String, name: String, surname: String, height: Double, weight: Double, birthdate: String, bloodGroup: String)","application.presenter.external.model.PatientManagementIntegrationDtoModel.HealthcareUserResultDto.HealthcareUserResultDto"]},{"name":"constructor(taxCode: TaxCode, name: String, surname: String)","description":"entity.healthcareuser.HealthcareUser.HealthcareUser","location":"surgery-report-microservice/entity.healthcareuser/-healthcare-user/-healthcare-user.html","searchKeys":["HealthcareUser","constructor(taxCode: TaxCode, name: String, surname: String)","entity.healthcareuser.HealthcareUser.HealthcareUser"]},{"name":"constructor(temperature: BuildingManagementDtoModel.ValueWithExplicitUnit<Double, BuildingManagementDtoModel.TemperatureUnitResultDto>? = null, humidity: Double? = null, luminosity: BuildingManagementDtoModel.ValueWithExplicitUnit<Double, BuildingManagementDtoModel.LuminosityUnitResultDto>? = null, presence: Boolean? = null)","description":"application.presenter.external.model.BuildingManagementDtoModel.EnvironmentalDataApiDto.EnvironmentalDataApiDto","location":"surgery-report-microservice/application.presenter.external.model/-building-management-dto-model/-environmental-data-api-dto/-environmental-data-api-dto.html","searchKeys":["EnvironmentalDataApiDto","constructor(temperature: BuildingManagementDtoModel.ValueWithExplicitUnit<Double, BuildingManagementDtoModel.TemperatureUnitResultDto>? = null, humidity: Double? = null, luminosity: BuildingManagementDtoModel.ValueWithExplicitUnit<Double, BuildingManagementDtoModel.LuminosityUnitResultDto>? = null, presence: Boolean? = null)","application.presenter.external.model.BuildingManagementDtoModel.EnvironmentalDataApiDto.EnvironmentalDataApiDto"]},{"name":"constructor(temperature: Temperature)","description":"entity.healthcareuser.VitalSign.BodyTemperature.BodyTemperature","location":"surgery-report-microservice/entity.healthcareuser/-vital-sign/-body-temperature/-body-temperature.html","searchKeys":["BodyTemperature","constructor(temperature: Temperature)","entity.healthcareuser.VitalSign.BodyTemperature.BodyTemperature"]},{"name":"constructor(temperature: Temperature? = null, humidity: Humidity? = null, luminosity: Luminosity? = null, presence: Presence? = null)","description":"entity.room.RoomEnvironmentalData.RoomEnvironmentalData","location":"surgery-report-microservice/entity.room/-room-environmental-data/-room-environmental-data.html","searchKeys":["RoomEnvironmentalData","constructor(temperature: Temperature? = null, humidity: Humidity? = null, luminosity: Luminosity? = null, presence: Presence? = null)","entity.room.RoomEnvironmentalData.RoomEnvironmentalData"]},{"name":"constructor(temperature: ValueWithUnit<Double>? = null, humidity: Double? = null, luminosity: ValueWithUnit<Double>? = null, presence: Boolean? = null)","description":"application.presenter.api.model.room.RoomEnvironmentalDataApiDto.RoomEnvironmentalDataApiDto","location":"surgery-report-microservice/application.presenter.api.model.room/-room-environmental-data-api-dto/-room-environmental-data-api-dto.html","searchKeys":["RoomEnvironmentalDataApiDto","constructor(temperature: ValueWithUnit<Double>? = null, humidity: Double? = null, luminosity: ValueWithUnit<Double>? = null, presence: Boolean? = null)","application.presenter.api.model.room.RoomEnvironmentalDataApiDto.RoomEnvironmentalDataApiDto"]},{"name":"constructor(value: Double)","description":"entity.measurements.Percentage.Percentage","location":"surgery-report-microservice/entity.measurements/-percentage/-percentage.html","searchKeys":["Percentage","constructor(value: Double)","entity.measurements.Percentage.Percentage"]},{"name":"constructor(value: Double, unit: LightUnit = LightUnit.LUX)","description":"entity.measurements.Luminosity.Luminosity","location":"surgery-report-microservice/entity.measurements/-luminosity/-luminosity.html","searchKeys":["Luminosity","constructor(value: Double, unit: LightUnit = LightUnit.LUX)","entity.measurements.Luminosity.Luminosity"]},{"name":"constructor(value: Double, unit: TemperatureUnit = TemperatureUnit.CELSIUS)","description":"entity.measurements.Temperature.Temperature","location":"surgery-report-microservice/entity.measurements/-temperature/-temperature.html","searchKeys":["Temperature","constructor(value: Double, unit: TemperatureUnit = TemperatureUnit.CELSIUS)","entity.measurements.Temperature.Temperature"]},{"name":"constructor(value: String)","description":"entity.healthcareuser.PatientID.PatientID","location":"surgery-report-microservice/entity.healthcareuser/-patient-i-d/-patient-i-d.html","searchKeys":["PatientID","constructor(value: String)","entity.healthcareuser.PatientID.PatientID"]},{"name":"constructor(value: String)","description":"entity.healthcareuser.TaxCode.TaxCode","location":"surgery-report-microservice/entity.healthcareuser/-tax-code/-tax-code.html","searchKeys":["TaxCode","constructor(value: String)","entity.healthcareuser.TaxCode.TaxCode"]},{"name":"constructor(value: String)","description":"entity.healthprofessional.HealthProfessionalID.HealthProfessionalID","location":"surgery-report-microservice/entity.healthprofessional/-health-professional-i-d/-health-professional-i-d.html","searchKeys":["HealthProfessionalID","constructor(value: String)","entity.healthprofessional.HealthProfessionalID.HealthProfessionalID"]},{"name":"constructor(value: String)","description":"entity.medicaldevice.ImplantableMedicalDeviceID.ImplantableMedicalDeviceID","location":"surgery-report-microservice/entity.medicaldevice/-implantable-medical-device-i-d/-implantable-medical-device-i-d.html","searchKeys":["ImplantableMedicalDeviceID","constructor(value: String)","entity.medicaldevice.ImplantableMedicalDeviceID.ImplantableMedicalDeviceID"]},{"name":"constructor(value: String)","description":"entity.medicaldevice.MedicalTechnologyID.MedicalTechnologyID","location":"surgery-report-microservice/entity.medicaldevice/-medical-technology-i-d/-medical-technology-i-d.html","searchKeys":["MedicalTechnologyID","constructor(value: String)","entity.medicaldevice.MedicalTechnologyID.MedicalTechnologyID"]},{"name":"constructor(value: String)","description":"entity.process.SurgicalProcessID.SurgicalProcessID","location":"surgery-report-microservice/entity.process/-surgical-process-i-d/-surgical-process-i-d.html","searchKeys":["SurgicalProcessID","constructor(value: String)","entity.process.SurgicalProcessID.SurgicalProcessID"]},{"name":"constructor(value: String)","description":"entity.room.RoomID.RoomID","location":"surgery-report-microservice/entity.room/-room-i-d/-room-i-d.html","searchKeys":["RoomID","constructor(value: String)","entity.room.RoomID.RoomID"]},{"name":"constructor(value: T, unit: String)","description":"application.presenter.api.model.measurements.ValueWithUnit.ValueWithUnit","location":"surgery-report-microservice/application.presenter.api.model.measurements/-value-with-unit/-value-with-unit.html","searchKeys":["ValueWithUnit","constructor(value: T, unit: String)","application.presenter.api.model.measurements.ValueWithUnit.ValueWithUnit"]},{"name":"constructor(value: V, unit: T)","description":"application.presenter.external.model.BuildingManagementDtoModel.ValueWithExplicitUnit.ValueWithExplicitUnit","location":"surgery-report-microservice/application.presenter.external.model/-building-management-dto-model/-value-with-explicit-unit/-value-with-explicit-unit.html","searchKeys":["ValueWithExplicitUnit","constructor(value: V, unit: T)","application.presenter.external.model.BuildingManagementDtoModel.ValueWithExplicitUnit.ValueWithExplicitUnit"]},{"name":"constructor(vitalSigns: Collection<PatientVitalSigns>)","description":"usecase.aggregation.AggregateVitalSignsExtractor.AggregateVitalSignsExtractor","location":"surgery-report-microservice/usecase.aggregation/-aggregate-vital-signs-extractor/-aggregate-vital-signs-extractor.html","searchKeys":["AggregateVitalSignsExtractor","constructor(vitalSigns: Collection<PatientVitalSigns>)","usecase.aggregation.AggregateVitalSignsExtractor.AggregateVitalSignsExtractor"]},{"name":"data class AggregateData<out E>(val average: E, val std: E, val maximum: E, val minimum: E)","description":"entity.measurements.AggregateData","location":"surgery-report-microservice/entity.measurements/-aggregate-data/index.html","searchKeys":["AggregateData","data class AggregateData<out E>(val average: E, val std: E, val maximum: E, val minimum: E)","entity.measurements.AggregateData"]},{"name":"data class AggregateDataApiDto<out E>(val average: E, val std: E, val maximum: E, val minimum: E)","description":"application.presenter.api.model.measurements.AggregateDataApiDto","location":"surgery-report-microservice/application.presenter.api.model.measurements/-aggregate-data-api-dto/index.html","searchKeys":["AggregateDataApiDto","data class AggregateDataApiDto<out E>(val average: E, val std: E, val maximum: E, val minimum: E)","application.presenter.api.model.measurements.AggregateDataApiDto"]},{"name":"data class BodyTemperature(val temperature: Temperature)","description":"entity.healthcareuser.VitalSign.BodyTemperature","location":"surgery-report-microservice/entity.healthcareuser/-vital-sign/-body-temperature/index.html","searchKeys":["BodyTemperature","data class BodyTemperature(val temperature: Temperature)","entity.healthcareuser.VitalSign.BodyTemperature"]},{"name":"data class BodyTemperatureEventDto(val degree: Double, val unit: TemperatureUnitEventDto)","description":"application.presenter.event.model.BodyTemperatureEventDto","location":"surgery-report-microservice/application.presenter.event.model/-body-temperature-event-dto/index.html","searchKeys":["BodyTemperatureEventDto","data class BodyTemperatureEventDto(val degree: Double, val unit: TemperatureUnitEventDto)","application.presenter.event.model.BodyTemperatureEventDto"]},{"name":"data class DiastolicBloodPressure(val pressure: Int)","description":"entity.healthcareuser.VitalSign.DiastolicBloodPressure","location":"surgery-report-microservice/entity.healthcareuser/-vital-sign/-diastolic-blood-pressure/index.html","searchKeys":["DiastolicBloodPressure","data class DiastolicBloodPressure(val pressure: Int)","entity.healthcareuser.VitalSign.DiastolicBloodPressure"]},{"name":"data class DiastolicBloodPressureEventDto(val pressure: Int)","description":"application.presenter.event.model.DiastolicBloodPressureEventDto","location":"surgery-report-microservice/application.presenter.event.model/-diastolic-blood-pressure-event-dto/index.html","searchKeys":["DiastolicBloodPressureEventDto","data class DiastolicBloodPressureEventDto(val pressure: Int)","application.presenter.event.model.DiastolicBloodPressureEventDto"]},{"name":"data class EnvironmentalDataApiDto(val temperature: BuildingManagementDtoModel.ValueWithExplicitUnit<Double, BuildingManagementDtoModel.TemperatureUnitResultDto>? = null, val humidity: Double? = null, val luminosity: BuildingManagementDtoModel.ValueWithExplicitUnit<Double, BuildingManagementDtoModel.LuminosityUnitResultDto>? = null, val presence: Boolean? = null)","description":"application.presenter.external.model.BuildingManagementDtoModel.EnvironmentalDataApiDto","location":"surgery-report-microservice/application.presenter.external.model/-building-management-dto-model/-environmental-data-api-dto/index.html","searchKeys":["EnvironmentalDataApiDto","data class EnvironmentalDataApiDto(val temperature: BuildingManagementDtoModel.ValueWithExplicitUnit<Double, BuildingManagementDtoModel.TemperatureUnitResultDto>? = null, val humidity: Double? = null, val luminosity: BuildingManagementDtoModel.ValueWithExplicitUnit<Double, BuildingManagementDtoModel.LuminosityUnitResultDto>? = null, val presence: Boolean? = null)","application.presenter.external.model.BuildingManagementDtoModel.EnvironmentalDataApiDto"]},{"name":"data class HealthProfessionalID(val value: String)","description":"entity.healthprofessional.HealthProfessionalID","location":"surgery-report-microservice/entity.healthprofessional/-health-professional-i-d/index.html","searchKeys":["HealthProfessionalID","data class HealthProfessionalID(val value: String)","entity.healthprofessional.HealthProfessionalID"]},{"name":"data class HealthcareUser(val taxCode: TaxCode, val name: String, val surname: String)","description":"entity.healthcareuser.HealthcareUser","location":"surgery-report-microservice/entity.healthcareuser/-healthcare-user/index.html","searchKeys":["HealthcareUser","data class HealthcareUser(val taxCode: TaxCode, val name: String, val surname: String)","entity.healthcareuser.HealthcareUser"]},{"name":"data class HealthcareUserApiDto(val taxCode: String, val name: String, val surname: String)","description":"application.presenter.api.model.healthcareuser.HealthcareUserApiDto","location":"surgery-report-microservice/application.presenter.api.model.healthcareuser/-healthcare-user-api-dto/index.html","searchKeys":["HealthcareUserApiDto","data class HealthcareUserApiDto(val taxCode: String, val name: String, val surname: String)","application.presenter.api.model.healthcareuser.HealthcareUserApiDto"]},{"name":"data class HealthcareUserResultDto(val taxCode: String, val name: String, val surname: String, val height: Double, val weight: Double, val birthdate: String, val bloodGroup: String)","description":"application.presenter.external.model.PatientManagementIntegrationDtoModel.HealthcareUserResultDto","location":"surgery-report-microservice/application.presenter.external.model/-patient-management-integration-dto-model/-healthcare-user-result-dto/index.html","searchKeys":["HealthcareUserResultDto","data class HealthcareUserResultDto(val taxCode: String, val name: String, val surname: String, val height: Double, val weight: Double, val birthdate: String, val bloodGroup: String)","application.presenter.external.model.PatientManagementIntegrationDtoModel.HealthcareUserResultDto"]},{"name":"data class HeartBeat(val bpm: Int)","description":"entity.healthcareuser.VitalSign.HeartBeat","location":"surgery-report-microservice/entity.healthcareuser/-vital-sign/-heart-beat/index.html","searchKeys":["HeartBeat","data class HeartBeat(val bpm: Int)","entity.healthcareuser.VitalSign.HeartBeat"]},{"name":"data class HeartBeatEventDto(val bpm: Int)","description":"application.presenter.event.model.HeartBeatEventDto","location":"surgery-report-microservice/application.presenter.event.model/-heart-beat-event-dto/index.html","searchKeys":["HeartBeatEventDto","data class HeartBeatEventDto(val bpm: Int)","application.presenter.event.model.HeartBeatEventDto"]},{"name":"data class Humidity(val percentage: Percentage)","description":"entity.measurements.Humidity","location":"surgery-report-microservice/entity.measurements/-humidity/index.html","searchKeys":["Humidity","data class Humidity(val percentage: Percentage)","entity.measurements.Humidity"]},{"name":"data class ImplantableMedicalDevice(val id: ImplantableMedicalDeviceID, val type: ImplantableMedicalDeviceType)","description":"entity.medicaldevice.ImplantableMedicalDevice","location":"surgery-report-microservice/entity.medicaldevice/-implantable-medical-device/index.html","searchKeys":["ImplantableMedicalDevice","data class ImplantableMedicalDevice(val id: ImplantableMedicalDeviceID, val type: ImplantableMedicalDeviceType)","entity.medicaldevice.ImplantableMedicalDevice"]},{"name":"data class ImplantableMedicalDeviceApiDto(val id: String, val type: ImplantableMedicalDeviceApiDtoType)","description":"application.presenter.api.model.medicaldevice.ImplantableMedicalDeviceApiDto","location":"surgery-report-microservice/application.presenter.api.model.medicaldevice/-implantable-medical-device-api-dto/index.html","searchKeys":["ImplantableMedicalDeviceApiDto","data class ImplantableMedicalDeviceApiDto(val id: String, val type: ImplantableMedicalDeviceApiDtoType)","application.presenter.api.model.medicaldevice.ImplantableMedicalDeviceApiDto"]},{"name":"data class ImplantableMedicalDeviceEventDto(val id: ImplantableMedicalDeviceIDEventDto, val type: ImplantableMedicalDeviceTypeEventDto)","description":"application.presenter.event.model.ImplantableMedicalDeviceEventDto","location":"surgery-report-microservice/application.presenter.event.model/-implantable-medical-device-event-dto/index.html","searchKeys":["ImplantableMedicalDeviceEventDto","data class ImplantableMedicalDeviceEventDto(val id: ImplantableMedicalDeviceIDEventDto, val type: ImplantableMedicalDeviceTypeEventDto)","application.presenter.event.model.ImplantableMedicalDeviceEventDto"]},{"name":"data class ImplantableMedicalDeviceID(val value: String)","description":"entity.medicaldevice.ImplantableMedicalDeviceID","location":"surgery-report-microservice/entity.medicaldevice/-implantable-medical-device-i-d/index.html","searchKeys":["ImplantableMedicalDeviceID","data class ImplantableMedicalDeviceID(val value: String)","entity.medicaldevice.ImplantableMedicalDeviceID"]},{"name":"data class ImplantableMedicalDeviceIDEventDto(val id: String)","description":"application.presenter.event.model.ImplantableMedicalDeviceIDEventDto","location":"surgery-report-microservice/application.presenter.event.model/-implantable-medical-device-i-d-event-dto/index.html","searchKeys":["ImplantableMedicalDeviceIDEventDto","data class ImplantableMedicalDeviceIDEventDto(val id: String)","application.presenter.event.model.ImplantableMedicalDeviceIDEventDto"]},{"name":"data class Luminosity(val value: Double, val unit: LightUnit = LightUnit.LUX)","description":"entity.measurements.Luminosity","location":"surgery-report-microservice/entity.measurements/-luminosity/index.html","searchKeys":["Luminosity","data class Luminosity(val value: Double, val unit: LightUnit = LightUnit.LUX)","entity.measurements.Luminosity"]},{"name":"data class MedicalTechnology(val id: MedicalTechnologyID, val name: String, val description: String? = null, val type: MedicalTechnologyType, val inUse: Boolean = false)","description":"entity.medicaldevice.MedicalTechnology","location":"surgery-report-microservice/entity.medicaldevice/-medical-technology/index.html","searchKeys":["MedicalTechnology","data class MedicalTechnology(val id: MedicalTechnologyID, val name: String, val description: String? = null, val type: MedicalTechnologyType, val inUse: Boolean = false)","entity.medicaldevice.MedicalTechnology"]},{"name":"data class MedicalTechnologyApiDto(val id: String, val name: String, val description: String? = null, val type: MedicalTechnologyApiDtoType, val inUse: Boolean = false)","description":"application.presenter.api.model.medicaldevice.MedicalTechnologyApiDto","location":"surgery-report-microservice/application.presenter.api.model.medicaldevice/-medical-technology-api-dto/index.html","searchKeys":["MedicalTechnologyApiDto","data class MedicalTechnologyApiDto(val id: String, val name: String, val description: String? = null, val type: MedicalTechnologyApiDtoType, val inUse: Boolean = false)","application.presenter.api.model.medicaldevice.MedicalTechnologyApiDto"]},{"name":"data class MedicalTechnologyEventDto(val id: MedicalTechnologyIDEventDto, val name: String, val description: String? = null, val type: MedicalTechnologyTypeEventDto, val inUse: Boolean)","description":"application.presenter.event.model.MedicalTechnologyEventDto","location":"surgery-report-microservice/application.presenter.event.model/-medical-technology-event-dto/index.html","searchKeys":["MedicalTechnologyEventDto","data class MedicalTechnologyEventDto(val id: MedicalTechnologyIDEventDto, val name: String, val description: String? = null, val type: MedicalTechnologyTypeEventDto, val inUse: Boolean)","application.presenter.event.model.MedicalTechnologyEventDto"]},{"name":"data class MedicalTechnologyID(val value: String)","description":"entity.medicaldevice.MedicalTechnologyID","location":"surgery-report-microservice/entity.medicaldevice/-medical-technology-i-d/index.html","searchKeys":["MedicalTechnologyID","data class MedicalTechnologyID(val value: String)","entity.medicaldevice.MedicalTechnologyID"]},{"name":"data class MedicalTechnologyIDEventDto(val id: String)","description":"application.presenter.event.model.MedicalTechnologyIDEventDto","location":"surgery-report-microservice/application.presenter.event.model/-medical-technology-i-d-event-dto/index.html","searchKeys":["MedicalTechnologyIDEventDto","data class MedicalTechnologyIDEventDto(val id: String)","application.presenter.event.model.MedicalTechnologyIDEventDto"]},{"name":"data class MedicalTechnologyUsageApiDto(val dateTime: String, val medicalTechnology: MedicalTechnologyApiDto)","description":"application.presenter.api.model.medicaldevice.MedicalTechnologyUsageApiDto","location":"surgery-report-microservice/application.presenter.api.model.medicaldevice/-medical-technology-usage-api-dto/index.html","searchKeys":["MedicalTechnologyUsageApiDto","data class MedicalTechnologyUsageApiDto(val dateTime: String, val medicalTechnology: MedicalTechnologyApiDto)","application.presenter.api.model.medicaldevice.MedicalTechnologyUsageApiDto"]},{"name":"data class PatientID(val value: String)","description":"entity.healthcareuser.PatientID","location":"surgery-report-microservice/entity.healthcareuser/-patient-i-d/index.html","searchKeys":["PatientID","data class PatientID(val value: String)","entity.healthcareuser.PatientID"]},{"name":"data class PatientVitalSigns(val heartBeat: VitalSign.HeartBeat? = null, val diastolicBloodPressure: VitalSign.DiastolicBloodPressure? = null, val systolicBloodPressure: VitalSign.SystolicBloodPressure? = null, val respiratoryRate: VitalSign.RespiratoryRate? = null, val saturationPercentage: VitalSign.SaturationPercentage? = null, val bodyTemperature: VitalSign.BodyTemperature? = null)","description":"entity.healthcareuser.PatientVitalSigns","location":"surgery-report-microservice/entity.healthcareuser/-patient-vital-signs/index.html","searchKeys":["PatientVitalSigns","data class PatientVitalSigns(val heartBeat: VitalSign.HeartBeat? = null, val diastolicBloodPressure: VitalSign.DiastolicBloodPressure? = null, val systolicBloodPressure: VitalSign.SystolicBloodPressure? = null, val respiratoryRate: VitalSign.RespiratoryRate? = null, val saturationPercentage: VitalSign.SaturationPercentage? = null, val bodyTemperature: VitalSign.BodyTemperature? = null)","entity.healthcareuser.PatientVitalSigns"]},{"name":"data class PatientVitalSignsApiDto(val heartBeat: Int? = null, val diastolicBloodPressure: Int? = null, val systolicBloodPressure: Int? = null, val respiratoryRate: Int? = null, val saturationPercentage: Double? = null, val bodyTemperature: ValueWithUnit<Double>? = null)","description":"application.presenter.api.model.healthcareuser.PatientVitalSignsApiDto","location":"surgery-report-microservice/application.presenter.api.model.healthcareuser/-patient-vital-signs-api-dto/index.html","searchKeys":["PatientVitalSignsApiDto","data class PatientVitalSignsApiDto(val heartBeat: Int? = null, val diastolicBloodPressure: Int? = null, val systolicBloodPressure: Int? = null, val respiratoryRate: Int? = null, val saturationPercentage: Double? = null, val bodyTemperature: ValueWithUnit<Double>? = null)","application.presenter.api.model.healthcareuser.PatientVitalSignsApiDto"]},{"name":"data class PatientVitalSignsEventDto(val heartBeat: HeartBeatEventDto? = null, val diastolicBloodPressure: DiastolicBloodPressureEventDto? = null, val systolicBloodPressure: SystolicBloodPressureEventDto? = null, val respiratoryRate: RespiratoryRateEventDto? = null, val saturationPercentage: SaturationPercentageEventDto? = null, val bodyTemperature: BodyTemperatureEventDto? = null)","description":"application.presenter.event.model.PatientVitalSignsEventDto","location":"surgery-report-microservice/application.presenter.event.model/-patient-vital-signs-event-dto/index.html","searchKeys":["PatientVitalSignsEventDto","data class PatientVitalSignsEventDto(val heartBeat: HeartBeatEventDto? = null, val diastolicBloodPressure: DiastolicBloodPressureEventDto? = null, val systolicBloodPressure: SystolicBloodPressureEventDto? = null, val respiratoryRate: RespiratoryRateEventDto? = null, val saturationPercentage: SaturationPercentageEventDto? = null, val bodyTemperature: BodyTemperatureEventDto? = null)","application.presenter.event.model.PatientVitalSignsEventDto"]},{"name":"data class Percentage(val value: Double)","description":"entity.measurements.Percentage","location":"surgery-report-microservice/entity.measurements/-percentage/index.html","searchKeys":["Percentage","data class Percentage(val value: Double)","entity.measurements.Percentage"]},{"name":"data class PostSurgery(step: SurgicalProcessStep) : SurgicalProcessState","description":"entity.process.SurgicalProcessState.PostSurgery","location":"surgery-report-microservice/entity.process/-surgical-process-state/-post-surgery/index.html","searchKeys":["PostSurgery","data class PostSurgery(step: SurgicalProcessStep) : SurgicalProcessState","entity.process.SurgicalProcessState.PostSurgery"]},{"name":"data class PreSurgery(step: SurgicalProcessStep) : SurgicalProcessState","description":"entity.process.SurgicalProcessState.PreSurgery","location":"surgery-report-microservice/entity.process/-surgical-process-state/-pre-surgery/index.html","searchKeys":["PreSurgery","data class PreSurgery(step: SurgicalProcessStep) : SurgicalProcessState","entity.process.SurgicalProcessState.PreSurgery"]},{"name":"data class Presence(val presenceDetected: Boolean)","description":"entity.measurements.Presence","location":"surgery-report-microservice/entity.measurements/-presence/index.html","searchKeys":["Presence","data class Presence(val presenceDetected: Boolean)","entity.measurements.Presence"]},{"name":"data class RespiratoryRate(val rate: Int)","description":"entity.healthcareuser.VitalSign.RespiratoryRate","location":"surgery-report-microservice/entity.healthcareuser/-vital-sign/-respiratory-rate/index.html","searchKeys":["RespiratoryRate","data class RespiratoryRate(val rate: Int)","entity.healthcareuser.VitalSign.RespiratoryRate"]},{"name":"data class RespiratoryRateEventDto(val rate: Int)","description":"application.presenter.event.model.RespiratoryRateEventDto","location":"surgery-report-microservice/application.presenter.event.model/-respiratory-rate-event-dto/index.html","searchKeys":["RespiratoryRateEventDto","data class RespiratoryRateEventDto(val rate: Int)","application.presenter.event.model.RespiratoryRateEventDto"]},{"name":"data class ResponseEntry<out T>(val entry: T, val url: String?)","description":"application.presenter.api.model.apiresponse.ApiResponses.ResponseEntry","location":"surgery-report-microservice/application.presenter.api.model.apiresponse/-api-responses/-response-entry/index.html","searchKeys":["ResponseEntry","data class ResponseEntry<out T>(val entry: T, val url: String?)","application.presenter.api.model.apiresponse.ApiResponses.ResponseEntry"]},{"name":"data class ResponseEntryList<out T>(val entries: List<T>, val total: Int)","description":"application.presenter.api.model.apiresponse.ApiResponses.ResponseEntryList","location":"surgery-report-microservice/application.presenter.api.model.apiresponse/-api-responses/-response-entry-list/index.html","searchKeys":["ResponseEntryList","data class ResponseEntryList<out T>(val entries: List<T>, val total: Int)","application.presenter.api.model.apiresponse.ApiResponses.ResponseEntryList"]},{"name":"data class ResponseTimedEntry<out T>(val entry: T, val date: String)","description":"application.presenter.api.model.apiresponse.ApiResponses.ResponseTimedEntry","location":"surgery-report-microservice/application.presenter.api.model.apiresponse/-api-responses/-response-timed-entry/index.html","searchKeys":["ResponseTimedEntry","data class ResponseTimedEntry<out T>(val entry: T, val date: String)","application.presenter.api.model.apiresponse.ApiResponses.ResponseTimedEntry"]},{"name":"data class Room(val id: RoomID, val type: RoomType)","description":"entity.room.Room","location":"surgery-report-microservice/entity.room/-room/index.html","searchKeys":["Room","data class Room(val id: RoomID, val type: RoomType)","entity.room.Room"]},{"name":"data class RoomApiDto(val id: String, val type: RoomApiDtoType)","description":"application.presenter.api.model.room.RoomApiDto","location":"surgery-report-microservice/application.presenter.api.model.room/-room-api-dto/index.html","searchKeys":["RoomApiDto","data class RoomApiDto(val id: String, val type: RoomApiDtoType)","application.presenter.api.model.room.RoomApiDto"]},{"name":"data class RoomEnvironmentalData(val temperature: Temperature? = null, val humidity: Humidity? = null, val luminosity: Luminosity? = null, val presence: Presence? = null)","description":"entity.room.RoomEnvironmentalData","location":"surgery-report-microservice/entity.room/-room-environmental-data/index.html","searchKeys":["RoomEnvironmentalData","data class RoomEnvironmentalData(val temperature: Temperature? = null, val humidity: Humidity? = null, val luminosity: Luminosity? = null, val presence: Presence? = null)","entity.room.RoomEnvironmentalData"]},{"name":"data class RoomEnvironmentalDataApiDto(val temperature: ValueWithUnit<Double>? = null, val humidity: Double? = null, val luminosity: ValueWithUnit<Double>? = null, val presence: Boolean? = null)","description":"application.presenter.api.model.room.RoomEnvironmentalDataApiDto","location":"surgery-report-microservice/application.presenter.api.model.room/-room-environmental-data-api-dto/index.html","searchKeys":["RoomEnvironmentalDataApiDto","data class RoomEnvironmentalDataApiDto(val temperature: ValueWithUnit<Double>? = null, val humidity: Double? = null, val luminosity: ValueWithUnit<Double>? = null, val presence: Boolean? = null)","application.presenter.api.model.room.RoomEnvironmentalDataApiDto"]},{"name":"data class RoomID(val value: String)","description":"entity.room.RoomID","location":"surgery-report-microservice/entity.room/-room-i-d/index.html","searchKeys":["RoomID","data class RoomID(val value: String)","entity.room.RoomID"]},{"name":"data class SaturationPercentage(val percentage: Percentage)","description":"entity.healthcareuser.VitalSign.SaturationPercentage","location":"surgery-report-microservice/entity.healthcareuser/-vital-sign/-saturation-percentage/index.html","searchKeys":["SaturationPercentage","data class SaturationPercentage(val percentage: Percentage)","entity.healthcareuser.VitalSign.SaturationPercentage"]},{"name":"data class SaturationPercentageEventDto(val percentage: Int)","description":"application.presenter.event.model.SaturationPercentageEventDto","location":"surgery-report-microservice/application.presenter.event.model/-saturation-percentage-event-dto/index.html","searchKeys":["SaturationPercentageEventDto","data class SaturationPercentageEventDto(val percentage: Int)","application.presenter.event.model.SaturationPercentageEventDto"]},{"name":"data class Surgery(step: SurgicalProcessStep) : SurgicalProcessState","description":"entity.process.SurgicalProcessState.Surgery","location":"surgery-report-microservice/entity.process/-surgical-process-state/-surgery/index.html","searchKeys":["Surgery","data class Surgery(step: SurgicalProcessStep) : SurgicalProcessState","entity.process.SurgicalProcessState.Surgery"]},{"name":"data class SurgeryProcessStepAggregateData(val startDateTime: Instant, val stopDateTime: Instant?, val patientVitalSignsAggregateData: AggregateData<PatientVitalSigns>, val environmentalAggregateData: Map<RoomType, AggregateData<RoomEnvironmentalData>>)","description":"entity.report.SurgeryProcessStepAggregateData","location":"surgery-report-microservice/entity.report/-surgery-process-step-aggregate-data/index.html","searchKeys":["SurgeryProcessStepAggregateData","data class SurgeryProcessStepAggregateData(val startDateTime: Instant, val stopDateTime: Instant?, val patientVitalSignsAggregateData: AggregateData<PatientVitalSigns>, val environmentalAggregateData: Map<RoomType, AggregateData<RoomEnvironmentalData>>)","entity.report.SurgeryProcessStepAggregateData"]},{"name":"data class SurgeryReport(val surgicalProcessID: SurgicalProcessID, val surgeryDate: Instant, val surgicalProcessDescription: String, val patientID: PatientID, val roomsInvolved: Set<Room>, val inChargeHealthProfessional: HealthProfessionalID?, val healthcareUser: HealthcareUser?, val stepData: Map<SurgicalProcessStep, SurgeryProcessStepAggregateData>, val consumedImplantableMedicalDevices: Set<ImplantableMedicalDevice>, val medicalTechnologyUsageData: Set<MedicalTechnologyUsage>, val healthProfessionalTrackingInformation: List<TrackingInfo<HealthProfessionalID>>, val additionalData: String = \"\")","description":"entity.report.SurgeryReport","location":"surgery-report-microservice/entity.report/-surgery-report/index.html","searchKeys":["SurgeryReport","data class SurgeryReport(val surgicalProcessID: SurgicalProcessID, val surgeryDate: Instant, val surgicalProcessDescription: String, val patientID: PatientID, val roomsInvolved: Set<Room>, val inChargeHealthProfessional: HealthProfessionalID?, val healthcareUser: HealthcareUser?, val stepData: Map<SurgicalProcessStep, SurgeryProcessStepAggregateData>, val consumedImplantableMedicalDevices: Set<ImplantableMedicalDevice>, val medicalTechnologyUsageData: Set<MedicalTechnologyUsage>, val healthProfessionalTrackingInformation: List<TrackingInfo<HealthProfessionalID>>, val additionalData: String = \"\")","entity.report.SurgeryReport"]},{"name":"data class SurgeryReportApiDto(val surgicalProcessID: String, val surgeryDate: String, val surgicalProcessDescription: String, val patientID: String, val roomsInvolved: List<RoomApiDto>, val inChargeHealthProfessionalID: String?, val healthcareUser: HealthcareUserApiDto?, val stepData: Map<SurgicalProcessStepApiDto, SurgicalProcessStepAggregateDataApiDto>, val consumedImplantableMedicalDevice: Set<ImplantableMedicalDeviceApiDto>, val medicalTechnologyUsageData: Set<MedicalTechnologyUsageApiDto>, val healthProfessionalTrackingInformation: List<TrackingInformationApiDto>, val additionalData: String)","description":"application.presenter.api.model.SurgeryReportApiDto","location":"surgery-report-microservice/application.presenter.api.model/-surgery-report-api-dto/index.html","searchKeys":["SurgeryReportApiDto","data class SurgeryReportApiDto(val surgicalProcessID: String, val surgeryDate: String, val surgicalProcessDescription: String, val patientID: String, val roomsInvolved: List<RoomApiDto>, val inChargeHealthProfessionalID: String?, val healthcareUser: HealthcareUserApiDto?, val stepData: Map<SurgicalProcessStepApiDto, SurgicalProcessStepAggregateDataApiDto>, val consumedImplantableMedicalDevice: Set<ImplantableMedicalDeviceApiDto>, val medicalTechnologyUsageData: Set<MedicalTechnologyUsageApiDto>, val healthProfessionalTrackingInformation: List<TrackingInformationApiDto>, val additionalData: String)","application.presenter.api.model.SurgeryReportApiDto"]},{"name":"data class SurgeryReportEntry(val surgicalProcessID: String, val patientId: String, val patientName: String?, val patientSurname: String?, val surgicalProcessDescription: String, val surgeryDate: String)","description":"application.presenter.api.model.SurgeryReportEntry","location":"surgery-report-microservice/application.presenter.api.model/-surgery-report-entry/index.html","searchKeys":["SurgeryReportEntry","data class SurgeryReportEntry(val surgicalProcessID: String, val patientId: String, val patientName: String?, val patientSurname: String?, val surgicalProcessDescription: String, val surgeryDate: String)","application.presenter.api.model.SurgeryReportEntry"]},{"name":"data class SurgeryReportPatchApiDto(val additionalData: String)","description":"application.presenter.api.model.SurgeryReportPatchApiDto","location":"surgery-report-microservice/application.presenter.api.model/-surgery-report-patch-api-dto/index.html","searchKeys":["SurgeryReportPatchApiDto","data class SurgeryReportPatchApiDto(val additionalData: String)","application.presenter.api.model.SurgeryReportPatchApiDto"]},{"name":"data class SurgicalProcess(val id: SurgicalProcessID, val description: String, val patientID: PatientID, val preOperatingRoom: RoomID, val operatingRoom: RoomID, val inChargeHealthProfessional: HealthProfessionalID? = null, val taxCode: TaxCode? = null, val processStates: List<Pair<Instant, SurgicalProcessState>> = listOf())","description":"entity.process.SurgicalProcess","location":"surgery-report-microservice/entity.process/-surgical-process/index.html","searchKeys":["SurgicalProcess","data class SurgicalProcess(val id: SurgicalProcessID, val description: String, val patientID: PatientID, val preOperatingRoom: RoomID, val operatingRoom: RoomID, val inChargeHealthProfessional: HealthProfessionalID? = null, val taxCode: TaxCode? = null, val processStates: List<Pair<Instant, SurgicalProcessState>> = listOf())","entity.process.SurgicalProcess"]},{"name":"data class SurgicalProcessID(val value: String)","description":"entity.process.SurgicalProcessID","location":"surgery-report-microservice/entity.process/-surgical-process-i-d/index.html","searchKeys":["SurgicalProcessID","data class SurgicalProcessID(val value: String)","entity.process.SurgicalProcessID"]},{"name":"data class SurgicalProcessStepAggregateDataApiDto(val startDateTime: String, val stopDateTime: String?, val patientVitalSignAggregateData: AggregateDataApiDto<PatientVitalSignsApiDto>, val environmentalAggregateData: Map<RoomApiDtoType, AggregateDataApiDto<RoomEnvironmentalDataApiDto>>)","description":"application.presenter.api.model.SurgicalProcessStepAggregateDataApiDto","location":"surgery-report-microservice/application.presenter.api.model/-surgical-process-step-aggregate-data-api-dto/index.html","searchKeys":["SurgicalProcessStepAggregateDataApiDto","data class SurgicalProcessStepAggregateDataApiDto(val startDateTime: String, val stopDateTime: String?, val patientVitalSignAggregateData: AggregateDataApiDto<PatientVitalSignsApiDto>, val environmentalAggregateData: Map<RoomApiDtoType, AggregateDataApiDto<RoomEnvironmentalDataApiDto>>)","application.presenter.api.model.SurgicalProcessStepAggregateDataApiDto"]},{"name":"data class SurgicalProcessSummaryEvent(val key: String, val data: SurgicalProcessSummaryPayload, val dateTime: String) : Event<SurgicalProcessSummaryPayload> ","description":"application.presenter.event.model.SurgicalProcessSummaryEvent","location":"surgery-report-microservice/application.presenter.event.model/-surgical-process-summary-event/index.html","searchKeys":["SurgicalProcessSummaryEvent","data class SurgicalProcessSummaryEvent(val key: String, val data: SurgicalProcessSummaryPayload, val dateTime: String) : Event<SurgicalProcessSummaryPayload> ","application.presenter.event.model.SurgicalProcessSummaryEvent"]},{"name":"data class SurgicalProcessSummaryPayload(val processId: String, val processType: String, val patientId: String, val patientTaxCode: String?, val healthProfessionalId: String?, val preOperatingRoomId: String, val operatingRoomId: String, val processStates: List<Pair<String, ProcessStateEventDto>>, val processSteps: List<Pair<String, ProcessStepEventDto>>, val patientMedicalData: List<Pair<String, PatientVitalSignsEventDto>>, val medicalDeviceUsage: List<ImplantableMedicalDeviceEventDto>, val medicalTechnologyUsage: List<Pair<String, MedicalTechnologyEventDto>>)","description":"application.presenter.event.model.SurgicalProcessSummaryPayload","location":"surgery-report-microservice/application.presenter.event.model/-surgical-process-summary-payload/index.html","searchKeys":["SurgicalProcessSummaryPayload","data class SurgicalProcessSummaryPayload(val processId: String, val processType: String, val patientId: String, val patientTaxCode: String?, val healthProfessionalId: String?, val preOperatingRoomId: String, val operatingRoomId: String, val processStates: List<Pair<String, ProcessStateEventDto>>, val processSteps: List<Pair<String, ProcessStepEventDto>>, val patientMedicalData: List<Pair<String, PatientVitalSignsEventDto>>, val medicalDeviceUsage: List<ImplantableMedicalDeviceEventDto>, val medicalTechnologyUsage: List<Pair<String, MedicalTechnologyEventDto>>)","application.presenter.event.model.SurgicalProcessSummaryPayload"]},{"name":"data class SystolicBloodPressure(val pressure: Int)","description":"entity.healthcareuser.VitalSign.SystolicBloodPressure","location":"surgery-report-microservice/entity.healthcareuser/-vital-sign/-systolic-blood-pressure/index.html","searchKeys":["SystolicBloodPressure","data class SystolicBloodPressure(val pressure: Int)","entity.healthcareuser.VitalSign.SystolicBloodPressure"]},{"name":"data class SystolicBloodPressureEventDto(val pressure: Int)","description":"application.presenter.event.model.SystolicBloodPressureEventDto","location":"surgery-report-microservice/application.presenter.event.model/-systolic-blood-pressure-event-dto/index.html","searchKeys":["SystolicBloodPressureEventDto","data class SystolicBloodPressureEventDto(val pressure: Int)","application.presenter.event.model.SystolicBloodPressureEventDto"]},{"name":"data class TaxCode(val value: String)","description":"entity.healthcareuser.TaxCode","location":"surgery-report-microservice/entity.healthcareuser/-tax-code/index.html","searchKeys":["TaxCode","data class TaxCode(val value: String)","entity.healthcareuser.TaxCode"]},{"name":"data class Temperature(val value: Double, val unit: TemperatureUnit = TemperatureUnit.CELSIUS)","description":"entity.measurements.Temperature","location":"surgery-report-microservice/entity.measurements/-temperature/index.html","searchKeys":["Temperature","data class Temperature(val value: Double, val unit: TemperatureUnit = TemperatureUnit.CELSIUS)","entity.measurements.Temperature"]},{"name":"data class TrackingInfo<out I>(val dateTime: Instant, val individual: I, val roomID: RoomID, val trackType: TrackType)","description":"entity.tracking.TrackingInfo","location":"surgery-report-microservice/entity.tracking/-tracking-info/index.html","searchKeys":["TrackingInfo","data class TrackingInfo<out I>(val dateTime: Instant, val individual: I, val roomID: RoomID, val trackType: TrackType)","entity.tracking.TrackingInfo"]},{"name":"data class TrackingInfoResultDto(val dateTime: String, val roomId: String, val healthProfessionalId: String, val trackingType: StaffTrackingDtoModel.TrackingTypeResultDto)","description":"application.presenter.external.model.StaffTrackingDtoModel.TrackingInfoResultDto","location":"surgery-report-microservice/application.presenter.external.model/-staff-tracking-dto-model/-tracking-info-result-dto/index.html","searchKeys":["TrackingInfoResultDto","data class TrackingInfoResultDto(val dateTime: String, val roomId: String, val healthProfessionalId: String, val trackingType: StaffTrackingDtoModel.TrackingTypeResultDto)","application.presenter.external.model.StaffTrackingDtoModel.TrackingInfoResultDto"]},{"name":"data class TrackingInformationApiDto(val dateTime: String, val healthProfessionalId: String, val roomID: String, val trackType: TrackApiDtoType)","description":"application.presenter.api.model.tracking.TrackingInformationApiDto","location":"surgery-report-microservice/application.presenter.api.model.tracking/-tracking-information-api-dto/index.html","searchKeys":["TrackingInformationApiDto","data class TrackingInformationApiDto(val dateTime: String, val healthProfessionalId: String, val roomID: String, val trackType: TrackApiDtoType)","application.presenter.api.model.tracking.TrackingInformationApiDto"]},{"name":"data class ValueWithExplicitUnit<out V : Number, out T>(val value: V, val unit: T)","description":"application.presenter.external.model.BuildingManagementDtoModel.ValueWithExplicitUnit","location":"surgery-report-microservice/application.presenter.external.model/-building-management-dto-model/-value-with-explicit-unit/index.html","searchKeys":["ValueWithExplicitUnit","data class ValueWithExplicitUnit<out V : Number, out T>(val value: V, val unit: T)","application.presenter.external.model.BuildingManagementDtoModel.ValueWithExplicitUnit"]},{"name":"data class ValueWithUnit<T>(val value: T, val unit: String)","description":"application.presenter.api.model.measurements.ValueWithUnit","location":"surgery-report-microservice/application.presenter.api.model.measurements/-value-with-unit/index.html","searchKeys":["ValueWithUnit","data class ValueWithUnit<T>(val value: T, val unit: String)","application.presenter.api.model.measurements.ValueWithUnit"]},{"name":"enum ImplantableMedicalDeviceApiDtoType : Enum<ImplantableMedicalDeviceApiDtoType> ","description":"application.presenter.api.model.medicaldevice.ImplantableMedicalDeviceApiDtoType","location":"surgery-report-microservice/application.presenter.api.model.medicaldevice/-implantable-medical-device-api-dto-type/index.html","searchKeys":["ImplantableMedicalDeviceApiDtoType","enum ImplantableMedicalDeviceApiDtoType : Enum<ImplantableMedicalDeviceApiDtoType> ","application.presenter.api.model.medicaldevice.ImplantableMedicalDeviceApiDtoType"]},{"name":"enum ImplantableMedicalDeviceType : Enum<ImplantableMedicalDeviceType> ","description":"entity.medicaldevice.ImplantableMedicalDeviceType","location":"surgery-report-microservice/entity.medicaldevice/-implantable-medical-device-type/index.html","searchKeys":["ImplantableMedicalDeviceType","enum ImplantableMedicalDeviceType : Enum<ImplantableMedicalDeviceType> ","entity.medicaldevice.ImplantableMedicalDeviceType"]},{"name":"enum ImplantableMedicalDeviceTypeEventDto : Enum<ImplantableMedicalDeviceTypeEventDto> ","description":"application.presenter.event.model.ImplantableMedicalDeviceTypeEventDto","location":"surgery-report-microservice/application.presenter.event.model/-implantable-medical-device-type-event-dto/index.html","searchKeys":["ImplantableMedicalDeviceTypeEventDto","enum ImplantableMedicalDeviceTypeEventDto : Enum<ImplantableMedicalDeviceTypeEventDto> ","application.presenter.event.model.ImplantableMedicalDeviceTypeEventDto"]},{"name":"enum LightUnit : Enum<LightUnit> ","description":"entity.measurements.LightUnit","location":"surgery-report-microservice/entity.measurements/-light-unit/index.html","searchKeys":["LightUnit","enum LightUnit : Enum<LightUnit> ","entity.measurements.LightUnit"]},{"name":"enum LuminosityUnitResultDto : Enum<BuildingManagementDtoModel.LuminosityUnitResultDto> ","description":"application.presenter.external.model.BuildingManagementDtoModel.LuminosityUnitResultDto","location":"surgery-report-microservice/application.presenter.external.model/-building-management-dto-model/-luminosity-unit-result-dto/index.html","searchKeys":["LuminosityUnitResultDto","enum LuminosityUnitResultDto : Enum<BuildingManagementDtoModel.LuminosityUnitResultDto> ","application.presenter.external.model.BuildingManagementDtoModel.LuminosityUnitResultDto"]},{"name":"enum MedicalTechnologyApiDtoType : Enum<MedicalTechnologyApiDtoType> ","description":"application.presenter.api.model.medicaldevice.MedicalTechnologyApiDtoType","location":"surgery-report-microservice/application.presenter.api.model.medicaldevice/-medical-technology-api-dto-type/index.html","searchKeys":["MedicalTechnologyApiDtoType","enum MedicalTechnologyApiDtoType : Enum<MedicalTechnologyApiDtoType> ","application.presenter.api.model.medicaldevice.MedicalTechnologyApiDtoType"]},{"name":"enum MedicalTechnologyType : Enum<MedicalTechnologyType> ","description":"entity.medicaldevice.MedicalTechnologyType","location":"surgery-report-microservice/entity.medicaldevice/-medical-technology-type/index.html","searchKeys":["MedicalTechnologyType","enum MedicalTechnologyType : Enum<MedicalTechnologyType> ","entity.medicaldevice.MedicalTechnologyType"]},{"name":"enum MedicalTechnologyTypeEventDto : Enum<MedicalTechnologyTypeEventDto> ","description":"application.presenter.event.model.MedicalTechnologyTypeEventDto","location":"surgery-report-microservice/application.presenter.event.model/-medical-technology-type-event-dto/index.html","searchKeys":["MedicalTechnologyTypeEventDto","enum MedicalTechnologyTypeEventDto : Enum<MedicalTechnologyTypeEventDto> ","application.presenter.event.model.MedicalTechnologyTypeEventDto"]},{"name":"enum ProcessStateEventDto : Enum<ProcessStateEventDto> ","description":"application.presenter.event.model.ProcessStateEventDto","location":"surgery-report-microservice/application.presenter.event.model/-process-state-event-dto/index.html","searchKeys":["ProcessStateEventDto","enum ProcessStateEventDto : Enum<ProcessStateEventDto> ","application.presenter.event.model.ProcessStateEventDto"]},{"name":"enum ProcessStepEventDto : Enum<ProcessStepEventDto> ","description":"application.presenter.event.model.ProcessStepEventDto","location":"surgery-report-microservice/application.presenter.event.model/-process-step-event-dto/index.html","searchKeys":["ProcessStepEventDto","enum ProcessStepEventDto : Enum<ProcessStepEventDto> ","application.presenter.event.model.ProcessStepEventDto"]},{"name":"enum RoomApiDtoType : Enum<RoomApiDtoType> ","description":"application.presenter.api.model.room.RoomApiDtoType","location":"surgery-report-microservice/application.presenter.api.model.room/-room-api-dto-type/index.html","searchKeys":["RoomApiDtoType","enum RoomApiDtoType : Enum<RoomApiDtoType> ","application.presenter.api.model.room.RoomApiDtoType"]},{"name":"enum RoomType : Enum<RoomType> ","description":"entity.room.RoomType","location":"surgery-report-microservice/entity.room/-room-type/index.html","searchKeys":["RoomType","enum RoomType : Enum<RoomType> ","entity.room.RoomType"]},{"name":"enum SurgicalProcessStep : Enum<SurgicalProcessStep> ","description":"entity.process.SurgicalProcessStep","location":"surgery-report-microservice/entity.process/-surgical-process-step/index.html","searchKeys":["SurgicalProcessStep","enum SurgicalProcessStep : Enum<SurgicalProcessStep> ","entity.process.SurgicalProcessStep"]},{"name":"enum SurgicalProcessStepApiDto : Enum<SurgicalProcessStepApiDto> ","description":"application.presenter.api.model.process.SurgicalProcessStepApiDto","location":"surgery-report-microservice/application.presenter.api.model.process/-surgical-process-step-api-dto/index.html","searchKeys":["SurgicalProcessStepApiDto","enum SurgicalProcessStepApiDto : Enum<SurgicalProcessStepApiDto> ","application.presenter.api.model.process.SurgicalProcessStepApiDto"]},{"name":"enum TemperatureUnit : Enum<TemperatureUnit> ","description":"entity.measurements.TemperatureUnit","location":"surgery-report-microservice/entity.measurements/-temperature-unit/index.html","searchKeys":["TemperatureUnit","enum TemperatureUnit : Enum<TemperatureUnit> ","entity.measurements.TemperatureUnit"]},{"name":"enum TemperatureUnitEventDto : Enum<TemperatureUnitEventDto> ","description":"application.presenter.event.model.TemperatureUnitEventDto","location":"surgery-report-microservice/application.presenter.event.model/-temperature-unit-event-dto/index.html","searchKeys":["TemperatureUnitEventDto","enum TemperatureUnitEventDto : Enum<TemperatureUnitEventDto> ","application.presenter.event.model.TemperatureUnitEventDto"]},{"name":"enum TemperatureUnitResultDto : Enum<BuildingManagementDtoModel.TemperatureUnitResultDto> ","description":"application.presenter.external.model.BuildingManagementDtoModel.TemperatureUnitResultDto","location":"surgery-report-microservice/application.presenter.external.model/-building-management-dto-model/-temperature-unit-result-dto/index.html","searchKeys":["TemperatureUnitResultDto","enum TemperatureUnitResultDto : Enum<BuildingManagementDtoModel.TemperatureUnitResultDto> ","application.presenter.external.model.BuildingManagementDtoModel.TemperatureUnitResultDto"]},{"name":"enum TrackApiDtoType : Enum<TrackApiDtoType> ","description":"application.presenter.api.model.tracking.TrackApiDtoType","location":"surgery-report-microservice/application.presenter.api.model.tracking/-track-api-dto-type/index.html","searchKeys":["TrackApiDtoType","enum TrackApiDtoType : Enum<TrackApiDtoType> ","application.presenter.api.model.tracking.TrackApiDtoType"]},{"name":"enum TrackType : Enum<TrackType> ","description":"entity.tracking.TrackType","location":"surgery-report-microservice/entity.tracking/-track-type/index.html","searchKeys":["TrackType","enum TrackType : Enum<TrackType> ","entity.tracking.TrackType"]},{"name":"enum TrackingTypeResultDto : Enum<StaffTrackingDtoModel.TrackingTypeResultDto> ","description":"application.presenter.external.model.StaffTrackingDtoModel.TrackingTypeResultDto","location":"surgery-report-microservice/application.presenter.external.model/-staff-tracking-dto-model/-tracking-type-result-dto/index.html","searchKeys":["TrackingTypeResultDto","enum TrackingTypeResultDto : Enum<StaffTrackingDtoModel.TrackingTypeResultDto> ","application.presenter.external.model.StaffTrackingDtoModel.TrackingTypeResultDto"]},{"name":"fun <X> Collection<Pair<Instant, X>>.takePeriod(from: Instant, to: Instant? = null): List<Pair<Instant, X>>","description":"usecase.aggregation.util.CollectionExtensions.takePeriod","location":"surgery-report-microservice/usecase.aggregation.util/-collection-extensions/take-period.html","searchKeys":["takePeriod","fun <X> Collection<Pair<Instant, X>>.takePeriod(from: Instant, to: Instant? = null): List<Pair<Instant, X>>","usecase.aggregation.util.CollectionExtensions.takePeriod"]},{"name":"fun Application.surgeryReportAPI(apiPath: String, port: Int, surgeryReportRepository: SurgeryReportRepository)","description":"infrastructure.api.surgeryReportAPI","location":"surgery-report-microservice/infrastructure.api/surgery-report-a-p-i.html","searchKeys":["surgeryReportAPI","fun Application.surgeryReportAPI(apiPath: String, port: Int, surgeryReportRepository: SurgeryReportRepository)","infrastructure.api.surgeryReportAPI"]},{"name":"fun BuildingManagementDtoModel.EnvironmentalDataApiDto.toRoomEnvironmentalData(): RoomEnvironmentalData","description":"application.presenter.external.serialization.ExternalServiceSerialization.toRoomEnvironmentalData","location":"surgery-report-microservice/application.presenter.external.serialization/-external-service-serialization/to-room-environmental-data.html","searchKeys":["toRoomEnvironmentalData","fun BuildingManagementDtoModel.EnvironmentalDataApiDto.toRoomEnvironmentalData(): RoomEnvironmentalData","application.presenter.external.serialization.ExternalServiceSerialization.toRoomEnvironmentalData"]},{"name":"fun Collection<Double>.std(): Double","description":"usecase.aggregation.util.CollectionExtensions.std","location":"surgery-report-microservice/usecase.aggregation.util/-collection-extensions/std.html","searchKeys":["std","fun Collection<Double>.std(): Double","usecase.aggregation.util.CollectionExtensions.std"]},{"name":"fun HealthcareUser.toApiDto(): HealthcareUserApiDto","description":"application.presenter.api.serialization.HealthcareUserSerializer.toApiDto","location":"surgery-report-microservice/application.presenter.api.serialization/-healthcare-user-serializer/to-api-dto.html","searchKeys":["toApiDto","fun HealthcareUser.toApiDto(): HealthcareUserApiDto","application.presenter.api.serialization.HealthcareUserSerializer.toApiDto"]},{"name":"fun ImplantableMedicalDevice.toApiDto(): ImplantableMedicalDeviceApiDto","description":"application.presenter.api.serialization.MedicalDeviceSerializer.toApiDto","location":"surgery-report-microservice/application.presenter.api.serialization/-medical-device-serializer/to-api-dto.html","searchKeys":["toApiDto","fun ImplantableMedicalDevice.toApiDto(): ImplantableMedicalDeviceApiDto","application.presenter.api.serialization.MedicalDeviceSerializer.toApiDto"]},{"name":"fun MedicalTechnology.toApiDto(): MedicalTechnologyApiDto","description":"application.presenter.api.serialization.MedicalDeviceSerializer.toApiDto","location":"surgery-report-microservice/application.presenter.api.serialization/-medical-device-serializer/to-api-dto.html","searchKeys":["toApiDto","fun MedicalTechnology.toApiDto(): MedicalTechnologyApiDto","application.presenter.api.serialization.MedicalDeviceSerializer.toApiDto"]},{"name":"fun PatientManagementIntegrationDtoModel.HealthcareUserResultDto.toHealthcareUser(): HealthcareUser","description":"application.presenter.external.serialization.ExternalServiceSerialization.toHealthcareUser","location":"surgery-report-microservice/application.presenter.external.serialization/-external-service-serialization/to-healthcare-user.html","searchKeys":["toHealthcareUser","fun PatientManagementIntegrationDtoModel.HealthcareUserResultDto.toHealthcareUser(): HealthcareUser","application.presenter.external.serialization.ExternalServiceSerialization.toHealthcareUser"]},{"name":"fun PatientVitalSigns.toApiDto(): PatientVitalSignsApiDto","description":"application.presenter.api.serialization.HealthcareUserSerializer.toApiDto","location":"surgery-report-microservice/application.presenter.api.serialization/-healthcare-user-serializer/to-api-dto.html","searchKeys":["toApiDto","fun PatientVitalSigns.toApiDto(): PatientVitalSignsApiDto","application.presenter.api.serialization.HealthcareUserSerializer.toApiDto"]},{"name":"fun Room.toApiDto(): RoomApiDto","description":"application.presenter.api.serialization.RoomSerializer.toApiDto","location":"surgery-report-microservice/application.presenter.api.serialization/-room-serializer/to-api-dto.html","searchKeys":["toApiDto","fun Room.toApiDto(): RoomApiDto","application.presenter.api.serialization.RoomSerializer.toApiDto"]},{"name":"fun RoomEnvironmentalData.toApiDto(): RoomEnvironmentalDataApiDto","description":"application.presenter.api.serialization.RoomSerializer.toApiDto","location":"surgery-report-microservice/application.presenter.api.serialization/-room-serializer/to-api-dto.html","searchKeys":["toApiDto","fun RoomEnvironmentalData.toApiDto(): RoomEnvironmentalDataApiDto","application.presenter.api.serialization.RoomSerializer.toApiDto"]},{"name":"fun RoomType.toApiDtoType(): RoomApiDtoType","description":"application.presenter.api.serialization.RoomSerializer.toApiDtoType","location":"surgery-report-microservice/application.presenter.api.serialization/-room-serializer/to-api-dto-type.html","searchKeys":["toApiDtoType","fun RoomType.toApiDtoType(): RoomApiDtoType","application.presenter.api.serialization.RoomSerializer.toApiDtoType"]},{"name":"fun StaffTrackingDtoModel.TrackingInfoResultDto.toHealthProfessionalTrackingInfo(): TrackingInfo<HealthProfessionalID>","description":"application.presenter.external.serialization.ExternalServiceSerialization.toHealthProfessionalTrackingInfo","location":"surgery-report-microservice/application.presenter.external.serialization/-external-service-serialization/to-health-professional-tracking-info.html","searchKeys":["toHealthProfessionalTrackingInfo","fun StaffTrackingDtoModel.TrackingInfoResultDto.toHealthProfessionalTrackingInfo(): TrackingInfo<HealthProfessionalID>","application.presenter.external.serialization.ExternalServiceSerialization.toHealthProfessionalTrackingInfo"]},{"name":"fun String.toEvent(eventKey: String): Event<*>","description":"application.presenter.event.serialization.EventSerialization.toEvent","location":"surgery-report-microservice/application.presenter.event.serialization/-event-serialization/to-event.html","searchKeys":["toEvent","fun String.toEvent(eventKey: String): Event<*>","application.presenter.event.serialization.EventSerialization.toEvent"]},{"name":"fun SurgeryReport.toApiDto(): SurgeryReportApiDto","description":"application.presenter.api.serialization.SurgeryReportSerializer.toApiDto","location":"surgery-report-microservice/application.presenter.api.serialization/-surgery-report-serializer/to-api-dto.html","searchKeys":["toApiDto","fun SurgeryReport.toApiDto(): SurgeryReportApiDto","application.presenter.api.serialization.SurgeryReportSerializer.toApiDto"]},{"name":"fun SurgeryReport.toSurgeryReportEntry(): SurgeryReportEntry","description":"application.presenter.api.serialization.SurgeryReportSerializer.toSurgeryReportEntry","location":"surgery-report-microservice/application.presenter.api.serialization/-surgery-report-serializer/to-surgery-report-entry.html","searchKeys":["toSurgeryReportEntry","fun SurgeryReport.toSurgeryReportEntry(): SurgeryReportEntry","application.presenter.api.serialization.SurgeryReportSerializer.toSurgeryReportEntry"]},{"name":"fun SurgicalProcessStep.toApiDto(): SurgicalProcessStepApiDto","description":"application.presenter.api.serialization.SurgicalProcessSerializer.toApiDto","location":"surgery-report-microservice/application.presenter.api.serialization/-surgical-process-serializer/to-api-dto.html","searchKeys":["toApiDto","fun SurgicalProcessStep.toApiDto(): SurgicalProcessStepApiDto","application.presenter.api.serialization.SurgicalProcessSerializer.toApiDto"]},{"name":"fun SurgicalProcessSummaryPayload.extractImplantableMedicalDeviceUsage(): Set<ImplantableMedicalDevice>","description":"application.presenter.event.serialization.EventSerialization.extractImplantableMedicalDeviceUsage","location":"surgery-report-microservice/application.presenter.event.serialization/-event-serialization/extract-implantable-medical-device-usage.html","searchKeys":["extractImplantableMedicalDeviceUsage","fun SurgicalProcessSummaryPayload.extractImplantableMedicalDeviceUsage(): Set<ImplantableMedicalDevice>","application.presenter.event.serialization.EventSerialization.extractImplantableMedicalDeviceUsage"]},{"name":"fun SurgicalProcessSummaryPayload.extractMedicalTechnologyUsage(): Set<MedicalTechnologyUsage>","description":"application.presenter.event.serialization.EventSerialization.extractMedicalTechnologyUsage","location":"surgery-report-microservice/application.presenter.event.serialization/-event-serialization/extract-medical-technology-usage.html","searchKeys":["extractMedicalTechnologyUsage","fun SurgicalProcessSummaryPayload.extractMedicalTechnologyUsage(): Set<MedicalTechnologyUsage>","application.presenter.event.serialization.EventSerialization.extractMedicalTechnologyUsage"]},{"name":"fun SurgicalProcessSummaryPayload.extractPatientVitalSigns(): List<Pair<Instant, PatientVitalSigns>>","description":"application.presenter.event.serialization.EventSerialization.extractPatientVitalSigns","location":"surgery-report-microservice/application.presenter.event.serialization/-event-serialization/extract-patient-vital-signs.html","searchKeys":["extractPatientVitalSigns","fun SurgicalProcessSummaryPayload.extractPatientVitalSigns(): List<Pair<Instant, PatientVitalSigns>>","application.presenter.event.serialization.EventSerialization.extractPatientVitalSigns"]},{"name":"fun SurgicalProcessSummaryPayload.extractSurgicalProcess(): SurgicalProcess","description":"application.presenter.event.serialization.EventSerialization.extractSurgicalProcess","location":"surgery-report-microservice/application.presenter.event.serialization/-event-serialization/extract-surgical-process.html","searchKeys":["extractSurgicalProcess","fun SurgicalProcessSummaryPayload.extractSurgicalProcess(): SurgicalProcess","application.presenter.event.serialization.EventSerialization.extractSurgicalProcess"]},{"name":"fun TrackingInfo<HealthProfessionalID>.toApiDto(): TrackingInformationApiDto","description":"application.presenter.api.serialization.TrackingInformationSerializer.toApiDto","location":"surgery-report-microservice/application.presenter.api.serialization/-tracking-information-serializer/to-api-dto.html","searchKeys":["toApiDto","fun TrackingInfo<HealthProfessionalID>.toApiDto(): TrackingInformationApiDto","application.presenter.api.serialization.TrackingInformationSerializer.toApiDto"]},{"name":"fun interface AggregateDataExtractor<out T>","description":"usecase.aggregation.AggregateDataExtractor","location":"surgery-report-microservice/usecase.aggregation/-aggregate-data-extractor/index.html","searchKeys":["AggregateDataExtractor","fun interface AggregateDataExtractor<out T>","usecase.aggregation.AggregateDataExtractor"]},{"name":"fun interface ApplicationService<out T>","description":"application.service.ApplicationService","location":"surgery-report-microservice/application.service/-application-service/index.html","searchKeys":["ApplicationService","fun interface ApplicationService<out T>","application.service.ApplicationService"]},{"name":"fun interface HealthProfessionalRepository","description":"usecase.repository.HealthProfessionalRepository","location":"surgery-report-microservice/usecase.repository/-health-professional-repository/index.html","searchKeys":["HealthProfessionalRepository","fun interface HealthProfessionalRepository","usecase.repository.HealthProfessionalRepository"]},{"name":"fun interface HealthcareUserRepository","description":"usecase.repository.HealthcareUserRepository","location":"surgery-report-microservice/usecase.repository/-healthcare-user-repository/index.html","searchKeys":["HealthcareUserRepository","fun interface HealthcareUserRepository","usecase.repository.HealthcareUserRepository"]},{"name":"fun interface RoomRepository","description":"usecase.repository.RoomRepository","location":"surgery-report-microservice/usecase.repository/-room-repository/index.html","searchKeys":["RoomRepository","fun interface RoomRepository","usecase.repository.RoomRepository"]},{"name":"fun interface UseCase<out X>","description":"usecase.UseCase","location":"surgery-report-microservice/usecase/-use-case/index.html","searchKeys":["UseCase","fun interface UseCase<out X>","usecase.UseCase"]},{"name":"fun loadConsumerProperties(boostrapServerUrl: String, schemaRegistryUrl: String): Map<String, String>","description":"infrastructure.events.loadConsumerProperties","location":"surgery-report-microservice/infrastructure.events/load-consumer-properties.html","searchKeys":["loadConsumerProperties","fun loadConsumerProperties(boostrapServerUrl: String, schemaRegistryUrl: String): Map<String, String>","infrastructure.events.loadConsumerProperties"]},{"name":"fun main()","description":"main","location":"surgery-report-microservice/[root]/main.html","searchKeys":["main","fun main()","main"]},{"name":"fun start()","description":"infrastructure.api.APIController.start","location":"surgery-report-microservice/infrastructure.api/-a-p-i-controller/start.html","searchKeys":["start","fun start()","infrastructure.api.APIController.start"]},{"name":"fun start()","description":"infrastructure.events.KafkaClient.start","location":"surgery-report-microservice/infrastructure.events/-kafka-client/start.html","searchKeys":["start","fun start()","infrastructure.events.KafkaClient.start"]},{"name":"fun valueOf(value: String): BuildingManagementDtoModel.LuminosityUnitResultDto","description":"application.presenter.external.model.BuildingManagementDtoModel.LuminosityUnitResultDto.valueOf","location":"surgery-report-microservice/application.presenter.external.model/-building-management-dto-model/-luminosity-unit-result-dto/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): BuildingManagementDtoModel.LuminosityUnitResultDto","application.presenter.external.model.BuildingManagementDtoModel.LuminosityUnitResultDto.valueOf"]},{"name":"fun valueOf(value: String): BuildingManagementDtoModel.TemperatureUnitResultDto","description":"application.presenter.external.model.BuildingManagementDtoModel.TemperatureUnitResultDto.valueOf","location":"surgery-report-microservice/application.presenter.external.model/-building-management-dto-model/-temperature-unit-result-dto/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): BuildingManagementDtoModel.TemperatureUnitResultDto","application.presenter.external.model.BuildingManagementDtoModel.TemperatureUnitResultDto.valueOf"]},{"name":"fun valueOf(value: String): ImplantableMedicalDeviceApiDtoType","description":"application.presenter.api.model.medicaldevice.ImplantableMedicalDeviceApiDtoType.valueOf","location":"surgery-report-microservice/application.presenter.api.model.medicaldevice/-implantable-medical-device-api-dto-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ImplantableMedicalDeviceApiDtoType","application.presenter.api.model.medicaldevice.ImplantableMedicalDeviceApiDtoType.valueOf"]},{"name":"fun valueOf(value: String): ImplantableMedicalDeviceType","description":"entity.medicaldevice.ImplantableMedicalDeviceType.valueOf","location":"surgery-report-microservice/entity.medicaldevice/-implantable-medical-device-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ImplantableMedicalDeviceType","entity.medicaldevice.ImplantableMedicalDeviceType.valueOf"]},{"name":"fun valueOf(value: String): ImplantableMedicalDeviceTypeEventDto","description":"application.presenter.event.model.ImplantableMedicalDeviceTypeEventDto.valueOf","location":"surgery-report-microservice/application.presenter.event.model/-implantable-medical-device-type-event-dto/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ImplantableMedicalDeviceTypeEventDto","application.presenter.event.model.ImplantableMedicalDeviceTypeEventDto.valueOf"]},{"name":"fun valueOf(value: String): LightUnit","description":"entity.measurements.LightUnit.valueOf","location":"surgery-report-microservice/entity.measurements/-light-unit/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): LightUnit","entity.measurements.LightUnit.valueOf"]},{"name":"fun valueOf(value: String): MedicalTechnologyApiDtoType","description":"application.presenter.api.model.medicaldevice.MedicalTechnologyApiDtoType.valueOf","location":"surgery-report-microservice/application.presenter.api.model.medicaldevice/-medical-technology-api-dto-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): MedicalTechnologyApiDtoType","application.presenter.api.model.medicaldevice.MedicalTechnologyApiDtoType.valueOf"]},{"name":"fun valueOf(value: String): MedicalTechnologyType","description":"entity.medicaldevice.MedicalTechnologyType.valueOf","location":"surgery-report-microservice/entity.medicaldevice/-medical-technology-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): MedicalTechnologyType","entity.medicaldevice.MedicalTechnologyType.valueOf"]},{"name":"fun valueOf(value: String): MedicalTechnologyTypeEventDto","description":"application.presenter.event.model.MedicalTechnologyTypeEventDto.valueOf","location":"surgery-report-microservice/application.presenter.event.model/-medical-technology-type-event-dto/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): MedicalTechnologyTypeEventDto","application.presenter.event.model.MedicalTechnologyTypeEventDto.valueOf"]},{"name":"fun valueOf(value: String): ProcessStateEventDto","description":"application.presenter.event.model.ProcessStateEventDto.valueOf","location":"surgery-report-microservice/application.presenter.event.model/-process-state-event-dto/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ProcessStateEventDto","application.presenter.event.model.ProcessStateEventDto.valueOf"]},{"name":"fun valueOf(value: String): ProcessStepEventDto","description":"application.presenter.event.model.ProcessStepEventDto.valueOf","location":"surgery-report-microservice/application.presenter.event.model/-process-step-event-dto/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ProcessStepEventDto","application.presenter.event.model.ProcessStepEventDto.valueOf"]},{"name":"fun valueOf(value: String): RoomApiDtoType","description":"application.presenter.api.model.room.RoomApiDtoType.valueOf","location":"surgery-report-microservice/application.presenter.api.model.room/-room-api-dto-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RoomApiDtoType","application.presenter.api.model.room.RoomApiDtoType.valueOf"]},{"name":"fun valueOf(value: String): RoomType","description":"entity.room.RoomType.valueOf","location":"surgery-report-microservice/entity.room/-room-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RoomType","entity.room.RoomType.valueOf"]},{"name":"fun valueOf(value: String): StaffTrackingDtoModel.TrackingTypeResultDto","description":"application.presenter.external.model.StaffTrackingDtoModel.TrackingTypeResultDto.valueOf","location":"surgery-report-microservice/application.presenter.external.model/-staff-tracking-dto-model/-tracking-type-result-dto/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): StaffTrackingDtoModel.TrackingTypeResultDto","application.presenter.external.model.StaffTrackingDtoModel.TrackingTypeResultDto.valueOf"]},{"name":"fun valueOf(value: String): SurgicalProcessStep","description":"entity.process.SurgicalProcessStep.valueOf","location":"surgery-report-microservice/entity.process/-surgical-process-step/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): SurgicalProcessStep","entity.process.SurgicalProcessStep.valueOf"]},{"name":"fun valueOf(value: String): SurgicalProcessStepApiDto","description":"application.presenter.api.model.process.SurgicalProcessStepApiDto.valueOf","location":"surgery-report-microservice/application.presenter.api.model.process/-surgical-process-step-api-dto/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): SurgicalProcessStepApiDto","application.presenter.api.model.process.SurgicalProcessStepApiDto.valueOf"]},{"name":"fun valueOf(value: String): TemperatureUnit","description":"entity.measurements.TemperatureUnit.valueOf","location":"surgery-report-microservice/entity.measurements/-temperature-unit/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): TemperatureUnit","entity.measurements.TemperatureUnit.valueOf"]},{"name":"fun valueOf(value: String): TemperatureUnitEventDto","description":"application.presenter.event.model.TemperatureUnitEventDto.valueOf","location":"surgery-report-microservice/application.presenter.event.model/-temperature-unit-event-dto/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): TemperatureUnitEventDto","application.presenter.event.model.TemperatureUnitEventDto.valueOf"]},{"name":"fun valueOf(value: String): TrackApiDtoType","description":"application.presenter.api.model.tracking.TrackApiDtoType.valueOf","location":"surgery-report-microservice/application.presenter.api.model.tracking/-track-api-dto-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): TrackApiDtoType","application.presenter.api.model.tracking.TrackApiDtoType.valueOf"]},{"name":"fun valueOf(value: String): TrackType","description":"entity.tracking.TrackType.valueOf","location":"surgery-report-microservice/entity.tracking/-track-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): TrackType","entity.tracking.TrackType.valueOf"]},{"name":"fun values(): Array<BuildingManagementDtoModel.LuminosityUnitResultDto>","description":"application.presenter.external.model.BuildingManagementDtoModel.LuminosityUnitResultDto.values","location":"surgery-report-microservice/application.presenter.external.model/-building-management-dto-model/-luminosity-unit-result-dto/values.html","searchKeys":["values","fun values(): Array<BuildingManagementDtoModel.LuminosityUnitResultDto>","application.presenter.external.model.BuildingManagementDtoModel.LuminosityUnitResultDto.values"]},{"name":"fun values(): Array<BuildingManagementDtoModel.TemperatureUnitResultDto>","description":"application.presenter.external.model.BuildingManagementDtoModel.TemperatureUnitResultDto.values","location":"surgery-report-microservice/application.presenter.external.model/-building-management-dto-model/-temperature-unit-result-dto/values.html","searchKeys":["values","fun values(): Array<BuildingManagementDtoModel.TemperatureUnitResultDto>","application.presenter.external.model.BuildingManagementDtoModel.TemperatureUnitResultDto.values"]},{"name":"fun values(): Array<ImplantableMedicalDeviceApiDtoType>","description":"application.presenter.api.model.medicaldevice.ImplantableMedicalDeviceApiDtoType.values","location":"surgery-report-microservice/application.presenter.api.model.medicaldevice/-implantable-medical-device-api-dto-type/values.html","searchKeys":["values","fun values(): Array<ImplantableMedicalDeviceApiDtoType>","application.presenter.api.model.medicaldevice.ImplantableMedicalDeviceApiDtoType.values"]},{"name":"fun values(): Array<ImplantableMedicalDeviceType>","description":"entity.medicaldevice.ImplantableMedicalDeviceType.values","location":"surgery-report-microservice/entity.medicaldevice/-implantable-medical-device-type/values.html","searchKeys":["values","fun values(): Array<ImplantableMedicalDeviceType>","entity.medicaldevice.ImplantableMedicalDeviceType.values"]},{"name":"fun values(): Array<ImplantableMedicalDeviceTypeEventDto>","description":"application.presenter.event.model.ImplantableMedicalDeviceTypeEventDto.values","location":"surgery-report-microservice/application.presenter.event.model/-implantable-medical-device-type-event-dto/values.html","searchKeys":["values","fun values(): Array<ImplantableMedicalDeviceTypeEventDto>","application.presenter.event.model.ImplantableMedicalDeviceTypeEventDto.values"]},{"name":"fun values(): Array<LightUnit>","description":"entity.measurements.LightUnit.values","location":"surgery-report-microservice/entity.measurements/-light-unit/values.html","searchKeys":["values","fun values(): Array<LightUnit>","entity.measurements.LightUnit.values"]},{"name":"fun values(): Array<MedicalTechnologyApiDtoType>","description":"application.presenter.api.model.medicaldevice.MedicalTechnologyApiDtoType.values","location":"surgery-report-microservice/application.presenter.api.model.medicaldevice/-medical-technology-api-dto-type/values.html","searchKeys":["values","fun values(): Array<MedicalTechnologyApiDtoType>","application.presenter.api.model.medicaldevice.MedicalTechnologyApiDtoType.values"]},{"name":"fun values(): Array<MedicalTechnologyType>","description":"entity.medicaldevice.MedicalTechnologyType.values","location":"surgery-report-microservice/entity.medicaldevice/-medical-technology-type/values.html","searchKeys":["values","fun values(): Array<MedicalTechnologyType>","entity.medicaldevice.MedicalTechnologyType.values"]},{"name":"fun values(): Array<MedicalTechnologyTypeEventDto>","description":"application.presenter.event.model.MedicalTechnologyTypeEventDto.values","location":"surgery-report-microservice/application.presenter.event.model/-medical-technology-type-event-dto/values.html","searchKeys":["values","fun values(): Array<MedicalTechnologyTypeEventDto>","application.presenter.event.model.MedicalTechnologyTypeEventDto.values"]},{"name":"fun values(): Array<ProcessStateEventDto>","description":"application.presenter.event.model.ProcessStateEventDto.values","location":"surgery-report-microservice/application.presenter.event.model/-process-state-event-dto/values.html","searchKeys":["values","fun values(): Array<ProcessStateEventDto>","application.presenter.event.model.ProcessStateEventDto.values"]},{"name":"fun values(): Array<ProcessStepEventDto>","description":"application.presenter.event.model.ProcessStepEventDto.values","location":"surgery-report-microservice/application.presenter.event.model/-process-step-event-dto/values.html","searchKeys":["values","fun values(): Array<ProcessStepEventDto>","application.presenter.event.model.ProcessStepEventDto.values"]},{"name":"fun values(): Array<RoomApiDtoType>","description":"application.presenter.api.model.room.RoomApiDtoType.values","location":"surgery-report-microservice/application.presenter.api.model.room/-room-api-dto-type/values.html","searchKeys":["values","fun values(): Array<RoomApiDtoType>","application.presenter.api.model.room.RoomApiDtoType.values"]},{"name":"fun values(): Array<RoomType>","description":"entity.room.RoomType.values","location":"surgery-report-microservice/entity.room/-room-type/values.html","searchKeys":["values","fun values(): Array<RoomType>","entity.room.RoomType.values"]},{"name":"fun values(): Array<StaffTrackingDtoModel.TrackingTypeResultDto>","description":"application.presenter.external.model.StaffTrackingDtoModel.TrackingTypeResultDto.values","location":"surgery-report-microservice/application.presenter.external.model/-staff-tracking-dto-model/-tracking-type-result-dto/values.html","searchKeys":["values","fun values(): Array<StaffTrackingDtoModel.TrackingTypeResultDto>","application.presenter.external.model.StaffTrackingDtoModel.TrackingTypeResultDto.values"]},{"name":"fun values(): Array<SurgicalProcessStep>","description":"entity.process.SurgicalProcessStep.values","location":"surgery-report-microservice/entity.process/-surgical-process-step/values.html","searchKeys":["values","fun values(): Array<SurgicalProcessStep>","entity.process.SurgicalProcessStep.values"]},{"name":"fun values(): Array<SurgicalProcessStepApiDto>","description":"application.presenter.api.model.process.SurgicalProcessStepApiDto.values","location":"surgery-report-microservice/application.presenter.api.model.process/-surgical-process-step-api-dto/values.html","searchKeys":["values","fun values(): Array<SurgicalProcessStepApiDto>","application.presenter.api.model.process.SurgicalProcessStepApiDto.values"]},{"name":"fun values(): Array<TemperatureUnit>","description":"entity.measurements.TemperatureUnit.values","location":"surgery-report-microservice/entity.measurements/-temperature-unit/values.html","searchKeys":["values","fun values(): Array<TemperatureUnit>","entity.measurements.TemperatureUnit.values"]},{"name":"fun values(): Array<TemperatureUnitEventDto>","description":"application.presenter.event.model.TemperatureUnitEventDto.values","location":"surgery-report-microservice/application.presenter.event.model/-temperature-unit-event-dto/values.html","searchKeys":["values","fun values(): Array<TemperatureUnitEventDto>","application.presenter.event.model.TemperatureUnitEventDto.values"]},{"name":"fun values(): Array<TrackApiDtoType>","description":"application.presenter.api.model.tracking.TrackApiDtoType.values","location":"surgery-report-microservice/application.presenter.api.model.tracking/-track-api-dto-type/values.html","searchKeys":["values","fun values(): Array<TrackApiDtoType>","application.presenter.api.model.tracking.TrackApiDtoType.values"]},{"name":"fun values(): Array<TrackType>","description":"entity.tracking.TrackType.values","location":"surgery-report-microservice/entity.tracking/-track-type/values.html","searchKeys":["values","fun values(): Array<TrackType>","entity.tracking.TrackType.values"]},{"name":"interface Event<out E>","description":"application.presenter.event.model.Event","location":"surgery-report-microservice/application.presenter.event.model/-event/index.html","searchKeys":["Event","interface Event<out E>","application.presenter.event.model.Event"]},{"name":"interface EventHandler","description":"application.handler.EventHandler","location":"surgery-report-microservice/application.handler/-event-handler/index.html","searchKeys":["EventHandler","interface EventHandler","application.handler.EventHandler"]},{"name":"interface SurgeryReportRepository","description":"usecase.repository.SurgeryReportRepository","location":"surgery-report-microservice/usecase.repository/-surgery-report-repository/index.html","searchKeys":["SurgeryReportRepository","interface SurgeryReportRepository","usecase.repository.SurgeryReportRepository"]},{"name":"object ApiResponses","description":"application.presenter.api.model.apiresponse.ApiResponses","location":"surgery-report-microservice/application.presenter.api.model.apiresponse/-api-responses/index.html","searchKeys":["ApiResponses","object ApiResponses","application.presenter.api.model.apiresponse.ApiResponses"]},{"name":"object BuildingManagementDtoModel","description":"application.presenter.external.model.BuildingManagementDtoModel","location":"surgery-report-microservice/application.presenter.external.model/-building-management-dto-model/index.html","searchKeys":["BuildingManagementDtoModel","object BuildingManagementDtoModel","application.presenter.external.model.BuildingManagementDtoModel"]},{"name":"object CollectionExtensions","description":"usecase.aggregation.util.CollectionExtensions","location":"surgery-report-microservice/usecase.aggregation.util/-collection-extensions/index.html","searchKeys":["CollectionExtensions","object CollectionExtensions","usecase.aggregation.util.CollectionExtensions"]},{"name":"object Companion","description":"application.presenter.event.model.SurgicalProcessSummaryEvent.Companion","location":"surgery-report-microservice/application.presenter.event.model/-surgical-process-summary-event/-companion/index.html","searchKeys":["Companion","object Companion","application.presenter.event.model.SurgicalProcessSummaryEvent.Companion"]},{"name":"object Companion","description":"infrastructure.api.APIController.Companion","location":"surgery-report-microservice/infrastructure.api/-a-p-i-controller/-companion/index.html","searchKeys":["Companion","object Companion","infrastructure.api.APIController.Companion"]},{"name":"object Companion","description":"infrastructure.database.SurgeryReportDatabase.Companion","location":"surgery-report-microservice/infrastructure.database/-surgery-report-database/-companion/index.html","searchKeys":["Companion","object Companion","infrastructure.database.SurgeryReportDatabase.Companion"]},{"name":"object Companion","description":"infrastructure.events.KafkaClient.Companion","location":"surgery-report-microservice/infrastructure.events/-kafka-client/-companion/index.html","searchKeys":["Companion","object Companion","infrastructure.events.KafkaClient.Companion"]},{"name":"object Companion","description":"infrastructure.external.ExternalServiceCaller.Companion","location":"surgery-report-microservice/infrastructure.external/-external-service-caller/-companion/index.html","searchKeys":["Companion","object Companion","infrastructure.external.ExternalServiceCaller.Companion"]},{"name":"object EventHandlers","description":"application.handler.EventHandlers","location":"surgery-report-microservice/application.handler/-event-handlers/index.html","searchKeys":["EventHandlers","object EventHandlers","application.handler.EventHandlers"]},{"name":"object EventSerialization","description":"application.presenter.event.serialization.EventSerialization","location":"surgery-report-microservice/application.presenter.event.serialization/-event-serialization/index.html","searchKeys":["EventSerialization","object EventSerialization","application.presenter.event.serialization.EventSerialization"]},{"name":"object ExternalServiceSerialization","description":"application.presenter.external.serialization.ExternalServiceSerialization","location":"surgery-report-microservice/application.presenter.external.serialization/-external-service-serialization/index.html","searchKeys":["ExternalServiceSerialization","object ExternalServiceSerialization","application.presenter.external.serialization.ExternalServiceSerialization"]},{"name":"object HealthcareUserSerializer","description":"application.presenter.api.serialization.HealthcareUserSerializer","location":"surgery-report-microservice/application.presenter.api.serialization/-healthcare-user-serializer/index.html","searchKeys":["HealthcareUserSerializer","object HealthcareUserSerializer","application.presenter.api.serialization.HealthcareUserSerializer"]},{"name":"object MedicalDeviceSerializer","description":"application.presenter.api.serialization.MedicalDeviceSerializer","location":"surgery-report-microservice/application.presenter.api.serialization/-medical-device-serializer/index.html","searchKeys":["MedicalDeviceSerializer","object MedicalDeviceSerializer","application.presenter.api.serialization.MedicalDeviceSerializer"]},{"name":"object PatientManagementIntegrationDtoModel","description":"application.presenter.external.model.PatientManagementIntegrationDtoModel","location":"surgery-report-microservice/application.presenter.external.model/-patient-management-integration-dto-model/index.html","searchKeys":["PatientManagementIntegrationDtoModel","object PatientManagementIntegrationDtoModel","application.presenter.external.model.PatientManagementIntegrationDtoModel"]},{"name":"object RoomSerializer","description":"application.presenter.api.serialization.RoomSerializer","location":"surgery-report-microservice/application.presenter.api.serialization/-room-serializer/index.html","searchKeys":["RoomSerializer","object RoomSerializer","application.presenter.api.serialization.RoomSerializer"]},{"name":"object StaffTrackingDtoModel","description":"application.presenter.external.model.StaffTrackingDtoModel","location":"surgery-report-microservice/application.presenter.external.model/-staff-tracking-dto-model/index.html","searchKeys":["StaffTrackingDtoModel","object StaffTrackingDtoModel","application.presenter.external.model.StaffTrackingDtoModel"]},{"name":"object SurgeryReportSerializer","description":"application.presenter.api.serialization.SurgeryReportSerializer","location":"surgery-report-microservice/application.presenter.api.serialization/-surgery-report-serializer/index.html","searchKeys":["SurgeryReportSerializer","object SurgeryReportSerializer","application.presenter.api.serialization.SurgeryReportSerializer"]},{"name":"object SurgeryReportService","description":"application.service.SurgeryReportService","location":"surgery-report-microservice/application.service/-surgery-report-service/index.html","searchKeys":["SurgeryReportService","object SurgeryReportService","application.service.SurgeryReportService"]},{"name":"object SurgicalProcessSerializer","description":"application.presenter.api.serialization.SurgicalProcessSerializer","location":"surgery-report-microservice/application.presenter.api.serialization/-surgical-process-serializer/index.html","searchKeys":["SurgicalProcessSerializer","object SurgicalProcessSerializer","application.presenter.api.serialization.SurgicalProcessSerializer"]},{"name":"object TrackingInformationSerializer","description":"application.presenter.api.serialization.TrackingInformationSerializer","location":"surgery-report-microservice/application.presenter.api.serialization/-tracking-information-serializer/index.html","searchKeys":["TrackingInformationSerializer","object TrackingInformationSerializer","application.presenter.api.serialization.TrackingInformationSerializer"]},{"name":"object VitalSign","description":"entity.healthcareuser.VitalSign","location":"surgery-report-microservice/entity.healthcareuser/-vital-sign/index.html","searchKeys":["VitalSign","object VitalSign","entity.healthcareuser.VitalSign"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"entity.healthcareuser.HealthcareUser.equals","location":"surgery-report-microservice/entity.healthcareuser/-healthcare-user/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","entity.healthcareuser.HealthcareUser.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"entity.medicaldevice.ImplantableMedicalDevice.equals","location":"surgery-report-microservice/entity.medicaldevice/-implantable-medical-device/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","entity.medicaldevice.ImplantableMedicalDevice.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"entity.medicaldevice.MedicalTechnology.equals","location":"surgery-report-microservice/entity.medicaldevice/-medical-technology/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","entity.medicaldevice.MedicalTechnology.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"entity.process.SurgicalProcess.equals","location":"surgery-report-microservice/entity.process/-surgical-process/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","entity.process.SurgicalProcess.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"entity.report.SurgeryReport.equals","location":"surgery-report-microservice/entity.report/-surgery-report/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","entity.report.SurgeryReport.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"entity.room.Room.equals","location":"surgery-report-microservice/entity.room/-room/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","entity.room.Room.equals"]},{"name":"open override fun aggregate(): AggregateData<PatientVitalSigns>","description":"usecase.aggregation.AggregateVitalSignsExtractor.aggregate","location":"surgery-report-microservice/usecase.aggregation/-aggregate-vital-signs-extractor/aggregate.html","searchKeys":["aggregate","open override fun aggregate(): AggregateData<PatientVitalSigns>","usecase.aggregation.AggregateVitalSignsExtractor.aggregate"]},{"name":"open override fun aggregate(): AggregateData<RoomEnvironmentalData>","description":"usecase.aggregation.AggregateRoomEnvironmentalDataExtractor.aggregate","location":"surgery-report-microservice/usecase.aggregation/-aggregate-room-environmental-data-extractor/aggregate.html","searchKeys":["aggregate","open override fun aggregate(): AggregateData<RoomEnvironmentalData>","usecase.aggregation.AggregateRoomEnvironmentalDataExtractor.aggregate"]},{"name":"open override fun canHandle(event: Event<*>): Boolean","description":"application.handler.EventHandlers.SurgicalProcessSummaryEventHandler.canHandle","location":"surgery-report-microservice/application.handler/-event-handlers/-surgical-process-summary-event-handler/can-handle.html","searchKeys":["canHandle","open override fun canHandle(event: Event<*>): Boolean","application.handler.EventHandlers.SurgicalProcessSummaryEventHandler.canHandle"]},{"name":"open override fun consume(event: Event<*>)","description":"application.handler.EventHandlers.SurgicalProcessSummaryEventHandler.consume","location":"surgery-report-microservice/application.handler/-event-handlers/-surgical-process-summary-event-handler/consume.html","searchKeys":["consume","open override fun consume(event: Event<*>)","application.handler.EventHandlers.SurgicalProcessSummaryEventHandler.consume"]},{"name":"open override fun createSurgeryReport(surgeryReport: SurgeryReport): Boolean","description":"infrastructure.database.SurgeryReportDatabase.createSurgeryReport","location":"surgery-report-microservice/infrastructure.database/-surgery-report-database/create-surgery-report.html","searchKeys":["createSurgeryReport","open override fun createSurgeryReport(surgeryReport: SurgeryReport): Boolean","infrastructure.database.SurgeryReportDatabase.createSurgeryReport"]},{"name":"open override fun execute(): Boolean","description":"application.service.SurgeryReportService.IntegrateSurgeryReport.execute","location":"surgery-report-microservice/application.service/-surgery-report-service/-integrate-surgery-report/execute.html","searchKeys":["execute","open override fun execute(): Boolean","application.service.SurgeryReportService.IntegrateSurgeryReport.execute"]},{"name":"open override fun execute(): List<SurgeryReportEntry>","description":"application.service.SurgeryReportService.GetAllSurgeryReportEntry.execute","location":"surgery-report-microservice/application.service/-surgery-report-service/-get-all-surgery-report-entry/execute.html","searchKeys":["execute","open override fun execute(): List<SurgeryReportEntry>","application.service.SurgeryReportService.GetAllSurgeryReportEntry.execute"]},{"name":"open override fun execute(): Pair<Instant, Instant>","description":"usecase.GetSurgicalProcessStartEndUseCase.execute","location":"surgery-report-microservice/usecase/-get-surgical-process-start-end-use-case/execute.html","searchKeys":["execute","open override fun execute(): Pair<Instant, Instant>","usecase.GetSurgicalProcessStartEndUseCase.execute"]},{"name":"open override fun execute(): SurgeryReport","description":"usecase.ReportGenerationUseCase.execute","location":"surgery-report-microservice/usecase/-report-generation-use-case/execute.html","searchKeys":["execute","open override fun execute(): SurgeryReport","usecase.ReportGenerationUseCase.execute"]},{"name":"open override fun execute(): SurgeryReport?","description":"application.service.SurgeryReportService.GenerateSurgeryReport.execute","location":"surgery-report-microservice/application.service/-surgery-report-service/-generate-surgery-report/execute.html","searchKeys":["execute","open override fun execute(): SurgeryReport?","application.service.SurgeryReportService.GenerateSurgeryReport.execute"]},{"name":"open override fun execute(): SurgeryReport?","description":"application.service.SurgeryReportService.GetSurgeryReport.execute","location":"surgery-report-microservice/application.service/-surgery-report-service/-get-surgery-report/execute.html","searchKeys":["execute","open override fun execute(): SurgeryReport?","application.service.SurgeryReportService.GetSurgeryReport.execute"]},{"name":"open override fun findBy(surgeryProcessID: SurgicalProcessID): SurgeryReport?","description":"infrastructure.database.SurgeryReportDatabase.findBy","location":"surgery-report-microservice/infrastructure.database/-surgery-report-database/find-by.html","searchKeys":["findBy","open override fun findBy(surgeryProcessID: SurgicalProcessID): SurgeryReport?","infrastructure.database.SurgeryReportDatabase.findBy"]},{"name":"open override fun getHealthProfessionalTrackingInfo(roomID: RoomID, from: Instant, to: Instant): List<TrackingInfo<HealthProfessionalID>>","description":"infrastructure.external.ExternalServiceCaller.getHealthProfessionalTrackingInfo","location":"surgery-report-microservice/infrastructure.external/-external-service-caller/get-health-professional-tracking-info.html","searchKeys":["getHealthProfessionalTrackingInfo","open override fun getHealthProfessionalTrackingInfo(roomID: RoomID, from: Instant, to: Instant): List<TrackingInfo<HealthProfessionalID>>","infrastructure.external.ExternalServiceCaller.getHealthProfessionalTrackingInfo"]},{"name":"open override fun getHealthcareUser(taxCode: TaxCode): HealthcareUser?","description":"infrastructure.external.ExternalServiceCaller.getHealthcareUser","location":"surgery-report-microservice/infrastructure.external/-external-service-caller/get-healthcare-user.html","searchKeys":["getHealthcareUser","open override fun getHealthcareUser(taxCode: TaxCode): HealthcareUser?","infrastructure.external.ExternalServiceCaller.getHealthcareUser"]},{"name":"open override fun getRoomEnvironmentalData(roomID: RoomID, from: Instant, to: Instant): List<Pair<Instant, RoomEnvironmentalData>>","description":"infrastructure.external.ExternalServiceCaller.getRoomEnvironmentalData","location":"surgery-report-microservice/infrastructure.external/-external-service-caller/get-room-environmental-data.html","searchKeys":["getRoomEnvironmentalData","open override fun getRoomEnvironmentalData(roomID: RoomID, from: Instant, to: Instant): List<Pair<Instant, RoomEnvironmentalData>>","infrastructure.external.ExternalServiceCaller.getRoomEnvironmentalData"]},{"name":"open override fun getSurgeryReports(): List<SurgeryReport>","description":"infrastructure.database.SurgeryReportDatabase.getSurgeryReports","location":"surgery-report-microservice/infrastructure.database/-surgery-report-database/get-surgery-reports.html","searchKeys":["getSurgeryReports","open override fun getSurgeryReports(): List<SurgeryReport>","infrastructure.database.SurgeryReportDatabase.getSurgeryReports"]},{"name":"open override fun hashCode(): Int","description":"entity.healthcareuser.HealthcareUser.hashCode","location":"surgery-report-microservice/entity.healthcareuser/-healthcare-user/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","entity.healthcareuser.HealthcareUser.hashCode"]},{"name":"open override fun hashCode(): Int","description":"entity.medicaldevice.ImplantableMedicalDevice.hashCode","location":"surgery-report-microservice/entity.medicaldevice/-implantable-medical-device/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","entity.medicaldevice.ImplantableMedicalDevice.hashCode"]},{"name":"open override fun hashCode(): Int","description":"entity.medicaldevice.MedicalTechnology.hashCode","location":"surgery-report-microservice/entity.medicaldevice/-medical-technology/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","entity.medicaldevice.MedicalTechnology.hashCode"]},{"name":"open override fun hashCode(): Int","description":"entity.process.SurgicalProcess.hashCode","location":"surgery-report-microservice/entity.process/-surgical-process/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","entity.process.SurgicalProcess.hashCode"]},{"name":"open override fun hashCode(): Int","description":"entity.report.SurgeryReport.hashCode","location":"surgery-report-microservice/entity.report/-surgery-report/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","entity.report.SurgeryReport.hashCode"]},{"name":"open override fun hashCode(): Int","description":"entity.room.Room.hashCode","location":"surgery-report-microservice/entity.room/-room/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","entity.room.Room.hashCode"]},{"name":"open override fun integrateSurgeryReport(surgeryProcessID: SurgicalProcessID, informationToAdd: String): Boolean","description":"infrastructure.database.SurgeryReportDatabase.integrateSurgeryReport","location":"surgery-report-microservice/infrastructure.database/-surgery-report-database/integrate-surgery-report.html","searchKeys":["integrateSurgeryReport","open override fun integrateSurgeryReport(surgeryProcessID: SurgicalProcessID, informationToAdd: String): Boolean","infrastructure.database.SurgeryReportDatabase.integrateSurgeryReport"]},{"name":"open override val data: SurgicalProcessSummaryPayload","description":"application.presenter.event.model.SurgicalProcessSummaryEvent.data","location":"surgery-report-microservice/application.presenter.event.model/-surgical-process-summary-event/data.html","searchKeys":["data","open override val data: SurgicalProcessSummaryPayload","application.presenter.event.model.SurgicalProcessSummaryEvent.data"]},{"name":"open override val dateTime: String","description":"application.presenter.event.model.SurgicalProcessSummaryEvent.dateTime","location":"surgery-report-microservice/application.presenter.event.model/-surgical-process-summary-event/date-time.html","searchKeys":["dateTime","open override val dateTime: String","application.presenter.event.model.SurgicalProcessSummaryEvent.dateTime"]},{"name":"open override val key: String","description":"application.presenter.event.model.SurgicalProcessSummaryEvent.key","location":"surgery-report-microservice/application.presenter.event.model/-surgical-process-summary-event/key.html","searchKeys":["key","open override val key: String","application.presenter.event.model.SurgicalProcessSummaryEvent.key"]},{"name":"sealed class SurgicalProcessState","description":"entity.process.SurgicalProcessState","location":"surgery-report-microservice/entity.process/-surgical-process-state/index.html","searchKeys":["SurgicalProcessState","sealed class SurgicalProcessState","entity.process.SurgicalProcessState"]},{"name":"typealias MedicalTechnologyUsage = Pair<Instant, MedicalTechnology>","description":"entity.medicaldevice.MedicalTechnologyUsage","location":"surgery-report-microservice/entity.medicaldevice/-medical-technology-usage/index.html","searchKeys":["MedicalTechnologyUsage","typealias MedicalTechnologyUsage = Pair<Instant, MedicalTechnology>","entity.medicaldevice.MedicalTechnologyUsage"]},{"name":"val additionalData: String","description":"application.presenter.api.model.SurgeryReportApiDto.additionalData","location":"surgery-report-microservice/application.presenter.api.model/-surgery-report-api-dto/additional-data.html","searchKeys":["additionalData","val additionalData: String","application.presenter.api.model.SurgeryReportApiDto.additionalData"]},{"name":"val additionalData: String","description":"application.presenter.api.model.SurgeryReportPatchApiDto.additionalData","location":"surgery-report-microservice/application.presenter.api.model/-surgery-report-patch-api-dto/additional-data.html","searchKeys":["additionalData","val additionalData: String","application.presenter.api.model.SurgeryReportPatchApiDto.additionalData"]},{"name":"val additionalData: String","description":"entity.report.SurgeryReport.additionalData","location":"surgery-report-microservice/entity.report/-surgery-report/additional-data.html","searchKeys":["additionalData","val additionalData: String","entity.report.SurgeryReport.additionalData"]},{"name":"val average: E","description":"application.presenter.api.model.measurements.AggregateDataApiDto.average","location":"surgery-report-microservice/application.presenter.api.model.measurements/-aggregate-data-api-dto/average.html","searchKeys":["average","val average: E","application.presenter.api.model.measurements.AggregateDataApiDto.average"]},{"name":"val average: E","description":"entity.measurements.AggregateData.average","location":"surgery-report-microservice/entity.measurements/-aggregate-data/average.html","searchKeys":["average","val average: E","entity.measurements.AggregateData.average"]},{"name":"val birthdate: String","description":"application.presenter.external.model.PatientManagementIntegrationDtoModel.HealthcareUserResultDto.birthdate","location":"surgery-report-microservice/application.presenter.external.model/-patient-management-integration-dto-model/-healthcare-user-result-dto/birthdate.html","searchKeys":["birthdate","val birthdate: String","application.presenter.external.model.PatientManagementIntegrationDtoModel.HealthcareUserResultDto.birthdate"]},{"name":"val bloodGroup: String","description":"application.presenter.external.model.PatientManagementIntegrationDtoModel.HealthcareUserResultDto.bloodGroup","location":"surgery-report-microservice/application.presenter.external.model/-patient-management-integration-dto-model/-healthcare-user-result-dto/blood-group.html","searchKeys":["bloodGroup","val bloodGroup: String","application.presenter.external.model.PatientManagementIntegrationDtoModel.HealthcareUserResultDto.bloodGroup"]},{"name":"val bodyTemperature: BodyTemperatureEventDto? = null","description":"application.presenter.event.model.PatientVitalSignsEventDto.bodyTemperature","location":"surgery-report-microservice/application.presenter.event.model/-patient-vital-signs-event-dto/body-temperature.html","searchKeys":["bodyTemperature","val bodyTemperature: BodyTemperatureEventDto? = null","application.presenter.event.model.PatientVitalSignsEventDto.bodyTemperature"]},{"name":"val bodyTemperature: ValueWithUnit<Double>? = null","description":"application.presenter.api.model.healthcareuser.PatientVitalSignsApiDto.bodyTemperature","location":"surgery-report-microservice/application.presenter.api.model.healthcareuser/-patient-vital-signs-api-dto/body-temperature.html","searchKeys":["bodyTemperature","val bodyTemperature: ValueWithUnit<Double>? = null","application.presenter.api.model.healthcareuser.PatientVitalSignsApiDto.bodyTemperature"]},{"name":"val bodyTemperature: VitalSign.BodyTemperature? = null","description":"entity.healthcareuser.PatientVitalSigns.bodyTemperature","location":"surgery-report-microservice/entity.healthcareuser/-patient-vital-signs/body-temperature.html","searchKeys":["bodyTemperature","val bodyTemperature: VitalSign.BodyTemperature? = null","entity.healthcareuser.PatientVitalSigns.bodyTemperature"]},{"name":"val bpm: Int","description":"application.presenter.event.model.HeartBeatEventDto.bpm","location":"surgery-report-microservice/application.presenter.event.model/-heart-beat-event-dto/bpm.html","searchKeys":["bpm","val bpm: Int","application.presenter.event.model.HeartBeatEventDto.bpm"]},{"name":"val bpm: Int","description":"entity.healthcareuser.VitalSign.HeartBeat.bpm","location":"surgery-report-microservice/entity.healthcareuser/-vital-sign/-heart-beat/bpm.html","searchKeys":["bpm","val bpm: Int","entity.healthcareuser.VitalSign.HeartBeat.bpm"]},{"name":"val consumedImplantableMedicalDevice: Set<ImplantableMedicalDeviceApiDto>","description":"application.presenter.api.model.SurgeryReportApiDto.consumedImplantableMedicalDevice","location":"surgery-report-microservice/application.presenter.api.model/-surgery-report-api-dto/consumed-implantable-medical-device.html","searchKeys":["consumedImplantableMedicalDevice","val consumedImplantableMedicalDevice: Set<ImplantableMedicalDeviceApiDto>","application.presenter.api.model.SurgeryReportApiDto.consumedImplantableMedicalDevice"]},{"name":"val consumedImplantableMedicalDevices: Set<ImplantableMedicalDevice>","description":"entity.report.SurgeryReport.consumedImplantableMedicalDevices","location":"surgery-report-microservice/entity.report/-surgery-report/consumed-implantable-medical-devices.html","searchKeys":["consumedImplantableMedicalDevices","val consumedImplantableMedicalDevices: Set<ImplantableMedicalDevice>","entity.report.SurgeryReport.consumedImplantableMedicalDevices"]},{"name":"val currentStep: SurgicalProcessStep? = null","description":"entity.process.SurgicalProcessState.currentStep","location":"surgery-report-microservice/entity.process/-surgical-process-state/current-step.html","searchKeys":["currentStep","val currentStep: SurgicalProcessStep? = null","entity.process.SurgicalProcessState.currentStep"]},{"name":"val date: String","description":"application.presenter.api.model.apiresponse.ApiResponses.ResponseTimedEntry.date","location":"surgery-report-microservice/application.presenter.api.model.apiresponse/-api-responses/-response-timed-entry/date.html","searchKeys":["date","val date: String","application.presenter.api.model.apiresponse.ApiResponses.ResponseTimedEntry.date"]},{"name":"val dateTime: Instant","description":"entity.tracking.TrackingInfo.dateTime","location":"surgery-report-microservice/entity.tracking/-tracking-info/date-time.html","searchKeys":["dateTime","val dateTime: Instant","entity.tracking.TrackingInfo.dateTime"]},{"name":"val dateTime: String","description":"application.presenter.api.model.medicaldevice.MedicalTechnologyUsageApiDto.dateTime","location":"surgery-report-microservice/application.presenter.api.model.medicaldevice/-medical-technology-usage-api-dto/date-time.html","searchKeys":["dateTime","val dateTime: String","application.presenter.api.model.medicaldevice.MedicalTechnologyUsageApiDto.dateTime"]},{"name":"val dateTime: String","description":"application.presenter.api.model.tracking.TrackingInformationApiDto.dateTime","location":"surgery-report-microservice/application.presenter.api.model.tracking/-tracking-information-api-dto/date-time.html","searchKeys":["dateTime","val dateTime: String","application.presenter.api.model.tracking.TrackingInformationApiDto.dateTime"]},{"name":"val dateTime: String","description":"application.presenter.external.model.StaffTrackingDtoModel.TrackingInfoResultDto.dateTime","location":"surgery-report-microservice/application.presenter.external.model/-staff-tracking-dto-model/-tracking-info-result-dto/date-time.html","searchKeys":["dateTime","val dateTime: String","application.presenter.external.model.StaffTrackingDtoModel.TrackingInfoResultDto.dateTime"]},{"name":"val degree: Double","description":"application.presenter.event.model.BodyTemperatureEventDto.degree","location":"surgery-report-microservice/application.presenter.event.model/-body-temperature-event-dto/degree.html","searchKeys":["degree","val degree: Double","application.presenter.event.model.BodyTemperatureEventDto.degree"]},{"name":"val description: String","description":"entity.process.SurgicalProcess.description","location":"surgery-report-microservice/entity.process/-surgical-process/description.html","searchKeys":["description","val description: String","entity.process.SurgicalProcess.description"]},{"name":"val description: String? = null","description":"application.presenter.api.model.medicaldevice.MedicalTechnologyApiDto.description","location":"surgery-report-microservice/application.presenter.api.model.medicaldevice/-medical-technology-api-dto/description.html","searchKeys":["description","val description: String? = null","application.presenter.api.model.medicaldevice.MedicalTechnologyApiDto.description"]},{"name":"val description: String? = null","description":"application.presenter.event.model.MedicalTechnologyEventDto.description","location":"surgery-report-microservice/application.presenter.event.model/-medical-technology-event-dto/description.html","searchKeys":["description","val description: String? = null","application.presenter.event.model.MedicalTechnologyEventDto.description"]},{"name":"val description: String? = null","description":"entity.medicaldevice.MedicalTechnology.description","location":"surgery-report-microservice/entity.medicaldevice/-medical-technology/description.html","searchKeys":["description","val description: String? = null","entity.medicaldevice.MedicalTechnology.description"]},{"name":"val diastolicBloodPressure: DiastolicBloodPressureEventDto? = null","description":"application.presenter.event.model.PatientVitalSignsEventDto.diastolicBloodPressure","location":"surgery-report-microservice/application.presenter.event.model/-patient-vital-signs-event-dto/diastolic-blood-pressure.html","searchKeys":["diastolicBloodPressure","val diastolicBloodPressure: DiastolicBloodPressureEventDto? = null","application.presenter.event.model.PatientVitalSignsEventDto.diastolicBloodPressure"]},{"name":"val diastolicBloodPressure: Int? = null","description":"application.presenter.api.model.healthcareuser.PatientVitalSignsApiDto.diastolicBloodPressure","location":"surgery-report-microservice/application.presenter.api.model.healthcareuser/-patient-vital-signs-api-dto/diastolic-blood-pressure.html","searchKeys":["diastolicBloodPressure","val diastolicBloodPressure: Int? = null","application.presenter.api.model.healthcareuser.PatientVitalSignsApiDto.diastolicBloodPressure"]},{"name":"val diastolicBloodPressure: VitalSign.DiastolicBloodPressure? = null","description":"entity.healthcareuser.PatientVitalSigns.diastolicBloodPressure","location":"surgery-report-microservice/entity.healthcareuser/-patient-vital-signs/diastolic-blood-pressure.html","searchKeys":["diastolicBloodPressure","val diastolicBloodPressure: VitalSign.DiastolicBloodPressure? = null","entity.healthcareuser.PatientVitalSigns.diastolicBloodPressure"]},{"name":"val entries: EnumEntries<BuildingManagementDtoModel.LuminosityUnitResultDto>","description":"application.presenter.external.model.BuildingManagementDtoModel.LuminosityUnitResultDto.entries","location":"surgery-report-microservice/application.presenter.external.model/-building-management-dto-model/-luminosity-unit-result-dto/entries.html","searchKeys":["entries","val entries: EnumEntries<BuildingManagementDtoModel.LuminosityUnitResultDto>","application.presenter.external.model.BuildingManagementDtoModel.LuminosityUnitResultDto.entries"]},{"name":"val entries: EnumEntries<BuildingManagementDtoModel.TemperatureUnitResultDto>","description":"application.presenter.external.model.BuildingManagementDtoModel.TemperatureUnitResultDto.entries","location":"surgery-report-microservice/application.presenter.external.model/-building-management-dto-model/-temperature-unit-result-dto/entries.html","searchKeys":["entries","val entries: EnumEntries<BuildingManagementDtoModel.TemperatureUnitResultDto>","application.presenter.external.model.BuildingManagementDtoModel.TemperatureUnitResultDto.entries"]},{"name":"val entries: EnumEntries<ImplantableMedicalDeviceApiDtoType>","description":"application.presenter.api.model.medicaldevice.ImplantableMedicalDeviceApiDtoType.entries","location":"surgery-report-microservice/application.presenter.api.model.medicaldevice/-implantable-medical-device-api-dto-type/entries.html","searchKeys":["entries","val entries: EnumEntries<ImplantableMedicalDeviceApiDtoType>","application.presenter.api.model.medicaldevice.ImplantableMedicalDeviceApiDtoType.entries"]},{"name":"val entries: EnumEntries<ImplantableMedicalDeviceType>","description":"entity.medicaldevice.ImplantableMedicalDeviceType.entries","location":"surgery-report-microservice/entity.medicaldevice/-implantable-medical-device-type/entries.html","searchKeys":["entries","val entries: EnumEntries<ImplantableMedicalDeviceType>","entity.medicaldevice.ImplantableMedicalDeviceType.entries"]},{"name":"val entries: EnumEntries<ImplantableMedicalDeviceTypeEventDto>","description":"application.presenter.event.model.ImplantableMedicalDeviceTypeEventDto.entries","location":"surgery-report-microservice/application.presenter.event.model/-implantable-medical-device-type-event-dto/entries.html","searchKeys":["entries","val entries: EnumEntries<ImplantableMedicalDeviceTypeEventDto>","application.presenter.event.model.ImplantableMedicalDeviceTypeEventDto.entries"]},{"name":"val entries: EnumEntries<LightUnit>","description":"entity.measurements.LightUnit.entries","location":"surgery-report-microservice/entity.measurements/-light-unit/entries.html","searchKeys":["entries","val entries: EnumEntries<LightUnit>","entity.measurements.LightUnit.entries"]},{"name":"val entries: EnumEntries<MedicalTechnologyApiDtoType>","description":"application.presenter.api.model.medicaldevice.MedicalTechnologyApiDtoType.entries","location":"surgery-report-microservice/application.presenter.api.model.medicaldevice/-medical-technology-api-dto-type/entries.html","searchKeys":["entries","val entries: EnumEntries<MedicalTechnologyApiDtoType>","application.presenter.api.model.medicaldevice.MedicalTechnologyApiDtoType.entries"]},{"name":"val entries: EnumEntries<MedicalTechnologyType>","description":"entity.medicaldevice.MedicalTechnologyType.entries","location":"surgery-report-microservice/entity.medicaldevice/-medical-technology-type/entries.html","searchKeys":["entries","val entries: EnumEntries<MedicalTechnologyType>","entity.medicaldevice.MedicalTechnologyType.entries"]},{"name":"val entries: EnumEntries<MedicalTechnologyTypeEventDto>","description":"application.presenter.event.model.MedicalTechnologyTypeEventDto.entries","location":"surgery-report-microservice/application.presenter.event.model/-medical-technology-type-event-dto/entries.html","searchKeys":["entries","val entries: EnumEntries<MedicalTechnologyTypeEventDto>","application.presenter.event.model.MedicalTechnologyTypeEventDto.entries"]},{"name":"val entries: EnumEntries<ProcessStateEventDto>","description":"application.presenter.event.model.ProcessStateEventDto.entries","location":"surgery-report-microservice/application.presenter.event.model/-process-state-event-dto/entries.html","searchKeys":["entries","val entries: EnumEntries<ProcessStateEventDto>","application.presenter.event.model.ProcessStateEventDto.entries"]},{"name":"val entries: EnumEntries<ProcessStepEventDto>","description":"application.presenter.event.model.ProcessStepEventDto.entries","location":"surgery-report-microservice/application.presenter.event.model/-process-step-event-dto/entries.html","searchKeys":["entries","val entries: EnumEntries<ProcessStepEventDto>","application.presenter.event.model.ProcessStepEventDto.entries"]},{"name":"val entries: EnumEntries<RoomApiDtoType>","description":"application.presenter.api.model.room.RoomApiDtoType.entries","location":"surgery-report-microservice/application.presenter.api.model.room/-room-api-dto-type/entries.html","searchKeys":["entries","val entries: EnumEntries<RoomApiDtoType>","application.presenter.api.model.room.RoomApiDtoType.entries"]},{"name":"val entries: EnumEntries<RoomType>","description":"entity.room.RoomType.entries","location":"surgery-report-microservice/entity.room/-room-type/entries.html","searchKeys":["entries","val entries: EnumEntries<RoomType>","entity.room.RoomType.entries"]},{"name":"val entries: EnumEntries<StaffTrackingDtoModel.TrackingTypeResultDto>","description":"application.presenter.external.model.StaffTrackingDtoModel.TrackingTypeResultDto.entries","location":"surgery-report-microservice/application.presenter.external.model/-staff-tracking-dto-model/-tracking-type-result-dto/entries.html","searchKeys":["entries","val entries: EnumEntries<StaffTrackingDtoModel.TrackingTypeResultDto>","application.presenter.external.model.StaffTrackingDtoModel.TrackingTypeResultDto.entries"]},{"name":"val entries: EnumEntries<SurgicalProcessStep>","description":"entity.process.SurgicalProcessStep.entries","location":"surgery-report-microservice/entity.process/-surgical-process-step/entries.html","searchKeys":["entries","val entries: EnumEntries<SurgicalProcessStep>","entity.process.SurgicalProcessStep.entries"]},{"name":"val entries: EnumEntries<SurgicalProcessStepApiDto>","description":"application.presenter.api.model.process.SurgicalProcessStepApiDto.entries","location":"surgery-report-microservice/application.presenter.api.model.process/-surgical-process-step-api-dto/entries.html","searchKeys":["entries","val entries: EnumEntries<SurgicalProcessStepApiDto>","application.presenter.api.model.process.SurgicalProcessStepApiDto.entries"]},{"name":"val entries: EnumEntries<TemperatureUnit>","description":"entity.measurements.TemperatureUnit.entries","location":"surgery-report-microservice/entity.measurements/-temperature-unit/entries.html","searchKeys":["entries","val entries: EnumEntries<TemperatureUnit>","entity.measurements.TemperatureUnit.entries"]},{"name":"val entries: EnumEntries<TemperatureUnitEventDto>","description":"application.presenter.event.model.TemperatureUnitEventDto.entries","location":"surgery-report-microservice/application.presenter.event.model/-temperature-unit-event-dto/entries.html","searchKeys":["entries","val entries: EnumEntries<TemperatureUnitEventDto>","application.presenter.event.model.TemperatureUnitEventDto.entries"]},{"name":"val entries: EnumEntries<TrackApiDtoType>","description":"application.presenter.api.model.tracking.TrackApiDtoType.entries","location":"surgery-report-microservice/application.presenter.api.model.tracking/-track-api-dto-type/entries.html","searchKeys":["entries","val entries: EnumEntries<TrackApiDtoType>","application.presenter.api.model.tracking.TrackApiDtoType.entries"]},{"name":"val entries: EnumEntries<TrackType>","description":"entity.tracking.TrackType.entries","location":"surgery-report-microservice/entity.tracking/-track-type/entries.html","searchKeys":["entries","val entries: EnumEntries<TrackType>","entity.tracking.TrackType.entries"]},{"name":"val entries: List<T>","description":"application.presenter.api.model.apiresponse.ApiResponses.ResponseEntryList.entries","location":"surgery-report-microservice/application.presenter.api.model.apiresponse/-api-responses/-response-entry-list/entries.html","searchKeys":["entries","val entries: List<T>","application.presenter.api.model.apiresponse.ApiResponses.ResponseEntryList.entries"]},{"name":"val entry: T","description":"application.presenter.api.model.apiresponse.ApiResponses.ResponseEntry.entry","location":"surgery-report-microservice/application.presenter.api.model.apiresponse/-api-responses/-response-entry/entry.html","searchKeys":["entry","val entry: T","application.presenter.api.model.apiresponse.ApiResponses.ResponseEntry.entry"]},{"name":"val entry: T","description":"application.presenter.api.model.apiresponse.ApiResponses.ResponseTimedEntry.entry","location":"surgery-report-microservice/application.presenter.api.model.apiresponse/-api-responses/-response-timed-entry/entry.html","searchKeys":["entry","val entry: T","application.presenter.api.model.apiresponse.ApiResponses.ResponseTimedEntry.entry"]},{"name":"val environmentalAggregateData: Map<RoomApiDtoType, AggregateDataApiDto<RoomEnvironmentalDataApiDto>>","description":"application.presenter.api.model.SurgicalProcessStepAggregateDataApiDto.environmentalAggregateData","location":"surgery-report-microservice/application.presenter.api.model/-surgical-process-step-aggregate-data-api-dto/environmental-aggregate-data.html","searchKeys":["environmentalAggregateData","val environmentalAggregateData: Map<RoomApiDtoType, AggregateDataApiDto<RoomEnvironmentalDataApiDto>>","application.presenter.api.model.SurgicalProcessStepAggregateDataApiDto.environmentalAggregateData"]},{"name":"val environmentalAggregateData: Map<RoomType, AggregateData<RoomEnvironmentalData>>","description":"entity.report.SurgeryProcessStepAggregateData.environmentalAggregateData","location":"surgery-report-microservice/entity.report/-surgery-process-step-aggregate-data/environmental-aggregate-data.html","searchKeys":["environmentalAggregateData","val environmentalAggregateData: Map<RoomType, AggregateData<RoomEnvironmentalData>>","entity.report.SurgeryProcessStepAggregateData.environmentalAggregateData"]},{"name":"val healthProfessionalId: String","description":"application.presenter.api.model.tracking.TrackingInformationApiDto.healthProfessionalId","location":"surgery-report-microservice/application.presenter.api.model.tracking/-tracking-information-api-dto/health-professional-id.html","searchKeys":["healthProfessionalId","val healthProfessionalId: String","application.presenter.api.model.tracking.TrackingInformationApiDto.healthProfessionalId"]},{"name":"val healthProfessionalId: String","description":"application.presenter.external.model.StaffTrackingDtoModel.TrackingInfoResultDto.healthProfessionalId","location":"surgery-report-microservice/application.presenter.external.model/-staff-tracking-dto-model/-tracking-info-result-dto/health-professional-id.html","searchKeys":["healthProfessionalId","val healthProfessionalId: String","application.presenter.external.model.StaffTrackingDtoModel.TrackingInfoResultDto.healthProfessionalId"]},{"name":"val healthProfessionalId: String?","description":"application.presenter.event.model.SurgicalProcessSummaryPayload.healthProfessionalId","location":"surgery-report-microservice/application.presenter.event.model/-surgical-process-summary-payload/health-professional-id.html","searchKeys":["healthProfessionalId","val healthProfessionalId: String?","application.presenter.event.model.SurgicalProcessSummaryPayload.healthProfessionalId"]},{"name":"val healthProfessionalTrackingInformation: List<TrackingInfo<HealthProfessionalID>>","description":"entity.report.SurgeryReport.healthProfessionalTrackingInformation","location":"surgery-report-microservice/entity.report/-surgery-report/health-professional-tracking-information.html","searchKeys":["healthProfessionalTrackingInformation","val healthProfessionalTrackingInformation: List<TrackingInfo<HealthProfessionalID>>","entity.report.SurgeryReport.healthProfessionalTrackingInformation"]},{"name":"val healthProfessionalTrackingInformation: List<TrackingInformationApiDto>","description":"application.presenter.api.model.SurgeryReportApiDto.healthProfessionalTrackingInformation","location":"surgery-report-microservice/application.presenter.api.model/-surgery-report-api-dto/health-professional-tracking-information.html","searchKeys":["healthProfessionalTrackingInformation","val healthProfessionalTrackingInformation: List<TrackingInformationApiDto>","application.presenter.api.model.SurgeryReportApiDto.healthProfessionalTrackingInformation"]},{"name":"val healthcareUser: HealthcareUser?","description":"entity.report.SurgeryReport.healthcareUser","location":"surgery-report-microservice/entity.report/-surgery-report/healthcare-user.html","searchKeys":["healthcareUser","val healthcareUser: HealthcareUser?","entity.report.SurgeryReport.healthcareUser"]},{"name":"val healthcareUser: HealthcareUserApiDto?","description":"application.presenter.api.model.SurgeryReportApiDto.healthcareUser","location":"surgery-report-microservice/application.presenter.api.model/-surgery-report-api-dto/healthcare-user.html","searchKeys":["healthcareUser","val healthcareUser: HealthcareUserApiDto?","application.presenter.api.model.SurgeryReportApiDto.healthcareUser"]},{"name":"val heartBeat: HeartBeatEventDto? = null","description":"application.presenter.event.model.PatientVitalSignsEventDto.heartBeat","location":"surgery-report-microservice/application.presenter.event.model/-patient-vital-signs-event-dto/heart-beat.html","searchKeys":["heartBeat","val heartBeat: HeartBeatEventDto? = null","application.presenter.event.model.PatientVitalSignsEventDto.heartBeat"]},{"name":"val heartBeat: Int? = null","description":"application.presenter.api.model.healthcareuser.PatientVitalSignsApiDto.heartBeat","location":"surgery-report-microservice/application.presenter.api.model.healthcareuser/-patient-vital-signs-api-dto/heart-beat.html","searchKeys":["heartBeat","val heartBeat: Int? = null","application.presenter.api.model.healthcareuser.PatientVitalSignsApiDto.heartBeat"]},{"name":"val heartBeat: VitalSign.HeartBeat? = null","description":"entity.healthcareuser.PatientVitalSigns.heartBeat","location":"surgery-report-microservice/entity.healthcareuser/-patient-vital-signs/heart-beat.html","searchKeys":["heartBeat","val heartBeat: VitalSign.HeartBeat? = null","entity.healthcareuser.PatientVitalSigns.heartBeat"]},{"name":"val height: Double","description":"application.presenter.external.model.PatientManagementIntegrationDtoModel.HealthcareUserResultDto.height","location":"surgery-report-microservice/application.presenter.external.model/-patient-management-integration-dto-model/-healthcare-user-result-dto/height.html","searchKeys":["height","val height: Double","application.presenter.external.model.PatientManagementIntegrationDtoModel.HealthcareUserResultDto.height"]},{"name":"val humidity: Double? = null","description":"application.presenter.api.model.room.RoomEnvironmentalDataApiDto.humidity","location":"surgery-report-microservice/application.presenter.api.model.room/-room-environmental-data-api-dto/humidity.html","searchKeys":["humidity","val humidity: Double? = null","application.presenter.api.model.room.RoomEnvironmentalDataApiDto.humidity"]},{"name":"val humidity: Double? = null","description":"application.presenter.external.model.BuildingManagementDtoModel.EnvironmentalDataApiDto.humidity","location":"surgery-report-microservice/application.presenter.external.model/-building-management-dto-model/-environmental-data-api-dto/humidity.html","searchKeys":["humidity","val humidity: Double? = null","application.presenter.external.model.BuildingManagementDtoModel.EnvironmentalDataApiDto.humidity"]},{"name":"val humidity: Humidity? = null","description":"entity.room.RoomEnvironmentalData.humidity","location":"surgery-report-microservice/entity.room/-room-environmental-data/humidity.html","searchKeys":["humidity","val humidity: Humidity? = null","entity.room.RoomEnvironmentalData.humidity"]},{"name":"val id: ImplantableMedicalDeviceID","description":"entity.medicaldevice.ImplantableMedicalDevice.id","location":"surgery-report-microservice/entity.medicaldevice/-implantable-medical-device/id.html","searchKeys":["id","val id: ImplantableMedicalDeviceID","entity.medicaldevice.ImplantableMedicalDevice.id"]},{"name":"val id: ImplantableMedicalDeviceIDEventDto","description":"application.presenter.event.model.ImplantableMedicalDeviceEventDto.id","location":"surgery-report-microservice/application.presenter.event.model/-implantable-medical-device-event-dto/id.html","searchKeys":["id","val id: ImplantableMedicalDeviceIDEventDto","application.presenter.event.model.ImplantableMedicalDeviceEventDto.id"]},{"name":"val id: MedicalTechnologyID","description":"entity.medicaldevice.MedicalTechnology.id","location":"surgery-report-microservice/entity.medicaldevice/-medical-technology/id.html","searchKeys":["id","val id: MedicalTechnologyID","entity.medicaldevice.MedicalTechnology.id"]},{"name":"val id: MedicalTechnologyIDEventDto","description":"application.presenter.event.model.MedicalTechnologyEventDto.id","location":"surgery-report-microservice/application.presenter.event.model/-medical-technology-event-dto/id.html","searchKeys":["id","val id: MedicalTechnologyIDEventDto","application.presenter.event.model.MedicalTechnologyEventDto.id"]},{"name":"val id: RoomID","description":"entity.room.Room.id","location":"surgery-report-microservice/entity.room/-room/id.html","searchKeys":["id","val id: RoomID","entity.room.Room.id"]},{"name":"val id: String","description":"application.presenter.api.model.medicaldevice.ImplantableMedicalDeviceApiDto.id","location":"surgery-report-microservice/application.presenter.api.model.medicaldevice/-implantable-medical-device-api-dto/id.html","searchKeys":["id","val id: String","application.presenter.api.model.medicaldevice.ImplantableMedicalDeviceApiDto.id"]},{"name":"val id: String","description":"application.presenter.api.model.medicaldevice.MedicalTechnologyApiDto.id","location":"surgery-report-microservice/application.presenter.api.model.medicaldevice/-medical-technology-api-dto/id.html","searchKeys":["id","val id: String","application.presenter.api.model.medicaldevice.MedicalTechnologyApiDto.id"]},{"name":"val id: String","description":"application.presenter.api.model.room.RoomApiDto.id","location":"surgery-report-microservice/application.presenter.api.model.room/-room-api-dto/id.html","searchKeys":["id","val id: String","application.presenter.api.model.room.RoomApiDto.id"]},{"name":"val id: String","description":"application.presenter.event.model.ImplantableMedicalDeviceIDEventDto.id","location":"surgery-report-microservice/application.presenter.event.model/-implantable-medical-device-i-d-event-dto/id.html","searchKeys":["id","val id: String","application.presenter.event.model.ImplantableMedicalDeviceIDEventDto.id"]},{"name":"val id: String","description":"application.presenter.event.model.MedicalTechnologyIDEventDto.id","location":"surgery-report-microservice/application.presenter.event.model/-medical-technology-i-d-event-dto/id.html","searchKeys":["id","val id: String","application.presenter.event.model.MedicalTechnologyIDEventDto.id"]},{"name":"val id: SurgicalProcessID","description":"entity.process.SurgicalProcess.id","location":"surgery-report-microservice/entity.process/-surgical-process/id.html","searchKeys":["id","val id: SurgicalProcessID","entity.process.SurgicalProcess.id"]},{"name":"val inChargeHealthProfessional: HealthProfessionalID?","description":"entity.report.SurgeryReport.inChargeHealthProfessional","location":"surgery-report-microservice/entity.report/-surgery-report/in-charge-health-professional.html","searchKeys":["inChargeHealthProfessional","val inChargeHealthProfessional: HealthProfessionalID?","entity.report.SurgeryReport.inChargeHealthProfessional"]},{"name":"val inChargeHealthProfessional: HealthProfessionalID? = null","description":"entity.process.SurgicalProcess.inChargeHealthProfessional","location":"surgery-report-microservice/entity.process/-surgical-process/in-charge-health-professional.html","searchKeys":["inChargeHealthProfessional","val inChargeHealthProfessional: HealthProfessionalID? = null","entity.process.SurgicalProcess.inChargeHealthProfessional"]},{"name":"val inChargeHealthProfessionalID: String?","description":"application.presenter.api.model.SurgeryReportApiDto.inChargeHealthProfessionalID","location":"surgery-report-microservice/application.presenter.api.model/-surgery-report-api-dto/in-charge-health-professional-i-d.html","searchKeys":["inChargeHealthProfessionalID","val inChargeHealthProfessionalID: String?","application.presenter.api.model.SurgeryReportApiDto.inChargeHealthProfessionalID"]},{"name":"val inUse: Boolean","description":"application.presenter.event.model.MedicalTechnologyEventDto.inUse","location":"surgery-report-microservice/application.presenter.event.model/-medical-technology-event-dto/in-use.html","searchKeys":["inUse","val inUse: Boolean","application.presenter.event.model.MedicalTechnologyEventDto.inUse"]},{"name":"val inUse: Boolean = false","description":"application.presenter.api.model.medicaldevice.MedicalTechnologyApiDto.inUse","location":"surgery-report-microservice/application.presenter.api.model.medicaldevice/-medical-technology-api-dto/in-use.html","searchKeys":["inUse","val inUse: Boolean = false","application.presenter.api.model.medicaldevice.MedicalTechnologyApiDto.inUse"]},{"name":"val inUse: Boolean = false","description":"entity.medicaldevice.MedicalTechnology.inUse","location":"surgery-report-microservice/entity.medicaldevice/-medical-technology/in-use.html","searchKeys":["inUse","val inUse: Boolean = false","entity.medicaldevice.MedicalTechnology.inUse"]},{"name":"val individual: I","description":"entity.tracking.TrackingInfo.individual","location":"surgery-report-microservice/entity.tracking/-tracking-info/individual.html","searchKeys":["individual","val individual: I","entity.tracking.TrackingInfo.individual"]},{"name":"val luminosity: BuildingManagementDtoModel.ValueWithExplicitUnit<Double, BuildingManagementDtoModel.LuminosityUnitResultDto>? = null","description":"application.presenter.external.model.BuildingManagementDtoModel.EnvironmentalDataApiDto.luminosity","location":"surgery-report-microservice/application.presenter.external.model/-building-management-dto-model/-environmental-data-api-dto/luminosity.html","searchKeys":["luminosity","val luminosity: BuildingManagementDtoModel.ValueWithExplicitUnit<Double, BuildingManagementDtoModel.LuminosityUnitResultDto>? = null","application.presenter.external.model.BuildingManagementDtoModel.EnvironmentalDataApiDto.luminosity"]},{"name":"val luminosity: Luminosity? = null","description":"entity.room.RoomEnvironmentalData.luminosity","location":"surgery-report-microservice/entity.room/-room-environmental-data/luminosity.html","searchKeys":["luminosity","val luminosity: Luminosity? = null","entity.room.RoomEnvironmentalData.luminosity"]},{"name":"val luminosity: ValueWithUnit<Double>? = null","description":"application.presenter.api.model.room.RoomEnvironmentalDataApiDto.luminosity","location":"surgery-report-microservice/application.presenter.api.model.room/-room-environmental-data-api-dto/luminosity.html","searchKeys":["luminosity","val luminosity: ValueWithUnit<Double>? = null","application.presenter.api.model.room.RoomEnvironmentalDataApiDto.luminosity"]},{"name":"val maximum: E","description":"application.presenter.api.model.measurements.AggregateDataApiDto.maximum","location":"surgery-report-microservice/application.presenter.api.model.measurements/-aggregate-data-api-dto/maximum.html","searchKeys":["maximum","val maximum: E","application.presenter.api.model.measurements.AggregateDataApiDto.maximum"]},{"name":"val maximum: E","description":"entity.measurements.AggregateData.maximum","location":"surgery-report-microservice/entity.measurements/-aggregate-data/maximum.html","searchKeys":["maximum","val maximum: E","entity.measurements.AggregateData.maximum"]},{"name":"val medicalDeviceUsage: List<ImplantableMedicalDeviceEventDto>","description":"application.presenter.event.model.SurgicalProcessSummaryPayload.medicalDeviceUsage","location":"surgery-report-microservice/application.presenter.event.model/-surgical-process-summary-payload/medical-device-usage.html","searchKeys":["medicalDeviceUsage","val medicalDeviceUsage: List<ImplantableMedicalDeviceEventDto>","application.presenter.event.model.SurgicalProcessSummaryPayload.medicalDeviceUsage"]},{"name":"val medicalTechnology: MedicalTechnologyApiDto","description":"application.presenter.api.model.medicaldevice.MedicalTechnologyUsageApiDto.medicalTechnology","location":"surgery-report-microservice/application.presenter.api.model.medicaldevice/-medical-technology-usage-api-dto/medical-technology.html","searchKeys":["medicalTechnology","val medicalTechnology: MedicalTechnologyApiDto","application.presenter.api.model.medicaldevice.MedicalTechnologyUsageApiDto.medicalTechnology"]},{"name":"val medicalTechnologyUsage: List<Pair<String, MedicalTechnologyEventDto>>","description":"application.presenter.event.model.SurgicalProcessSummaryPayload.medicalTechnologyUsage","location":"surgery-report-microservice/application.presenter.event.model/-surgical-process-summary-payload/medical-technology-usage.html","searchKeys":["medicalTechnologyUsage","val medicalTechnologyUsage: List<Pair<String, MedicalTechnologyEventDto>>","application.presenter.event.model.SurgicalProcessSummaryPayload.medicalTechnologyUsage"]},{"name":"val medicalTechnologyUsageData: Set<MedicalTechnologyUsage>","description":"entity.report.SurgeryReport.medicalTechnologyUsageData","location":"surgery-report-microservice/entity.report/-surgery-report/medical-technology-usage-data.html","searchKeys":["medicalTechnologyUsageData","val medicalTechnologyUsageData: Set<MedicalTechnologyUsage>","entity.report.SurgeryReport.medicalTechnologyUsageData"]},{"name":"val medicalTechnologyUsageData: Set<MedicalTechnologyUsageApiDto>","description":"application.presenter.api.model.SurgeryReportApiDto.medicalTechnologyUsageData","location":"surgery-report-microservice/application.presenter.api.model/-surgery-report-api-dto/medical-technology-usage-data.html","searchKeys":["medicalTechnologyUsageData","val medicalTechnologyUsageData: Set<MedicalTechnologyUsageApiDto>","application.presenter.api.model.SurgeryReportApiDto.medicalTechnologyUsageData"]},{"name":"val minimum: E","description":"application.presenter.api.model.measurements.AggregateDataApiDto.minimum","location":"surgery-report-microservice/application.presenter.api.model.measurements/-aggregate-data-api-dto/minimum.html","searchKeys":["minimum","val minimum: E","application.presenter.api.model.measurements.AggregateDataApiDto.minimum"]},{"name":"val minimum: E","description":"entity.measurements.AggregateData.minimum","location":"surgery-report-microservice/entity.measurements/-aggregate-data/minimum.html","searchKeys":["minimum","val minimum: E","entity.measurements.AggregateData.minimum"]},{"name":"val name: String","description":"application.presenter.api.model.healthcareuser.HealthcareUserApiDto.name","location":"surgery-report-microservice/application.presenter.api.model.healthcareuser/-healthcare-user-api-dto/name.html","searchKeys":["name","val name: String","application.presenter.api.model.healthcareuser.HealthcareUserApiDto.name"]},{"name":"val name: String","description":"application.presenter.api.model.medicaldevice.MedicalTechnologyApiDto.name","location":"surgery-report-microservice/application.presenter.api.model.medicaldevice/-medical-technology-api-dto/name.html","searchKeys":["name","val name: String","application.presenter.api.model.medicaldevice.MedicalTechnologyApiDto.name"]},{"name":"val name: String","description":"application.presenter.event.model.MedicalTechnologyEventDto.name","location":"surgery-report-microservice/application.presenter.event.model/-medical-technology-event-dto/name.html","searchKeys":["name","val name: String","application.presenter.event.model.MedicalTechnologyEventDto.name"]},{"name":"val name: String","description":"application.presenter.external.model.PatientManagementIntegrationDtoModel.HealthcareUserResultDto.name","location":"surgery-report-microservice/application.presenter.external.model/-patient-management-integration-dto-model/-healthcare-user-result-dto/name.html","searchKeys":["name","val name: String","application.presenter.external.model.PatientManagementIntegrationDtoModel.HealthcareUserResultDto.name"]},{"name":"val name: String","description":"entity.healthcareuser.HealthcareUser.name","location":"surgery-report-microservice/entity.healthcareuser/-healthcare-user/name.html","searchKeys":["name","val name: String","entity.healthcareuser.HealthcareUser.name"]},{"name":"val name: String","description":"entity.medicaldevice.MedicalTechnology.name","location":"surgery-report-microservice/entity.medicaldevice/-medical-technology/name.html","searchKeys":["name","val name: String","entity.medicaldevice.MedicalTechnology.name"]},{"name":"val operatingRoom: RoomID","description":"entity.process.SurgicalProcess.operatingRoom","location":"surgery-report-microservice/entity.process/-surgical-process/operating-room.html","searchKeys":["operatingRoom","val operatingRoom: RoomID","entity.process.SurgicalProcess.operatingRoom"]},{"name":"val operatingRoomId: String","description":"application.presenter.event.model.SurgicalProcessSummaryPayload.operatingRoomId","location":"surgery-report-microservice/application.presenter.event.model/-surgical-process-summary-payload/operating-room-id.html","searchKeys":["operatingRoomId","val operatingRoomId: String","application.presenter.event.model.SurgicalProcessSummaryPayload.operatingRoomId"]},{"name":"val patientID: PatientID","description":"entity.process.SurgicalProcess.patientID","location":"surgery-report-microservice/entity.process/-surgical-process/patient-i-d.html","searchKeys":["patientID","val patientID: PatientID","entity.process.SurgicalProcess.patientID"]},{"name":"val patientID: PatientID","description":"entity.report.SurgeryReport.patientID","location":"surgery-report-microservice/entity.report/-surgery-report/patient-i-d.html","searchKeys":["patientID","val patientID: PatientID","entity.report.SurgeryReport.patientID"]},{"name":"val patientID: String","description":"application.presenter.api.model.SurgeryReportApiDto.patientID","location":"surgery-report-microservice/application.presenter.api.model/-surgery-report-api-dto/patient-i-d.html","searchKeys":["patientID","val patientID: String","application.presenter.api.model.SurgeryReportApiDto.patientID"]},{"name":"val patientId: String","description":"application.presenter.api.model.SurgeryReportEntry.patientId","location":"surgery-report-microservice/application.presenter.api.model/-surgery-report-entry/patient-id.html","searchKeys":["patientId","val patientId: String","application.presenter.api.model.SurgeryReportEntry.patientId"]},{"name":"val patientId: String","description":"application.presenter.event.model.SurgicalProcessSummaryPayload.patientId","location":"surgery-report-microservice/application.presenter.event.model/-surgical-process-summary-payload/patient-id.html","searchKeys":["patientId","val patientId: String","application.presenter.event.model.SurgicalProcessSummaryPayload.patientId"]},{"name":"val patientMedicalData: List<Pair<String, PatientVitalSignsEventDto>>","description":"application.presenter.event.model.SurgicalProcessSummaryPayload.patientMedicalData","location":"surgery-report-microservice/application.presenter.event.model/-surgical-process-summary-payload/patient-medical-data.html","searchKeys":["patientMedicalData","val patientMedicalData: List<Pair<String, PatientVitalSignsEventDto>>","application.presenter.event.model.SurgicalProcessSummaryPayload.patientMedicalData"]},{"name":"val patientName: String?","description":"application.presenter.api.model.SurgeryReportEntry.patientName","location":"surgery-report-microservice/application.presenter.api.model/-surgery-report-entry/patient-name.html","searchKeys":["patientName","val patientName: String?","application.presenter.api.model.SurgeryReportEntry.patientName"]},{"name":"val patientSurname: String?","description":"application.presenter.api.model.SurgeryReportEntry.patientSurname","location":"surgery-report-microservice/application.presenter.api.model/-surgery-report-entry/patient-surname.html","searchKeys":["patientSurname","val patientSurname: String?","application.presenter.api.model.SurgeryReportEntry.patientSurname"]},{"name":"val patientTaxCode: String?","description":"application.presenter.event.model.SurgicalProcessSummaryPayload.patientTaxCode","location":"surgery-report-microservice/application.presenter.event.model/-surgical-process-summary-payload/patient-tax-code.html","searchKeys":["patientTaxCode","val patientTaxCode: String?","application.presenter.event.model.SurgicalProcessSummaryPayload.patientTaxCode"]},{"name":"val patientVitalSignAggregateData: AggregateDataApiDto<PatientVitalSignsApiDto>","description":"application.presenter.api.model.SurgicalProcessStepAggregateDataApiDto.patientVitalSignAggregateData","location":"surgery-report-microservice/application.presenter.api.model/-surgical-process-step-aggregate-data-api-dto/patient-vital-sign-aggregate-data.html","searchKeys":["patientVitalSignAggregateData","val patientVitalSignAggregateData: AggregateDataApiDto<PatientVitalSignsApiDto>","application.presenter.api.model.SurgicalProcessStepAggregateDataApiDto.patientVitalSignAggregateData"]},{"name":"val patientVitalSignsAggregateData: AggregateData<PatientVitalSigns>","description":"entity.report.SurgeryProcessStepAggregateData.patientVitalSignsAggregateData","location":"surgery-report-microservice/entity.report/-surgery-process-step-aggregate-data/patient-vital-signs-aggregate-data.html","searchKeys":["patientVitalSignsAggregateData","val patientVitalSignsAggregateData: AggregateData<PatientVitalSigns>","entity.report.SurgeryProcessStepAggregateData.patientVitalSignsAggregateData"]},{"name":"val percentage: Int","description":"application.presenter.event.model.SaturationPercentageEventDto.percentage","location":"surgery-report-microservice/application.presenter.event.model/-saturation-percentage-event-dto/percentage.html","searchKeys":["percentage","val percentage: Int","application.presenter.event.model.SaturationPercentageEventDto.percentage"]},{"name":"val percentage: Percentage","description":"entity.healthcareuser.VitalSign.SaturationPercentage.percentage","location":"surgery-report-microservice/entity.healthcareuser/-vital-sign/-saturation-percentage/percentage.html","searchKeys":["percentage","val percentage: Percentage","entity.healthcareuser.VitalSign.SaturationPercentage.percentage"]},{"name":"val percentage: Percentage","description":"entity.measurements.Humidity.percentage","location":"surgery-report-microservice/entity.measurements/-humidity/percentage.html","searchKeys":["percentage","val percentage: Percentage","entity.measurements.Humidity.percentage"]},{"name":"val preOperatingRoom: RoomID","description":"entity.process.SurgicalProcess.preOperatingRoom","location":"surgery-report-microservice/entity.process/-surgical-process/pre-operating-room.html","searchKeys":["preOperatingRoom","val preOperatingRoom: RoomID","entity.process.SurgicalProcess.preOperatingRoom"]},{"name":"val preOperatingRoomId: String","description":"application.presenter.event.model.SurgicalProcessSummaryPayload.preOperatingRoomId","location":"surgery-report-microservice/application.presenter.event.model/-surgical-process-summary-payload/pre-operating-room-id.html","searchKeys":["preOperatingRoomId","val preOperatingRoomId: String","application.presenter.event.model.SurgicalProcessSummaryPayload.preOperatingRoomId"]},{"name":"val presence: Boolean? = null","description":"application.presenter.api.model.room.RoomEnvironmentalDataApiDto.presence","location":"surgery-report-microservice/application.presenter.api.model.room/-room-environmental-data-api-dto/presence.html","searchKeys":["presence","val presence: Boolean? = null","application.presenter.api.model.room.RoomEnvironmentalDataApiDto.presence"]},{"name":"val presence: Boolean? = null","description":"application.presenter.external.model.BuildingManagementDtoModel.EnvironmentalDataApiDto.presence","location":"surgery-report-microservice/application.presenter.external.model/-building-management-dto-model/-environmental-data-api-dto/presence.html","searchKeys":["presence","val presence: Boolean? = null","application.presenter.external.model.BuildingManagementDtoModel.EnvironmentalDataApiDto.presence"]},{"name":"val presence: Presence? = null","description":"entity.room.RoomEnvironmentalData.presence","location":"surgery-report-microservice/entity.room/-room-environmental-data/presence.html","searchKeys":["presence","val presence: Presence? = null","entity.room.RoomEnvironmentalData.presence"]},{"name":"val presenceDetected: Boolean","description":"entity.measurements.Presence.presenceDetected","location":"surgery-report-microservice/entity.measurements/-presence/presence-detected.html","searchKeys":["presenceDetected","val presenceDetected: Boolean","entity.measurements.Presence.presenceDetected"]},{"name":"val pressure: Int","description":"application.presenter.event.model.DiastolicBloodPressureEventDto.pressure","location":"surgery-report-microservice/application.presenter.event.model/-diastolic-blood-pressure-event-dto/pressure.html","searchKeys":["pressure","val pressure: Int","application.presenter.event.model.DiastolicBloodPressureEventDto.pressure"]},{"name":"val pressure: Int","description":"application.presenter.event.model.SystolicBloodPressureEventDto.pressure","location":"surgery-report-microservice/application.presenter.event.model/-systolic-blood-pressure-event-dto/pressure.html","searchKeys":["pressure","val pressure: Int","application.presenter.event.model.SystolicBloodPressureEventDto.pressure"]},{"name":"val pressure: Int","description":"entity.healthcareuser.VitalSign.DiastolicBloodPressure.pressure","location":"surgery-report-microservice/entity.healthcareuser/-vital-sign/-diastolic-blood-pressure/pressure.html","searchKeys":["pressure","val pressure: Int","entity.healthcareuser.VitalSign.DiastolicBloodPressure.pressure"]},{"name":"val pressure: Int","description":"entity.healthcareuser.VitalSign.SystolicBloodPressure.pressure","location":"surgery-report-microservice/entity.healthcareuser/-vital-sign/-systolic-blood-pressure/pressure.html","searchKeys":["pressure","val pressure: Int","entity.healthcareuser.VitalSign.SystolicBloodPressure.pressure"]},{"name":"val processId: String","description":"application.presenter.event.model.SurgicalProcessSummaryPayload.processId","location":"surgery-report-microservice/application.presenter.event.model/-surgical-process-summary-payload/process-id.html","searchKeys":["processId","val processId: String","application.presenter.event.model.SurgicalProcessSummaryPayload.processId"]},{"name":"val processStates: List<Pair<Instant, SurgicalProcessState>>","description":"entity.process.SurgicalProcess.processStates","location":"surgery-report-microservice/entity.process/-surgical-process/process-states.html","searchKeys":["processStates","val processStates: List<Pair<Instant, SurgicalProcessState>>","entity.process.SurgicalProcess.processStates"]},{"name":"val processStates: List<Pair<String, ProcessStateEventDto>>","description":"application.presenter.event.model.SurgicalProcessSummaryPayload.processStates","location":"surgery-report-microservice/application.presenter.event.model/-surgical-process-summary-payload/process-states.html","searchKeys":["processStates","val processStates: List<Pair<String, ProcessStateEventDto>>","application.presenter.event.model.SurgicalProcessSummaryPayload.processStates"]},{"name":"val processSteps: List<Pair<String, ProcessStepEventDto>>","description":"application.presenter.event.model.SurgicalProcessSummaryPayload.processSteps","location":"surgery-report-microservice/application.presenter.event.model/-surgical-process-summary-payload/process-steps.html","searchKeys":["processSteps","val processSteps: List<Pair<String, ProcessStepEventDto>>","application.presenter.event.model.SurgicalProcessSummaryPayload.processSteps"]},{"name":"val processType: String","description":"application.presenter.event.model.SurgicalProcessSummaryPayload.processType","location":"surgery-report-microservice/application.presenter.event.model/-surgical-process-summary-payload/process-type.html","searchKeys":["processType","val processType: String","application.presenter.event.model.SurgicalProcessSummaryPayload.processType"]},{"name":"val rate: Int","description":"application.presenter.event.model.RespiratoryRateEventDto.rate","location":"surgery-report-microservice/application.presenter.event.model/-respiratory-rate-event-dto/rate.html","searchKeys":["rate","val rate: Int","application.presenter.event.model.RespiratoryRateEventDto.rate"]},{"name":"val rate: Int","description":"entity.healthcareuser.VitalSign.RespiratoryRate.rate","location":"surgery-report-microservice/entity.healthcareuser/-vital-sign/-respiratory-rate/rate.html","searchKeys":["rate","val rate: Int","entity.healthcareuser.VitalSign.RespiratoryRate.rate"]},{"name":"val respiratoryRate: Int? = null","description":"application.presenter.api.model.healthcareuser.PatientVitalSignsApiDto.respiratoryRate","location":"surgery-report-microservice/application.presenter.api.model.healthcareuser/-patient-vital-signs-api-dto/respiratory-rate.html","searchKeys":["respiratoryRate","val respiratoryRate: Int? = null","application.presenter.api.model.healthcareuser.PatientVitalSignsApiDto.respiratoryRate"]},{"name":"val respiratoryRate: RespiratoryRateEventDto? = null","description":"application.presenter.event.model.PatientVitalSignsEventDto.respiratoryRate","location":"surgery-report-microservice/application.presenter.event.model/-patient-vital-signs-event-dto/respiratory-rate.html","searchKeys":["respiratoryRate","val respiratoryRate: RespiratoryRateEventDto? = null","application.presenter.event.model.PatientVitalSignsEventDto.respiratoryRate"]},{"name":"val respiratoryRate: VitalSign.RespiratoryRate? = null","description":"entity.healthcareuser.PatientVitalSigns.respiratoryRate","location":"surgery-report-microservice/entity.healthcareuser/-patient-vital-signs/respiratory-rate.html","searchKeys":["respiratoryRate","val respiratoryRate: VitalSign.RespiratoryRate? = null","entity.healthcareuser.PatientVitalSigns.respiratoryRate"]},{"name":"val roomID: RoomID","description":"entity.tracking.TrackingInfo.roomID","location":"surgery-report-microservice/entity.tracking/-tracking-info/room-i-d.html","searchKeys":["roomID","val roomID: RoomID","entity.tracking.TrackingInfo.roomID"]},{"name":"val roomID: String","description":"application.presenter.api.model.tracking.TrackingInformationApiDto.roomID","location":"surgery-report-microservice/application.presenter.api.model.tracking/-tracking-information-api-dto/room-i-d.html","searchKeys":["roomID","val roomID: String","application.presenter.api.model.tracking.TrackingInformationApiDto.roomID"]},{"name":"val roomId: String","description":"application.presenter.external.model.StaffTrackingDtoModel.TrackingInfoResultDto.roomId","location":"surgery-report-microservice/application.presenter.external.model/-staff-tracking-dto-model/-tracking-info-result-dto/room-id.html","searchKeys":["roomId","val roomId: String","application.presenter.external.model.StaffTrackingDtoModel.TrackingInfoResultDto.roomId"]},{"name":"val roomsInvolved: List<RoomApiDto>","description":"application.presenter.api.model.SurgeryReportApiDto.roomsInvolved","location":"surgery-report-microservice/application.presenter.api.model/-surgery-report-api-dto/rooms-involved.html","searchKeys":["roomsInvolved","val roomsInvolved: List<RoomApiDto>","application.presenter.api.model.SurgeryReportApiDto.roomsInvolved"]},{"name":"val roomsInvolved: Set<Room>","description":"entity.report.SurgeryReport.roomsInvolved","location":"surgery-report-microservice/entity.report/-surgery-report/rooms-involved.html","searchKeys":["roomsInvolved","val roomsInvolved: Set<Room>","entity.report.SurgeryReport.roomsInvolved"]},{"name":"val saturationPercentage: Double? = null","description":"application.presenter.api.model.healthcareuser.PatientVitalSignsApiDto.saturationPercentage","location":"surgery-report-microservice/application.presenter.api.model.healthcareuser/-patient-vital-signs-api-dto/saturation-percentage.html","searchKeys":["saturationPercentage","val saturationPercentage: Double? = null","application.presenter.api.model.healthcareuser.PatientVitalSignsApiDto.saturationPercentage"]},{"name":"val saturationPercentage: SaturationPercentageEventDto? = null","description":"application.presenter.event.model.PatientVitalSignsEventDto.saturationPercentage","location":"surgery-report-microservice/application.presenter.event.model/-patient-vital-signs-event-dto/saturation-percentage.html","searchKeys":["saturationPercentage","val saturationPercentage: SaturationPercentageEventDto? = null","application.presenter.event.model.PatientVitalSignsEventDto.saturationPercentage"]},{"name":"val saturationPercentage: VitalSign.SaturationPercentage? = null","description":"entity.healthcareuser.PatientVitalSigns.saturationPercentage","location":"surgery-report-microservice/entity.healthcareuser/-patient-vital-signs/saturation-percentage.html","searchKeys":["saturationPercentage","val saturationPercentage: VitalSign.SaturationPercentage? = null","entity.healthcareuser.PatientVitalSigns.saturationPercentage"]},{"name":"val startDateTime: Instant","description":"entity.report.SurgeryProcessStepAggregateData.startDateTime","location":"surgery-report-microservice/entity.report/-surgery-process-step-aggregate-data/start-date-time.html","searchKeys":["startDateTime","val startDateTime: Instant","entity.report.SurgeryProcessStepAggregateData.startDateTime"]},{"name":"val startDateTime: String","description":"application.presenter.api.model.SurgicalProcessStepAggregateDataApiDto.startDateTime","location":"surgery-report-microservice/application.presenter.api.model/-surgical-process-step-aggregate-data-api-dto/start-date-time.html","searchKeys":["startDateTime","val startDateTime: String","application.presenter.api.model.SurgicalProcessStepAggregateDataApiDto.startDateTime"]},{"name":"val std: E","description":"application.presenter.api.model.measurements.AggregateDataApiDto.std","location":"surgery-report-microservice/application.presenter.api.model.measurements/-aggregate-data-api-dto/std.html","searchKeys":["std","val std: E","application.presenter.api.model.measurements.AggregateDataApiDto.std"]},{"name":"val std: E","description":"entity.measurements.AggregateData.std","location":"surgery-report-microservice/entity.measurements/-aggregate-data/std.html","searchKeys":["std","val std: E","entity.measurements.AggregateData.std"]},{"name":"val stepData: Map<SurgicalProcessStep, SurgeryProcessStepAggregateData>","description":"entity.report.SurgeryReport.stepData","location":"surgery-report-microservice/entity.report/-surgery-report/step-data.html","searchKeys":["stepData","val stepData: Map<SurgicalProcessStep, SurgeryProcessStepAggregateData>","entity.report.SurgeryReport.stepData"]},{"name":"val stepData: Map<SurgicalProcessStepApiDto, SurgicalProcessStepAggregateDataApiDto>","description":"application.presenter.api.model.SurgeryReportApiDto.stepData","location":"surgery-report-microservice/application.presenter.api.model/-surgery-report-api-dto/step-data.html","searchKeys":["stepData","val stepData: Map<SurgicalProcessStepApiDto, SurgicalProcessStepAggregateDataApiDto>","application.presenter.api.model.SurgeryReportApiDto.stepData"]},{"name":"val stopDateTime: Instant?","description":"entity.report.SurgeryProcessStepAggregateData.stopDateTime","location":"surgery-report-microservice/entity.report/-surgery-process-step-aggregate-data/stop-date-time.html","searchKeys":["stopDateTime","val stopDateTime: Instant?","entity.report.SurgeryProcessStepAggregateData.stopDateTime"]},{"name":"val stopDateTime: String?","description":"application.presenter.api.model.SurgicalProcessStepAggregateDataApiDto.stopDateTime","location":"surgery-report-microservice/application.presenter.api.model/-surgical-process-step-aggregate-data-api-dto/stop-date-time.html","searchKeys":["stopDateTime","val stopDateTime: String?","application.presenter.api.model.SurgicalProcessStepAggregateDataApiDto.stopDateTime"]},{"name":"val surgeryDate: Instant","description":"entity.report.SurgeryReport.surgeryDate","location":"surgery-report-microservice/entity.report/-surgery-report/surgery-date.html","searchKeys":["surgeryDate","val surgeryDate: Instant","entity.report.SurgeryReport.surgeryDate"]},{"name":"val surgeryDate: String","description":"application.presenter.api.model.SurgeryReportApiDto.surgeryDate","location":"surgery-report-microservice/application.presenter.api.model/-surgery-report-api-dto/surgery-date.html","searchKeys":["surgeryDate","val surgeryDate: String","application.presenter.api.model.SurgeryReportApiDto.surgeryDate"]},{"name":"val surgeryDate: String","description":"application.presenter.api.model.SurgeryReportEntry.surgeryDate","location":"surgery-report-microservice/application.presenter.api.model/-surgery-report-entry/surgery-date.html","searchKeys":["surgeryDate","val surgeryDate: String","application.presenter.api.model.SurgeryReportEntry.surgeryDate"]},{"name":"val surgicalProcessDescription: String","description":"application.presenter.api.model.SurgeryReportApiDto.surgicalProcessDescription","location":"surgery-report-microservice/application.presenter.api.model/-surgery-report-api-dto/surgical-process-description.html","searchKeys":["surgicalProcessDescription","val surgicalProcessDescription: String","application.presenter.api.model.SurgeryReportApiDto.surgicalProcessDescription"]},{"name":"val surgicalProcessDescription: String","description":"application.presenter.api.model.SurgeryReportEntry.surgicalProcessDescription","location":"surgery-report-microservice/application.presenter.api.model/-surgery-report-entry/surgical-process-description.html","searchKeys":["surgicalProcessDescription","val surgicalProcessDescription: String","application.presenter.api.model.SurgeryReportEntry.surgicalProcessDescription"]},{"name":"val surgicalProcessDescription: String","description":"entity.report.SurgeryReport.surgicalProcessDescription","location":"surgery-report-microservice/entity.report/-surgery-report/surgical-process-description.html","searchKeys":["surgicalProcessDescription","val surgicalProcessDescription: String","entity.report.SurgeryReport.surgicalProcessDescription"]},{"name":"val surgicalProcessID: String","description":"application.presenter.api.model.SurgeryReportApiDto.surgicalProcessID","location":"surgery-report-microservice/application.presenter.api.model/-surgery-report-api-dto/surgical-process-i-d.html","searchKeys":["surgicalProcessID","val surgicalProcessID: String","application.presenter.api.model.SurgeryReportApiDto.surgicalProcessID"]},{"name":"val surgicalProcessID: String","description":"application.presenter.api.model.SurgeryReportEntry.surgicalProcessID","location":"surgery-report-microservice/application.presenter.api.model/-surgery-report-entry/surgical-process-i-d.html","searchKeys":["surgicalProcessID","val surgicalProcessID: String","application.presenter.api.model.SurgeryReportEntry.surgicalProcessID"]},{"name":"val surgicalProcessID: SurgicalProcessID","description":"entity.report.SurgeryReport.surgicalProcessID","location":"surgery-report-microservice/entity.report/-surgery-report/surgical-process-i-d.html","searchKeys":["surgicalProcessID","val surgicalProcessID: SurgicalProcessID","entity.report.SurgeryReport.surgicalProcessID"]},{"name":"val surname: String","description":"application.presenter.api.model.healthcareuser.HealthcareUserApiDto.surname","location":"surgery-report-microservice/application.presenter.api.model.healthcareuser/-healthcare-user-api-dto/surname.html","searchKeys":["surname","val surname: String","application.presenter.api.model.healthcareuser.HealthcareUserApiDto.surname"]},{"name":"val surname: String","description":"application.presenter.external.model.PatientManagementIntegrationDtoModel.HealthcareUserResultDto.surname","location":"surgery-report-microservice/application.presenter.external.model/-patient-management-integration-dto-model/-healthcare-user-result-dto/surname.html","searchKeys":["surname","val surname: String","application.presenter.external.model.PatientManagementIntegrationDtoModel.HealthcareUserResultDto.surname"]},{"name":"val surname: String","description":"entity.healthcareuser.HealthcareUser.surname","location":"surgery-report-microservice/entity.healthcareuser/-healthcare-user/surname.html","searchKeys":["surname","val surname: String","entity.healthcareuser.HealthcareUser.surname"]},{"name":"val systolicBloodPressure: Int? = null","description":"application.presenter.api.model.healthcareuser.PatientVitalSignsApiDto.systolicBloodPressure","location":"surgery-report-microservice/application.presenter.api.model.healthcareuser/-patient-vital-signs-api-dto/systolic-blood-pressure.html","searchKeys":["systolicBloodPressure","val systolicBloodPressure: Int? = null","application.presenter.api.model.healthcareuser.PatientVitalSignsApiDto.systolicBloodPressure"]},{"name":"val systolicBloodPressure: SystolicBloodPressureEventDto? = null","description":"application.presenter.event.model.PatientVitalSignsEventDto.systolicBloodPressure","location":"surgery-report-microservice/application.presenter.event.model/-patient-vital-signs-event-dto/systolic-blood-pressure.html","searchKeys":["systolicBloodPressure","val systolicBloodPressure: SystolicBloodPressureEventDto? = null","application.presenter.event.model.PatientVitalSignsEventDto.systolicBloodPressure"]},{"name":"val systolicBloodPressure: VitalSign.SystolicBloodPressure? = null","description":"entity.healthcareuser.PatientVitalSigns.systolicBloodPressure","location":"surgery-report-microservice/entity.healthcareuser/-patient-vital-signs/systolic-blood-pressure.html","searchKeys":["systolicBloodPressure","val systolicBloodPressure: VitalSign.SystolicBloodPressure? = null","entity.healthcareuser.PatientVitalSigns.systolicBloodPressure"]},{"name":"val taxCode: String","description":"application.presenter.api.model.healthcareuser.HealthcareUserApiDto.taxCode","location":"surgery-report-microservice/application.presenter.api.model.healthcareuser/-healthcare-user-api-dto/tax-code.html","searchKeys":["taxCode","val taxCode: String","application.presenter.api.model.healthcareuser.HealthcareUserApiDto.taxCode"]},{"name":"val taxCode: String","description":"application.presenter.external.model.PatientManagementIntegrationDtoModel.HealthcareUserResultDto.taxCode","location":"surgery-report-microservice/application.presenter.external.model/-patient-management-integration-dto-model/-healthcare-user-result-dto/tax-code.html","searchKeys":["taxCode","val taxCode: String","application.presenter.external.model.PatientManagementIntegrationDtoModel.HealthcareUserResultDto.taxCode"]},{"name":"val taxCode: TaxCode","description":"entity.healthcareuser.HealthcareUser.taxCode","location":"surgery-report-microservice/entity.healthcareuser/-healthcare-user/tax-code.html","searchKeys":["taxCode","val taxCode: TaxCode","entity.healthcareuser.HealthcareUser.taxCode"]},{"name":"val taxCode: TaxCode? = null","description":"entity.process.SurgicalProcess.taxCode","location":"surgery-report-microservice/entity.process/-surgical-process/tax-code.html","searchKeys":["taxCode","val taxCode: TaxCode? = null","entity.process.SurgicalProcess.taxCode"]},{"name":"val temperature: BuildingManagementDtoModel.ValueWithExplicitUnit<Double, BuildingManagementDtoModel.TemperatureUnitResultDto>? = null","description":"application.presenter.external.model.BuildingManagementDtoModel.EnvironmentalDataApiDto.temperature","location":"surgery-report-microservice/application.presenter.external.model/-building-management-dto-model/-environmental-data-api-dto/temperature.html","searchKeys":["temperature","val temperature: BuildingManagementDtoModel.ValueWithExplicitUnit<Double, BuildingManagementDtoModel.TemperatureUnitResultDto>? = null","application.presenter.external.model.BuildingManagementDtoModel.EnvironmentalDataApiDto.temperature"]},{"name":"val temperature: Temperature","description":"entity.healthcareuser.VitalSign.BodyTemperature.temperature","location":"surgery-report-microservice/entity.healthcareuser/-vital-sign/-body-temperature/temperature.html","searchKeys":["temperature","val temperature: Temperature","entity.healthcareuser.VitalSign.BodyTemperature.temperature"]},{"name":"val temperature: Temperature? = null","description":"entity.room.RoomEnvironmentalData.temperature","location":"surgery-report-microservice/entity.room/-room-environmental-data/temperature.html","searchKeys":["temperature","val temperature: Temperature? = null","entity.room.RoomEnvironmentalData.temperature"]},{"name":"val temperature: ValueWithUnit<Double>? = null","description":"application.presenter.api.model.room.RoomEnvironmentalDataApiDto.temperature","location":"surgery-report-microservice/application.presenter.api.model.room/-room-environmental-data-api-dto/temperature.html","searchKeys":["temperature","val temperature: ValueWithUnit<Double>? = null","application.presenter.api.model.room.RoomEnvironmentalDataApiDto.temperature"]},{"name":"val total: Int","description":"application.presenter.api.model.apiresponse.ApiResponses.ResponseEntryList.total","location":"surgery-report-microservice/application.presenter.api.model.apiresponse/-api-responses/-response-entry-list/total.html","searchKeys":["total","val total: Int","application.presenter.api.model.apiresponse.ApiResponses.ResponseEntryList.total"]},{"name":"val trackType: TrackApiDtoType","description":"application.presenter.api.model.tracking.TrackingInformationApiDto.trackType","location":"surgery-report-microservice/application.presenter.api.model.tracking/-tracking-information-api-dto/track-type.html","searchKeys":["trackType","val trackType: TrackApiDtoType","application.presenter.api.model.tracking.TrackingInformationApiDto.trackType"]},{"name":"val trackType: TrackType","description":"entity.tracking.TrackingInfo.trackType","location":"surgery-report-microservice/entity.tracking/-tracking-info/track-type.html","searchKeys":["trackType","val trackType: TrackType","entity.tracking.TrackingInfo.trackType"]},{"name":"val trackingType: StaffTrackingDtoModel.TrackingTypeResultDto","description":"application.presenter.external.model.StaffTrackingDtoModel.TrackingInfoResultDto.trackingType","location":"surgery-report-microservice/application.presenter.external.model/-staff-tracking-dto-model/-tracking-info-result-dto/tracking-type.html","searchKeys":["trackingType","val trackingType: StaffTrackingDtoModel.TrackingTypeResultDto","application.presenter.external.model.StaffTrackingDtoModel.TrackingInfoResultDto.trackingType"]},{"name":"val type: ImplantableMedicalDeviceApiDtoType","description":"application.presenter.api.model.medicaldevice.ImplantableMedicalDeviceApiDto.type","location":"surgery-report-microservice/application.presenter.api.model.medicaldevice/-implantable-medical-device-api-dto/type.html","searchKeys":["type","val type: ImplantableMedicalDeviceApiDtoType","application.presenter.api.model.medicaldevice.ImplantableMedicalDeviceApiDto.type"]},{"name":"val type: ImplantableMedicalDeviceType","description":"entity.medicaldevice.ImplantableMedicalDevice.type","location":"surgery-report-microservice/entity.medicaldevice/-implantable-medical-device/type.html","searchKeys":["type","val type: ImplantableMedicalDeviceType","entity.medicaldevice.ImplantableMedicalDevice.type"]},{"name":"val type: ImplantableMedicalDeviceTypeEventDto","description":"application.presenter.event.model.ImplantableMedicalDeviceEventDto.type","location":"surgery-report-microservice/application.presenter.event.model/-implantable-medical-device-event-dto/type.html","searchKeys":["type","val type: ImplantableMedicalDeviceTypeEventDto","application.presenter.event.model.ImplantableMedicalDeviceEventDto.type"]},{"name":"val type: MedicalTechnologyApiDtoType","description":"application.presenter.api.model.medicaldevice.MedicalTechnologyApiDto.type","location":"surgery-report-microservice/application.presenter.api.model.medicaldevice/-medical-technology-api-dto/type.html","searchKeys":["type","val type: MedicalTechnologyApiDtoType","application.presenter.api.model.medicaldevice.MedicalTechnologyApiDto.type"]},{"name":"val type: MedicalTechnologyType","description":"entity.medicaldevice.MedicalTechnology.type","location":"surgery-report-microservice/entity.medicaldevice/-medical-technology/type.html","searchKeys":["type","val type: MedicalTechnologyType","entity.medicaldevice.MedicalTechnology.type"]},{"name":"val type: MedicalTechnologyTypeEventDto","description":"application.presenter.event.model.MedicalTechnologyEventDto.type","location":"surgery-report-microservice/application.presenter.event.model/-medical-technology-event-dto/type.html","searchKeys":["type","val type: MedicalTechnologyTypeEventDto","application.presenter.event.model.MedicalTechnologyEventDto.type"]},{"name":"val type: RoomApiDtoType","description":"application.presenter.api.model.room.RoomApiDto.type","location":"surgery-report-microservice/application.presenter.api.model.room/-room-api-dto/type.html","searchKeys":["type","val type: RoomApiDtoType","application.presenter.api.model.room.RoomApiDto.type"]},{"name":"val type: RoomType","description":"entity.room.Room.type","location":"surgery-report-microservice/entity.room/-room/type.html","searchKeys":["type","val type: RoomType","entity.room.Room.type"]},{"name":"val unit: LightUnit","description":"entity.measurements.Luminosity.unit","location":"surgery-report-microservice/entity.measurements/-luminosity/unit.html","searchKeys":["unit","val unit: LightUnit","entity.measurements.Luminosity.unit"]},{"name":"val unit: String","description":"application.presenter.api.model.measurements.ValueWithUnit.unit","location":"surgery-report-microservice/application.presenter.api.model.measurements/-value-with-unit/unit.html","searchKeys":["unit","val unit: String","application.presenter.api.model.measurements.ValueWithUnit.unit"]},{"name":"val unit: T","description":"application.presenter.external.model.BuildingManagementDtoModel.ValueWithExplicitUnit.unit","location":"surgery-report-microservice/application.presenter.external.model/-building-management-dto-model/-value-with-explicit-unit/unit.html","searchKeys":["unit","val unit: T","application.presenter.external.model.BuildingManagementDtoModel.ValueWithExplicitUnit.unit"]},{"name":"val unit: TemperatureUnit","description":"entity.measurements.Temperature.unit","location":"surgery-report-microservice/entity.measurements/-temperature/unit.html","searchKeys":["unit","val unit: TemperatureUnit","entity.measurements.Temperature.unit"]},{"name":"val unit: TemperatureUnitEventDto","description":"application.presenter.event.model.BodyTemperatureEventDto.unit","location":"surgery-report-microservice/application.presenter.event.model/-body-temperature-event-dto/unit.html","searchKeys":["unit","val unit: TemperatureUnitEventDto","application.presenter.event.model.BodyTemperatureEventDto.unit"]},{"name":"val url: String?","description":"application.presenter.api.model.apiresponse.ApiResponses.ResponseEntry.url","location":"surgery-report-microservice/application.presenter.api.model.apiresponse/-api-responses/-response-entry/url.html","searchKeys":["url","val url: String?","application.presenter.api.model.apiresponse.ApiResponses.ResponseEntry.url"]},{"name":"val value: Double","description":"entity.measurements.Luminosity.value","location":"surgery-report-microservice/entity.measurements/-luminosity/value.html","searchKeys":["value","val value: Double","entity.measurements.Luminosity.value"]},{"name":"val value: Double","description":"entity.measurements.Percentage.value","location":"surgery-report-microservice/entity.measurements/-percentage/value.html","searchKeys":["value","val value: Double","entity.measurements.Percentage.value"]},{"name":"val value: Double","description":"entity.measurements.Temperature.value","location":"surgery-report-microservice/entity.measurements/-temperature/value.html","searchKeys":["value","val value: Double","entity.measurements.Temperature.value"]},{"name":"val value: String","description":"entity.healthcareuser.PatientID.value","location":"surgery-report-microservice/entity.healthcareuser/-patient-i-d/value.html","searchKeys":["value","val value: String","entity.healthcareuser.PatientID.value"]},{"name":"val value: String","description":"entity.healthcareuser.TaxCode.value","location":"surgery-report-microservice/entity.healthcareuser/-tax-code/value.html","searchKeys":["value","val value: String","entity.healthcareuser.TaxCode.value"]},{"name":"val value: String","description":"entity.healthprofessional.HealthProfessionalID.value","location":"surgery-report-microservice/entity.healthprofessional/-health-professional-i-d/value.html","searchKeys":["value","val value: String","entity.healthprofessional.HealthProfessionalID.value"]},{"name":"val value: String","description":"entity.medicaldevice.ImplantableMedicalDeviceID.value","location":"surgery-report-microservice/entity.medicaldevice/-implantable-medical-device-i-d/value.html","searchKeys":["value","val value: String","entity.medicaldevice.ImplantableMedicalDeviceID.value"]},{"name":"val value: String","description":"entity.medicaldevice.MedicalTechnologyID.value","location":"surgery-report-microservice/entity.medicaldevice/-medical-technology-i-d/value.html","searchKeys":["value","val value: String","entity.medicaldevice.MedicalTechnologyID.value"]},{"name":"val value: String","description":"entity.process.SurgicalProcessID.value","location":"surgery-report-microservice/entity.process/-surgical-process-i-d/value.html","searchKeys":["value","val value: String","entity.process.SurgicalProcessID.value"]},{"name":"val value: String","description":"entity.room.RoomID.value","location":"surgery-report-microservice/entity.room/-room-i-d/value.html","searchKeys":["value","val value: String","entity.room.RoomID.value"]},{"name":"val value: T","description":"application.presenter.api.model.measurements.ValueWithUnit.value","location":"surgery-report-microservice/application.presenter.api.model.measurements/-value-with-unit/value.html","searchKeys":["value","val value: T","application.presenter.api.model.measurements.ValueWithUnit.value"]},{"name":"val value: V","description":"application.presenter.external.model.BuildingManagementDtoModel.ValueWithExplicitUnit.value","location":"surgery-report-microservice/application.presenter.external.model/-building-management-dto-model/-value-with-explicit-unit/value.html","searchKeys":["value","val value: V","application.presenter.external.model.BuildingManagementDtoModel.ValueWithExplicitUnit.value"]},{"name":"val weight: Double","description":"application.presenter.external.model.PatientManagementIntegrationDtoModel.HealthcareUserResultDto.weight","location":"surgery-report-microservice/application.presenter.external.model/-patient-management-integration-dto-model/-healthcare-user-result-dto/weight.html","searchKeys":["weight","val weight: Double","application.presenter.external.model.PatientManagementIntegrationDtoModel.HealthcareUserResultDto.weight"]}]
